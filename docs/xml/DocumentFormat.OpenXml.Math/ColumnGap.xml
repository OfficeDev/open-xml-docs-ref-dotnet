<Type Name="ColumnGap" FullName="DocumentFormat.OpenXml.Math.ColumnGap">
  <TypeSignature Language="C#" Value="public class ColumnGap : DocumentFormat.OpenXml.Math.UnsignedShortType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ColumnGap extends DocumentFormat.OpenXml.Math.UnsignedShortType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Math.ColumnGap" />
  <TypeSignature Language="VB.NET" Value="Public Class ColumnGap&#xA;Inherits UnsignedShortType" />
  <TypeSignature Language="F#" Value="type ColumnGap = class&#xA;    inherit UnsignedShortType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Math.UnsignedShortType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Matrix Column Gap. When the object is serialized out as xml, its qualified name is m:cGp.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 `cGp (Matrix Column Gap)`  
  
 This element represents the  (custom) column gap spacing information; the default value is0 (which corresponds to 1 em). This value is interpreted differently depending on the value of cGpRule (§22.1.2.19). cGp is not used unless the value of cGpRule is 3 or 4. When cGpRule is omitted, the default spacing between matrix columns is 1 em (a val attribute value of *0*).  
  
 Whether the element is absent or present without the val attribute, the default of the val attribute is *0*.  
  
 The cGp gap spacing (also referred to as “Column Gap” or “Gap Width”) is added to the cSp (Minimum Matrix Column Width) to determine the total Matrix Column Spacing (distance between the same edges of different columns). The following image depicts how cGp and cSp work together to define matrix column spacing in a 2x2 matrix:  
  
 f4cd01e9-21ff-434c-8869-b676b957caf3  
  
 [*Example*: With a cGpRule value of 4, the matrix:   has 3 ems of  spacing between columns (3 ems = 6 * 0.5 ems). The matrix properties that demonstrate this element in use are:  
  
```xml  
<m:mPr>  
  <m:cGpRule  m:val="4"/>  
  <m:cGp  m:val="6"/>  
  <m:mcs>  
    <m:mc>  
      <m:mcPr>  
        <m:count m:val="2"/>  
        <m:mcJc m:val="center"/>  
      </m:mcPr>  
    </m:mc>  
  </m:mcs>  
</m:mPr>  
```  
  
 *end example*]  
  
 See the documentation for cGpRule for more information about how cGp is interpreted for each value of cGpRule.  
  
|Parent Elements|  
|---------------------|  
|mPr (§22.1.2.68)|  
  
|Attributes|Description|  
|----------------|-----------------|  
|val (Value)|Specifies the amount of space between columns of the parent element (for cGp/cSp) or rows (for rSp). The manner in which this value is determined depends on the setting of the rule of the parent element.<br /><br /> For cGp, if the rule is set to *3* (or "Exactly"), then the unit is interpreted as twips. If the rule is set to *4* (or "Multiple"), then the unit is interpreted as number of 0.5 em increments.<br /><br /> For cSp, this value is measured in twips. There is no corresponding cSpRule.<br /><br /> For rSp, if the rule is set to *3* (or "Exactly"), then the unit is interpreted as points. If the rule is set to *4* (or "Multiple"), then the unit is interpreted as half-lines.<br /><br /> The possible values for this attribute are defined by the *ST_UnSignedInteger* simple type (§22.1.3.14).|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_UnSignedInteger) is located in §A.6.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnGap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.ColumnGap.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the ColumnGap class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.ColumnGap.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="columnGap.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.ColumnGap.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Math.ColumnGap.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>