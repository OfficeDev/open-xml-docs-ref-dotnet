<Type Name="LimitLocation" FullName="DocumentFormat.OpenXml.Math.LimitLocation">
  <TypeSignature Language="C#" Value="public class LimitLocation : DocumentFormat.OpenXml.Math.LimitLocationType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LimitLocation extends DocumentFormat.OpenXml.Math.LimitLocationType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Math.LimitLocation" />
  <TypeSignature Language="VB.NET" Value="Public Class LimitLocation&#xA;Inherits LimitLocationType" />
  <TypeSignature Language="F#" Value="type LimitLocation = class&#xA;    inherit LimitLocationType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Math.LimitLocationType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>n-ary Limit Location. When the object is serialized out as xml, its qualified name is m:limLoc.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **limLoc (n-ary Limit Location)**  
  
 This element specifies the location of limits in n-ary operators. Limits can be either centered above and below the n-ary operator (shown in the first summation below), or positioned just to the right of the operator (shown in the second summation below).  
  
 When the element is absent, the default value of this property is ignored and the intLim (for integral n-ary operator objects) and naryLim (for all other n-ary operator objects) options are looked to for the limit placement.  
  
 Ultimately, when this element is omitted, the default location is *undOvr* in display mode and *subSup* otherwise. When the element is present and the val attribute is absent, the default of the val attribute *undOvr*. [*Example*: The XML representing the relevant properties of the second summation above (subSup) is:  
  
```xml  
<m:naryPr>  
  <m:chr  m:val="&#8721;"/>  
  <m:limLoc m:val="subSup"/>  
  <m:grow m:val="1"/>  
</m:naryPr>  
```  
  
 *end example*]  
  
|Parent Elements|  
|---------------------|  
|naryPr (§22.1.2.72)|  
  
|Attributes|Description|  
|----------------|-----------------|  
|val (Value)|Specifies the default location of limits on the parent object. Possible values are *subSup* and *undOvr*.<br /><br /> The possible values for this attribute are defined by the *ST_LimLoc* simple type (§22.1.3.8).|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_LimLoc) is located in §A.6.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LimitLocation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.LimitLocation.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the LimitLocation class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.LimitLocation.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="limitLocation.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.LimitLocation.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Math.LimitLocation.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>