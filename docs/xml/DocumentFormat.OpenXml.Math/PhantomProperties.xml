<Type Name="PhantomProperties" FullName="DocumentFormat.OpenXml.Math.PhantomProperties">
  <TypeSignature Language="C#" Value="public class PhantomProperties : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PhantomProperties extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Math.PhantomProperties" />
  <TypeSignature Language="VB.NET" Value="Public Class PhantomProperties&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type PhantomProperties = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Math.ShowPhantom))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Math.ZeroWidth))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Math.ZeroAscent))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Math.ZeroDescent))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Math.Transparent))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Math.ControlProperties))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Phantom Properties. When the object is serialized out as xml, its qualified name is m:phantPr.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **phantPr (Phantom Properties)**  
  
 This element specifies properties of the Phantom object, including whether the phantom is hidden or visible, and the amount of space that is taken into account when laying out text and objects around phantoms.  
  
|Parent Elements|  
|---------------------|  
|phant (§22.1.2.81)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|ctrlPr (Control Properties)|§22.1.2.23|  
|show (Phantom Show)|§22.1.2.96|  
|transp (Transparent (Phantom))|§22.1.2.117|  
|zeroAsc (Phantom Zero Ascent)|§22.1.2.122|  
|zeroDesc (Phantom Zero Descent)|§22.1.2.123|  
|zeroWid (Phantom Zero Width)|§22.1.2.124|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_PhantPr) is located in §A.6.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PhantomProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.PhantomProperties.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the PhantomProperties class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PhantomProperties (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.PhantomProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Math.PhantomProperties : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Math.PhantomProperties" Usage="new DocumentFormat.OpenXml.Math.PhantomProperties childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the PhantomProperties class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PhantomProperties (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.PhantomProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Math.PhantomProperties : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Math.PhantomProperties" Usage="new DocumentFormat.OpenXml.Math.PhantomProperties childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the PhantomProperties class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PhantomProperties (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.PhantomProperties.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Math.PhantomProperties : string -&gt; DocumentFormat.OpenXml.Math.PhantomProperties" Usage="new DocumentFormat.OpenXml.Math.PhantomProperties outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the PhantomProperties class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.PhantomProperties.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="phantomProperties.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlProperties">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Math.ControlProperties ControlProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Math.ControlProperties ControlProperties" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.PhantomProperties.ControlProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlProperties As ControlProperties" />
      <MemberSignature Language="F#" Value="member this.ControlProperties : DocumentFormat.OpenXml.Math.ControlProperties with get, set" Usage="DocumentFormat.OpenXml.Math.PhantomProperties.ControlProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Math.ControlProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ControlProperties. Represents the following element tag in the schema: m:ctrlPr</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Math.ControlProperties" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:m = http://schemas.openxmlformats.org/officeDocument/2006/math
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.PhantomProperties.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Math.PhantomProperties.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPhantom">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Math.ShowPhantom ShowPhantom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Math.ShowPhantom ShowPhantom" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.PhantomProperties.ShowPhantom" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPhantom As ShowPhantom" />
      <MemberSignature Language="F#" Value="member this.ShowPhantom : DocumentFormat.OpenXml.Math.ShowPhantom with get, set" Usage="DocumentFormat.OpenXml.Math.PhantomProperties.ShowPhantom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Math.ShowPhantom</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Phantom Show. Represents the following element tag in the schema: m:show</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Math.ShowPhantom" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:m = http://schemas.openxmlformats.org/officeDocument/2006/math
            </remark>
      </Docs>
    </Member>
    <Member MemberName="Transparent">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Math.Transparent Transparent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Math.Transparent Transparent" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.PhantomProperties.Transparent" />
      <MemberSignature Language="VB.NET" Value="Public Property Transparent As Transparent" />
      <MemberSignature Language="F#" Value="member this.Transparent : DocumentFormat.OpenXml.Math.Transparent with get, set" Usage="DocumentFormat.OpenXml.Math.PhantomProperties.Transparent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Math.Transparent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Transparent (Phantom). Represents the following element tag in the schema: m:transp</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Math.Transparent" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:m = http://schemas.openxmlformats.org/officeDocument/2006/math
            </remark>
      </Docs>
    </Member>
    <Member MemberName="ZeroAscent">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Math.ZeroAscent ZeroAscent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Math.ZeroAscent ZeroAscent" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.PhantomProperties.ZeroAscent" />
      <MemberSignature Language="VB.NET" Value="Public Property ZeroAscent As ZeroAscent" />
      <MemberSignature Language="F#" Value="member this.ZeroAscent : DocumentFormat.OpenXml.Math.ZeroAscent with get, set" Usage="DocumentFormat.OpenXml.Math.PhantomProperties.ZeroAscent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Math.ZeroAscent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Phantom Zero Ascent. Represents the following element tag in the schema: m:zeroAsc</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Math.ZeroAscent" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:m = http://schemas.openxmlformats.org/officeDocument/2006/math
            </remark>
      </Docs>
    </Member>
    <Member MemberName="ZeroDescent">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Math.ZeroDescent ZeroDescent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Math.ZeroDescent ZeroDescent" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.PhantomProperties.ZeroDescent" />
      <MemberSignature Language="VB.NET" Value="Public Property ZeroDescent As ZeroDescent" />
      <MemberSignature Language="F#" Value="member this.ZeroDescent : DocumentFormat.OpenXml.Math.ZeroDescent with get, set" Usage="DocumentFormat.OpenXml.Math.PhantomProperties.ZeroDescent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Math.ZeroDescent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Phantom Zero Descent. Represents the following element tag in the schema: m:zeroDesc</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Math.ZeroDescent" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:m = http://schemas.openxmlformats.org/officeDocument/2006/math
            </remark>
      </Docs>
    </Member>
    <Member MemberName="ZeroWidth">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Math.ZeroWidth ZeroWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Math.ZeroWidth ZeroWidth" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.PhantomProperties.ZeroWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property ZeroWidth As ZeroWidth" />
      <MemberSignature Language="F#" Value="member this.ZeroWidth : DocumentFormat.OpenXml.Math.ZeroWidth with get, set" Usage="DocumentFormat.OpenXml.Math.PhantomProperties.ZeroWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Math.ZeroWidth</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Phantom Zero Width. Represents the following element tag in the schema: m:zeroWid</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Math.ZeroWidth" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:m = http://schemas.openxmlformats.org/officeDocument/2006/math
            </remark>
      </Docs>
    </Member>
  </Members>
</Type>