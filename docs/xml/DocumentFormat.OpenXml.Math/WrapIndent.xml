<Type Name="WrapIndent" FullName="DocumentFormat.OpenXml.Math.WrapIndent">
  <TypeSignature Language="C#" Value="public class WrapIndent : DocumentFormat.OpenXml.Math.TwipsMeasureType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WrapIndent extends DocumentFormat.OpenXml.Math.TwipsMeasureType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Math.WrapIndent" />
  <TypeSignature Language="VB.NET" Value="Public Class WrapIndent&#xA;Inherits TwipsMeasureType" />
  <TypeSignature Language="F#" Value="type WrapIndent = class&#xA;    inherit TwipsMeasureType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Math.TwipsMeasureType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wrap Indent. When the object is serialized out as xml, its qualified name is m:wrapIndent.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **wrapIndent (Wrap Indent)**  
  
 This element specifies the indent of the wrapped line of an instance of mathematical text. The line or lines of a wrapped instance of mathematical text after the line break can either be indented by a specified amount from the left margin, or right aligned. The default indent is 1". In other words, whether the element is absent or present without the val attribute, the default of the val attribute is *1440* twips (or 1 inch).  
  
 [*Example*: The XML below demonstrates wrapIndent in use:  
  
```xml  
<m:mathPr>  
  <m:mathFont m:val="Cambria Math"/>  
  <m:brkBin m:val="before"/>  
  <m:brkBinSub m:val="--"/>  
  <m:smallFrac m:val="0"/>  
  <m:dispDef/>  
  <m:lMargin m:val="0"/>  
  <m:rMargin m:val="0"/>  
  <m:defJc m:val="centerGroup"/>  
  <m:wrapIndent m:val="1440"/>  
  <m:intLim m:val="subSup"/>  
  <m:naryLim m:val="undOvr"/>  
</m:mathPr>  
```  
  
 *end example*]  
  
|Parent Elements|  
|---------------------|  
|mathPr (§22.1.2.62)|  
  
|Attributes|Description|  
|----------------|-----------------|  
|val (Value)|Specifies the value, in twips, of the parent element.<br /><br /> The possible values for this attribute are defined by the *ST_TwipsMeasure* simple type (§22.9.2.14).|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_TwipsMeasure) is located in §A.6.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WrapIndent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.WrapIndent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the WrapIndent class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.WrapIndent.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="wrapIndent.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.WrapIndent.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Math.WrapIndent.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>