<Type Name="BaseJustification" FullName="DocumentFormat.OpenXml.Math.BaseJustification">
  <TypeSignature Language="C#" Value="public class BaseJustification : DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BaseJustification extends DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Math.BaseJustification" />
  <TypeSignature Language="VB.NET" Value="Public Class BaseJustification&#xA;Inherits OpenXmlLeafElement" />
  <TypeSignature Language="F#" Value="type BaseJustification = class&#xA;    inherit OpenXmlLeafElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlLeafElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Equation Array Base Justification. When the object is serialized out as xml, its qualified name is m:baseJc.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **baseJc (Matrix Base Justification)**  
  
 This element specifies the justification of the matrix. Text outside of the matrix can be aligned with the bottom, top, or center of a matrix object. If this element is omitted, the matrix assumes center justification. In other words, whether the element is absent or present without the val attribute, the default of the val attribute is *center*.  
  
 [*Example*: This matrix has center baseJc:  
  
 This matrix has top baseJc:  
  
 This matrix has bottom baseJc:  
  
 The XML below represents the matrix with top baseJC:  
  
```xml  
<m:d>  
  <m:dPr>  
    <m:shp  m:val="match"/>  
  </m:dPr>  
  <m:e>  
    <m:m>  
      <m:mPr>  
        <m:baseJc m:val="top"/>  
        <m:mcs>  
          <m:mc>  
            <m:mcPr>  
                            <m:count m:val="2"/>  
              <m:mcJc  m:val="center"/>  
            </m:mcPr>  
          </m:mc>  
        </m:mcs>  
      </m:mPr>  
      <m:mr>  
        <m:e>  
          <m:r>  
            <m:rPr>  
              <m:scr  m:val="roman"/>  
              <m:sty m:val="p"/>  
            </m:rPr>  
            <m:t>1</m:t>  
          </m:r>  
        </m:e>  
        <m:e>  
          <m:r>  
            <m:rPr>  
              <m:scr  m:val="roman"/>  
              <m:sty  m:val="p"/>  
            </m:rPr>  
            <m:t>2</m:t>  
          </m:r>  
        </m:e>  
      </m:mr>  
      <m:mr>  
        <m:e>  
          <m:r>  
            <m:rPr>  
              <m:scr  m:val="roman"/>  
              <m:sty  m:val="p"/>  
            </m:rPr>  
            <m:t>3</m:t>  
          </m:r>  
        </m:e>  
        <m:e>  
          <m:r>  
            <m:rPr>  
              <m:scr  m:val="roman"/>  
              <m:sty  m:val="p"/>  
            </m:rPr>  
            <m:t>4</m:t>  
          </m:r>  
        </m:e>  
      </m:mr>  
      <m:mr>  
        <m:e>  
          <m:r>  
            <m:rPr>  
              <m:scr  m:val="roman"/>  
              <m:sty  m:val="p"/>  
            </m:rPr>  
            <m:t>5</m:t>  
          </m:r>  
        </m:e>  
        <m:e>  
          <m:r>  
            <m:rPr>  
              <m:scr  m:val="roman"/>  
              <m:sty  m:val="p"/>  
            </m:rPr>  
            <m:t>6</m:t>  
          </m:r>  
        </m:e>  
      </m:mr>  
    </m:m>  
  </m:e>  
</m:d>  
```  
  
 Because the matrix base justification is top, the top row of the matrix is lined up with the baseline of the rest of the line.  
  
 *end example*]  
  
|Parent Elements|  
|---------------------|  
|eqArrPr (§22.1.2.35); mPr (§22.1.2.68)|  
  
|Attributes|Description|  
|----------------|-----------------|  
|val (Value)|Specifies the vertical justification parent element respect to surrounding text. Possible values are *top*, *bottom*, and *center*. [*Example*: The following examples illustrate baseJc on the matrix object m.<br /><br /> This matrix has *center* baseJc:<br /><br /> This matrix has *top* baseJc:<br /><br /> This matrix has *bottom* baseJc:<br /><br /> The possible values for this attribute are defined by the *ST_YAlign* simple type (§22.9.2.20).|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_YAlign) is located in §A.6.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BaseJustification ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.BaseJustification.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the BaseJustification class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.BaseJustification.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="baseJustification.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.BaseJustification.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Math.BaseJustification.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Val">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Math.VerticalAlignmentValues&gt; Val { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Math.VerticalAlignmentValues&gt; Val" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.BaseJustification.Val" />
      <MemberSignature Language="VB.NET" Value="Public Property Val As EnumValue(Of VerticalAlignmentValues)" />
      <MemberSignature Language="F#" Value="member this.Val : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Math.VerticalAlignmentValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Math.BaseJustification.Val" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(21, "val")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Math.VerticalAlignmentValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Value.Represents the following attribute in the schema: m:val</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 Specifies the vertical justification parent element respect to surrounding text. Possible values are `top`, `bot`, and `center`. The following examples illustrate `baseJc` on the matrix object `m`.  
  
 This matrix has `center``baseJc`:  5359b397-cee3-4c71-a9a8-390270b9d23d  
  
 This matrix has `top``baseJc`:  66857fa3-2b06-46f3-b7d7-abdc9c050ad8  
  
 This matrix has `bot``baseJc`:  9702e906-4d0d-4fca-91e7-366f6d598dd0  
  
 The possible values for this attribute are defined by the `ST_YAlign` simple type.  
  
 ]]></format>
        </remarks>
        <remark> xmlns:m=http://schemas.openxmlformats.org/officeDocument/2006/math
            </remark>
      </Docs>
    </Member>
  </Members>
</Type>