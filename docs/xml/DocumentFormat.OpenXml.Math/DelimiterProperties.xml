<Type Name="DelimiterProperties" FullName="DocumentFormat.OpenXml.Math.DelimiterProperties">
  <TypeSignature Language="C#" Value="public class DelimiterProperties : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DelimiterProperties extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Math.DelimiterProperties" />
  <TypeSignature Language="VB.NET" Value="Public Class DelimiterProperties&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type DelimiterProperties = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Math.BeginChar))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Math.SeparatorChar))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Math.EndChar))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Math.GrowOperators))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Math.Shape))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Math.ControlProperties))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Delimiter Properties. When the object is serialized out as xml, its qualified name is m:dPr.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **dPr (Delimiter Properties)**  
  
 This element specifies the properties of d, including the enclosing and separating characters, and the properties that affect the shape of the delimiters. [*Example*:  
  
 is represented by the following XML:  
  
```xml  
<m:d>  
  <m:dPr>  
    <m:begChr m:val="["/>  
    <m:endChr m:val="]"/>  
  </m:dPr>  
  <m:e>  
    <m:r>  
      <m:t>a+b</m:t>  
    </m:r>  
  </m:e>  
</m:d>  
```  
  
 *end example*]  
  
|Parent Elements|  
|---------------------|  
|d (§22.1.2.24)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|begChr (Delimiter Beginning Character)|§22.1.2.10|  
|ctrlPr (Control Properties)|§22.1.2.23|  
|endChr (Delimiter Ending Character)|§22.1.2.33|  
|grow (n-ary Grow)|§22.1.2.43|  
|sepChr (Delimiter Separator Character)|§22.1.2.95|  
|shp (Shape (Delimiters))|§22.1.2.97|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_DPr) is located in §A.6.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimiterProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.DelimiterProperties.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the DelimiterProperties class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimiterProperties (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.DelimiterProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Math.DelimiterProperties : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Math.DelimiterProperties" Usage="new DocumentFormat.OpenXml.Math.DelimiterProperties childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the DelimiterProperties class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimiterProperties (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.DelimiterProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Math.DelimiterProperties : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Math.DelimiterProperties" Usage="new DocumentFormat.OpenXml.Math.DelimiterProperties childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the DelimiterProperties class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimiterProperties (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.DelimiterProperties.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Math.DelimiterProperties : string -&gt; DocumentFormat.OpenXml.Math.DelimiterProperties" Usage="new DocumentFormat.OpenXml.Math.DelimiterProperties outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the DelimiterProperties class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginChar">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Math.BeginChar BeginChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Math.BeginChar BeginChar" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.DelimiterProperties.BeginChar" />
      <MemberSignature Language="VB.NET" Value="Public Property BeginChar As BeginChar" />
      <MemberSignature Language="F#" Value="member this.BeginChar : DocumentFormat.OpenXml.Math.BeginChar with get, set" Usage="DocumentFormat.OpenXml.Math.DelimiterProperties.BeginChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Math.BeginChar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delimiter Beginning Character. Represents the following element tag in the schema: m:begChr</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Math.BeginChar" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:m = http://schemas.openxmlformats.org/officeDocument/2006/math
            </remark>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.DelimiterProperties.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="delimiterProperties.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlProperties">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Math.ControlProperties ControlProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Math.ControlProperties ControlProperties" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.DelimiterProperties.ControlProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlProperties As ControlProperties" />
      <MemberSignature Language="F#" Value="member this.ControlProperties : DocumentFormat.OpenXml.Math.ControlProperties with get, set" Usage="DocumentFormat.OpenXml.Math.DelimiterProperties.ControlProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Math.ControlProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ControlProperties. Represents the following element tag in the schema: m:ctrlPr</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Math.ControlProperties" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:m = http://schemas.openxmlformats.org/officeDocument/2006/math
            </remark>
      </Docs>
    </Member>
    <Member MemberName="EndChar">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Math.EndChar EndChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Math.EndChar EndChar" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.DelimiterProperties.EndChar" />
      <MemberSignature Language="VB.NET" Value="Public Property EndChar As EndChar" />
      <MemberSignature Language="F#" Value="member this.EndChar : DocumentFormat.OpenXml.Math.EndChar with get, set" Usage="DocumentFormat.OpenXml.Math.DelimiterProperties.EndChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Math.EndChar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delimiter Ending Character. Represents the following element tag in the schema: m:endChr</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Math.EndChar" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:m = http://schemas.openxmlformats.org/officeDocument/2006/math
            </remark>
      </Docs>
    </Member>
    <Member MemberName="GrowOperators">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Math.GrowOperators GrowOperators { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Math.GrowOperators GrowOperators" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.DelimiterProperties.GrowOperators" />
      <MemberSignature Language="VB.NET" Value="Public Property GrowOperators As GrowOperators" />
      <MemberSignature Language="F#" Value="member this.GrowOperators : DocumentFormat.OpenXml.Math.GrowOperators with get, set" Usage="DocumentFormat.OpenXml.Math.DelimiterProperties.GrowOperators" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Math.GrowOperators</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delimiter Grow. Represents the following element tag in the schema: m:grow</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Math.GrowOperators" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:m = http://schemas.openxmlformats.org/officeDocument/2006/math
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.DelimiterProperties.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Math.DelimiterProperties.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparatorChar">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Math.SeparatorChar SeparatorChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Math.SeparatorChar SeparatorChar" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.DelimiterProperties.SeparatorChar" />
      <MemberSignature Language="VB.NET" Value="Public Property SeparatorChar As SeparatorChar" />
      <MemberSignature Language="F#" Value="member this.SeparatorChar : DocumentFormat.OpenXml.Math.SeparatorChar with get, set" Usage="DocumentFormat.OpenXml.Math.DelimiterProperties.SeparatorChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Math.SeparatorChar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delimiter Separator Character. Represents the following element tag in the schema: m:sepChr</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Math.SeparatorChar" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:m = http://schemas.openxmlformats.org/officeDocument/2006/math
            </remark>
      </Docs>
    </Member>
    <Member MemberName="Shape">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Math.Shape Shape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Math.Shape Shape" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.DelimiterProperties.Shape" />
      <MemberSignature Language="VB.NET" Value="Public Property Shape As Shape" />
      <MemberSignature Language="F#" Value="member this.Shape : DocumentFormat.OpenXml.Math.Shape with get, set" Usage="DocumentFormat.OpenXml.Math.DelimiterProperties.Shape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Math.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Shape (Delimiters). Represents the following element tag in the schema: m:shp</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Math.Shape" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:m = http://schemas.openxmlformats.org/officeDocument/2006/math
            </remark>
      </Docs>
    </Member>
  </Members>
</Type>