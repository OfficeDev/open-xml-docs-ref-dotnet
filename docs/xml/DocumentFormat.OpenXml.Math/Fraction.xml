<Type Name="Fraction" FullName="DocumentFormat.OpenXml.Math.Fraction">
  <TypeSignature Language="C#" Value="public class Fraction : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Fraction extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Math.Fraction" />
  <TypeSignature Language="VB.NET" Value="Public Class Fraction&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type Fraction = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Math.FractionProperties))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Math.Numerator))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Math.Denominator))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fraction Function. When the object is serialized out as xml, its qualified name is m:f.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **f (Fraction Object)**  
  
 This element specifies the fraction object, consisting of a numerator and denominator separated by a fraction bar. The fraction bar can be horizontal or diagonal, depending on the fraction properties. The fraction object is also used to represent the stack function, which places one element above another, with no fraction bar. [*Example*: Examples of fractions are:  
  
 Bar Fraction:  
  
 Skewed Fraction:  
  
 Linear Fraction:  
  
 No-Bar Fraction (Stack):  
  
 The fraction  is represented as:  
  
```xml  
<m:f>   <m:fPr>  
    <m:type  m:val="skw"/>  
  </m:fPr>  
  <m:num>  
    <m:r>  
      <m:t>a</m:t>  
    </m:r>  
  </m:num>  
  <m:den>  
    <m:r>  
      <m:t>b</m:t>  
    </m:r>  
  </m:den>  
</m:f>  
```  
  
 *end example*]  
  
|Parent Elements|  
|---------------------|  
|deg (§22.1.2.26); del (§17.13.5.14); den (§22.1.2.28); e (§22.1.2.32); fName (§22.1.2.37); ins (§17.13.5.18); lim (§22.1.2.52); moveFrom (§17.13.5.22); moveTo (§17.13.5.25); num (§22.1.2.75); oMath (§22.1.2.77); sub (§22.1.2.112); sup (§22.1.2.114)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|den (Denominator)|§22.1.2.28|  
|fPr (Fraction Properties)|§22.1.2.38|  
|num (Numerator)|§22.1.2.75|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_F) is located in §A.6.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Fraction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.Fraction.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the Fraction class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Fraction (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.Fraction.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Math.Fraction : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Math.Fraction" Usage="new DocumentFormat.OpenXml.Math.Fraction childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the Fraction class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Fraction (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.Fraction.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Math.Fraction : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Math.Fraction" Usage="new DocumentFormat.OpenXml.Math.Fraction childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the Fraction class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Fraction (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.Fraction.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Math.Fraction : string -&gt; DocumentFormat.OpenXml.Math.Fraction" Usage="new DocumentFormat.OpenXml.Math.Fraction outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the Fraction class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.Fraction.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="fraction.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Denominator">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Math.Denominator Denominator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Math.Denominator Denominator" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.Fraction.Denominator" />
      <MemberSignature Language="VB.NET" Value="Public Property Denominator As Denominator" />
      <MemberSignature Language="F#" Value="member this.Denominator : DocumentFormat.OpenXml.Math.Denominator with get, set" Usage="DocumentFormat.OpenXml.Math.Fraction.Denominator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Math.Denominator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Denominator. Represents the following element tag in the schema: m:den</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Math.Denominator" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:m = http://schemas.openxmlformats.org/officeDocument/2006/math
            </remark>
      </Docs>
    </Member>
    <Member MemberName="FractionProperties">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Math.FractionProperties FractionProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Math.FractionProperties FractionProperties" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.Fraction.FractionProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property FractionProperties As FractionProperties" />
      <MemberSignature Language="F#" Value="member this.FractionProperties : DocumentFormat.OpenXml.Math.FractionProperties with get, set" Usage="DocumentFormat.OpenXml.Math.Fraction.FractionProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Math.FractionProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Fraction Properties. Represents the following element tag in the schema: m:fPr</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Math.FractionProperties" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:m = http://schemas.openxmlformats.org/officeDocument/2006/math
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.Fraction.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Math.Fraction.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Numerator">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Math.Numerator Numerator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Math.Numerator Numerator" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.Fraction.Numerator" />
      <MemberSignature Language="VB.NET" Value="Public Property Numerator As Numerator" />
      <MemberSignature Language="F#" Value="member this.Numerator : DocumentFormat.OpenXml.Math.Numerator with get, set" Usage="DocumentFormat.OpenXml.Math.Fraction.Numerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Math.Numerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Numerator. Represents the following element tag in the schema: m:num</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Math.Numerator" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:m = http://schemas.openxmlformats.org/officeDocument/2006/math
            </remark>
      </Docs>
    </Member>
  </Members>
</Type>