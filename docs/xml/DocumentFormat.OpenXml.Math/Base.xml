<Type Name="Base" FullName="DocumentFormat.OpenXml.Math.Base">
  <TypeSignature Language="C#" Value="public class Base : DocumentFormat.OpenXml.Math.OfficeMathArgumentType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Base extends DocumentFormat.OpenXml.Math.OfficeMathArgumentType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Math.Base" />
  <TypeSignature Language="VB.NET" Value="Public Class Base&#xA;Inherits OfficeMathArgumentType" />
  <TypeSignature Language="F#" Value="type Base = class&#xA;    inherit OfficeMathArgumentType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Math.OfficeMathArgumentType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Base. When the object is serialized out as xml, its qualified name is m:e.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **e (Element (Argument))**  
  
 This tag, which is an abbreviation for “element”, serves several functions (18 total) including that of the base argument of a mathematical object or function, the elements in an array, and the elements in boxes. If all subelements are omitted, this element specifies the presence of an empty argument. [*Example*: The numerator of this function is an empty argument: . *end example*] [*Note*: The tag was shortened to e to improve readability over “element”. “Element” was preferred over “Base” because “Element” sounded more neutral and appropriate to its multiple uses. *end note*]  
  
 The following table shows the 18 different uses for e:  
  
 Parent Element  
  
 Use  
  
 acc  
  
 Accent base argument  
  
 bar  
  
 Argument to which the bar is applied  
  
 borderBox  
  
 Argument around which the border box is drawn  
  
 box  
  
 Argument inside the abstract box  
  
 d  
  
 Argument inside the delimiters  
  
 eqArr  
  
 Each instance of mathematical text in the single-column array  
  
 func  
  
 Math argument list of the function  
  
 groupChr  
  
 Group character base  
  
 limLow  
  
 Base of the lower limit  
  
 limUpp  
  
 Base of the upper limit  
  
 mr  
  
 Each element in the matrix row  
  
 nary  
  
 n-ary and, e.g., integrand for an integral, summand for a summation  
  
 phant  
  
 Argument for the phantom  
  
 rad  
  
 Radicand  
  
 sPre  
  
 Base of the prescript object  
  
 sSub  
  
 Base of the subscript object  
  
 sSubSup  
  
 Base of the subsup object  
  
 sSup  
  
 Base of the superscript object  
  
 [*Example*: For example, the func    has fName and e :  
  
```xml  
<m:func>   <m:fName>  
    <m:limLow>  
      <m:e>  
        <m:r>  
          <m:rPr>  
            <m:scr m:val="roman"/>  
            <m:sty  m:val="p"/>  
          </m:rPr>  
          <m:t>  
lim</m:t>  
        </m:r>  
      </m:e>  
      <m:lim>  
        <m:r>  
          <m:t>n&#8594;&#8734;</m:t>  
        </m:r>  
      </m:lim>  
    </m:limLow>  
  </m:fName>  
  <m:e>  
    <m:sSub>  
      <m:e>  
        <m:r>  
          <m:t>x</m:t>  
        </m:r>  
      </m:e>  
      <m:sub>  
        <m:r>  
          <m:t>n</m:t>  
        </m:r>  
      </m:sub>  
    </m:sSub>  
  </m:e>  
</m:func>  
```  
  
 *end example*]  
  
|Parent Elements|  
|---------------------|  
|acc (§22.1.2.1); bar (§22.1.2.7); borderBox (§22.1.2.11); box (§22.1.2.13); d (§22.1.2.24); eqArr (§22.1.2.34); func (§22.1.2.39); groupChr (§22.1.2.41); limLow (§22.1.2.54); limUpp (§22.1.2.56); mr (§22.1.2.69); nary (§22.1.2.70); phant (§22.1.2.81); rad (§22.1.2.88); sPre (§22.1.2.99); sSub (§22.1.2.101); sSubSup (§22.1.2.103); sSup (§22.1.2.105)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|acc (Accent)|§22.1.2.1|  
|argPr (Argument Properties)|§22.1.2.5|  
|bar (Bar)|§22.1.2.7|  
|bookmarkEnd (Bookmark End)|§17.13.6.1|  
|bookmarkStart (Bookmark Start)|§17.13.6.2|  
|borderBox (Border-Box Object)|§22.1.2.11|  
|box (Box Object)|§22.1.2.13|  
|commentRangeEnd (Comment Anchor Range End)|§17.13.4.3|  
|commentRangeStart (Comment Anchor Range Start)|§17.13.4.4|  
|ctrlPr (Control Properties)|§22.1.2.23|  
|customXmlDelRangeEnd (Custom XML Markup Deletion End)|§17.13.5.4|  
|customXmlDelRangeStart (Custom XML Markup Deletion Start)|§17.13.5.5|  
|customXmlInsRangeEnd (Custom XML Markup Insertion End)|§17.13.5.6|  
|customXmlInsRangeStart (Custom XML Markup Insertion Start)|§17.13.5.7|  
|customXmlMoveFromRangeEnd (Custom XML Markup Move Source End)|§17.13.5.8|  
|customXmlMoveFromRangeStart (Custom XML Markup Move Source Start)|§17.13.5.9|  
|customXmlMoveToRangeEnd (Custom XML Markup Move Destination Location End)|§17.13.5.10|  
|customXmlMoveToRangeStart (Custom XML Markup Move Destination Location Start)|§17.13.5.11|  
|d (Delimiter Object)|§22.1.2.24|  
|del (Deleted Run Content)|§17.13.5.14|  
|eqArr (Array Object)|§22.1.2.34|  
|f (Fraction Object)|§22.1.2.36|  
|func (Function Apply Object)|§22.1.2.39|  
|groupChr (Group-Character Object)|§22.1.2.41|  
|ins (Inserted Run Content)|§17.13.5.18|  
|limLow (Lower-Limit Object)|§22.1.2.54|  
|limUpp (Upper-Limit Object)|§22.1.2.56|  
|m (Matrix Object)|§22.1.2.60|  
|moveFrom (Move Source Run Content)|§17.13.5.22|  
|moveFromRangeEnd (Move Source Location Container - End)|§17.13.5.23|  
|moveFromRangeStart (Move Source Location Container - Start)|§17.13.5.24|  
|moveTo (Move Destination Run Content)|§17.13.5.25|  
|moveToRangeEnd (Move Destination Location Container - End)|§17.13.5.27|  
|moveToRangeStart (Move Destination Location Container - Start)|§17.13.5.28|  
|nary (n-ary Operator Object)|§22.1.2.70|  
|oMath (Office Math)|§22.1.2.77|  
|oMathPara (Office Math Paragraph)|§22.1.2.78|  
|permEnd (Range Permission End)|§17.13.7.1|  
|permStart (Range Permission Start)|§17.13.7.2|  
|phant (Phantom Object)|§22.1.2.81|  
|proofErr (Proofing Error Anchor)|§17.13.8.1|  
|r (Run)|§22.1.2.87|  
|rad (Radical Object)|§22.1.2.88|  
|sPre (Pre-Sub-Superscript Object)|§22.1.2.99|  
|sSub (Subscript Object)|§22.1.2.101|  
|sSubSup (Sub-Superscript Object)|§22.1.2.103|  
|sSup (Superscript Object)|§22.1.2.105|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_OMathArg) is located in §A.6.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Base ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.Base.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the Base class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Base (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.Base.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Math.Base : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Math.Base" Usage="new DocumentFormat.OpenXml.Math.Base childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the Base class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Base (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.Base.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Math.Base : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Math.Base" Usage="new DocumentFormat.OpenXml.Math.Base childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the Base class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Base (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.Base.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Math.Base : string -&gt; DocumentFormat.OpenXml.Math.Base" Usage="new DocumentFormat.OpenXml.Math.Base outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the Base class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.Base.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="base.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Math.Base.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Math.Base.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>