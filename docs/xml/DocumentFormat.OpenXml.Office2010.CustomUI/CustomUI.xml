<Type Name="CustomUI" FullName="DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI">
  <TypeSignature Language="C#" Value="public class CustomUI : DocumentFormat.OpenXml.OpenXmlPartRootElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CustomUI extends DocumentFormat.OpenXml.OpenXmlPartRootElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomUI&#xA;Inherits OpenXmlPartRootElement" />
  <TypeSignature Language="F#" Value="type CustomUI = class&#xA;    inherit OpenXmlPartRootElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlPartRootElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office2010.CustomUI.Commands), DocumentFormat.OpenXml.FileFormatVersions.Office2010 | DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office2010.CustomUI.Ribbon), DocumentFormat.OpenXml.FileFormatVersions.Office2010 | DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office2010.CustomUI.Backstage), DocumentFormat.OpenXml.FileFormatVersions.Office2010 | DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenus), DocumentFormat.OpenXml.FileFormatVersions.Office2010 | DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.OfficeAvailability(DocumentFormat.OpenXml.FileFormatVersions.Office2010)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the CustomUI Class. The root element of RibbonAndBackstageCustomizationsPart. When the object is serialized out as xml, its qualified name is mso14:customUI.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 *2.2.1   customUI*  
  
 *Target namespace:* http://schemas.microsoft.com/office/2009/07/customui  
  
 A *CT_CustomUI* element, as specified in section 2.3.39, that specifies the root tag in a Custom UI document.  
  
 The following W3C XML Schema ([XMLSCHEMA1] section 2.1) fragment specifies the contents of this element.  
  
 *\<xsd:element name="customUI" type="CT_CustomUI"/>*  
  
 See section 5.1 for the full W3C XML Schema ([XMLSCHEMA1] section 2.1).  
  
 *2.3.39   CT_CustomUI*  
  
 *Target namespace:* http://schemas.microsoft.com/office/2009/07/customui  
  
 *Referenced by:* customUI  
  
 Specifies the root tag in a Custom UI document.  
  
 *Child Elements:*  
  
 *commands:* A *CT_Commands* element, as specified in section 2.3.30.  
  
 *ribbon:* A *CT_Ribbon* element, as specified in section 2.3.64.  
  
 *backstage:* A *CT_Backstage* element, as specified in section 2.3.1.  
  
 *contextMenus:* A *CT_ContextMenus* element, as specified in section 2.3.32.  
  
 *Attributes:*  
  
 *onLoad:* An *ST_Delegate* attribute, as specified in section 2.4.7, that specifies the name of a callback function that is called when the custom UI in this document is loaded by the application.  
  
 *loadImage:* An *ST_Delegate* attribute that specifies the name of a callback function that is called when the application needs to load an icon image.  
  
 The following W3C XML Schema ([XMLSCHEMA1] section 2.1) fragment specifies the contents of this complex type.  
  
 *\<xsd:complexType name="CT_CustomUI">*  
  
 *\<xsd:sequence>*  
  
 *\<xsd:element name="commands" type="CT_Commands" minOccurs="0" maxOccurs="1"/>*  
  
 *\<xsd:element name="ribbon" type="CT_Ribbon" minOccurs="0" maxOccurs="1"/>*  
  
 *\<xsd:element name="backstage" type="CT_Backstage" minOccurs="0" maxOccurs="1"/>*  
  
 *\<xsd:element name="contextMenus" type="CT_ContextMenus" minOccurs="0" maxOccurs="1"/>*  
  
 *\</xsd:sequence>*  
  
 *\<xsd:attribute name="onLoad" type="ST_Delegate" use="optional"/>*  
  
 *\<xsd:attribute name="loadImage" type="ST_Delegate" use="optional"/>*  
  
 *\</xsd:complexType>*  
  
 See section 5.1 for the full W3C XML Schema ([XMLSCHEMA1] section 2.1).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomUI ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the CustomUI class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomUI (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI" Usage="new DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the CustomUI class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomUI (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI" Usage="new DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the CustomUI class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomUI (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI : string -&gt; DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI" Usage="new DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the CustomUI class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Backstage">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Office2010.CustomUI.Backstage Backstage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Office2010.CustomUI.Backstage Backstage" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.Backstage" />
      <MemberSignature Language="VB.NET" Value="Public Property Backstage As Backstage" />
      <MemberSignature Language="F#" Value="member this.Backstage : DocumentFormat.OpenXml.Office2010.CustomUI.Backstage with get, set" Usage="DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.Backstage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Office2010.CustomUI.Backstage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backstage. Represents the following element tag in the schema: mso14:backstage</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:mso14 = http://schemas.microsoft.com/office/2009/07/customui
            </remark>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="customUI.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Commands">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Office2010.CustomUI.Commands Commands { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Office2010.CustomUI.Commands Commands" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.Commands" />
      <MemberSignature Language="VB.NET" Value="Public Property Commands As Commands" />
      <MemberSignature Language="F#" Value="member this.Commands : DocumentFormat.OpenXml.Office2010.CustomUI.Commands with get, set" Usage="DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.Commands" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Office2010.CustomUI.Commands</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Commands. Represents the following element tag in the schema: mso14:commands</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:mso14 = http://schemas.microsoft.com/office/2009/07/customui
            </remark>
      </Docs>
    </Member>
    <Member MemberName="ContextMenus">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenus ContextMenus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenus ContextMenus" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.ContextMenus" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextMenus As ContextMenus" />
      <MemberSignature Language="F#" Value="member this.ContextMenus : DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenus with get, set" Usage="DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.ContextMenus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ContextMenus. Represents the following element tag in the schema: mso14:contextMenus</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:mso14 = http://schemas.microsoft.com/office/2009/07/customui
            </remark>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart openXmlPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart openXmlPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.Load(DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (openXmlPart As RibbonAndBackstageCustomizationsPart)" />
      <MemberSignature Language="F#" Value="override this.Load : DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart -&gt; unit" Usage="customUI.Load openXmlPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="openXmlPart" Type="DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart" />
      </Parameters>
      <Docs>
        <param name="openXmlPart">Specifies the part to be loaded.</param>
        <summary>Loads the DOM from the RibbonAndBackstageCustomizationsPart.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadImage">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue LoadImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue LoadImage" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.LoadImage" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadImage As StringValue" />
      <MemberSignature Language="F#" Value="member this.LoadImage : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.LoadImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "loadImage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>loadImage.Represents the following attribute in the schema: loadImage</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue OnLoad { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue OnLoad" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.OnLoad" />
      <MemberSignature Language="VB.NET" Value="Public Property OnLoad As StringValue" />
      <MemberSignature Language="F#" Value="member this.OnLoad : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.OnLoad" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "onLoad")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>onLoad.Represents the following attribute in the schema: onLoad</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ribbon">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Office2010.CustomUI.Ribbon Ribbon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Office2010.CustomUI.Ribbon Ribbon" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.Ribbon" />
      <MemberSignature Language="VB.NET" Value="Public Property Ribbon As Ribbon" />
      <MemberSignature Language="F#" Value="member this.Ribbon : DocumentFormat.OpenXml.Office2010.CustomUI.Ribbon with get, set" Usage="DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.Ribbon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Office2010.CustomUI.Ribbon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ribbon. Represents the following element tag in the schema: mso14:ribbon</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:mso14 = http://schemas.microsoft.com/office/2009/07/customui
            </remark>
      </Docs>
    </Member>
    <Member MemberName="RibbonAndBackstageCustomizationsPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart RibbonAndBackstageCustomizationsPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart RibbonAndBackstageCustomizationsPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.RibbonAndBackstageCustomizationsPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RibbonAndBackstageCustomizationsPart As RibbonAndBackstageCustomizationsPart" />
      <MemberSignature Language="F#" Value="member this.RibbonAndBackstageCustomizationsPart : DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart" Usage="DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.RibbonAndBackstageCustomizationsPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the RibbonAndBackstageCustomizationsPart associated with this element.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart openXmlPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart openXmlPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.Save(DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (openXmlPart As RibbonAndBackstageCustomizationsPart)" />
      <MemberSignature Language="F#" Value="override this.Save : DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart -&gt; unit" Usage="customUI.Save openXmlPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="openXmlPart" Type="DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart" />
      </Parameters>
      <Docs>
        <param name="openXmlPart">Specifies the part to save to.</param>
        <summary>Saves the DOM into the RibbonAndBackstageCustomizationsPart.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>