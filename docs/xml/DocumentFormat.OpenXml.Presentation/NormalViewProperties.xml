<Type Name="NormalViewProperties" FullName="DocumentFormat.OpenXml.Presentation.NormalViewProperties">
  <TypeSignature Language="C#" Value="public class NormalViewProperties : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NormalViewProperties extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Presentation.NormalViewProperties" />
  <TypeSignature Language="VB.NET" Value="Public Class NormalViewProperties&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type NormalViewProperties = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.RestoredLeft))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.RestoredTop))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.ExtensionList))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Normal View Properties. When the object is serialized out as xml, its qualified name is p:normalViewPr.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 `normalViewPr (Normal View Properties)`  
  
 This element specifies the view properties associated with the normal view mode.  The normal view consists of three content regions: the slide itself, a side content region, and a bottom content region.  The content of the side content region and bottom content region is determined by the generating application.  Properties pertaining to the positioning of the different content regions are stored in this element.  This information allows the application to save its view state to the file, so that when reopened the view is in the same state as when the presentation was last saved.  
  
 A vertical splitter bar separates the slide from the side content region.  A horizontal splitter bar separates the slide from the content region below the slide.  If the presentation is set to left-to-right, the side content region is to the left of the slide.  If the presentation is set to right-to-left, the side content region is to the right of the slide.  
  
 a151ad89-197b-47c9-8e08-485b7800683c  
  
|Parent Elements|  
|---------------------|  
|viewPr (§19.2.2.18)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|extLst (Extension List)|§19.2.1.12|  
|restoredLeft (Normal View Restored Left Properties)|§19.2.2.11|  
|restoredTop (Normal View Restored Top Properties)|§19.2.2.12|  
  
|Attributes|Description|  
|----------------|-----------------|  
|horzBarState (State of the Horizontal Splitter Bar)|Specifies the state that the horizontal splitter bar should be in when in normal view mode.  The region to be maximized or minimized is the side content region.<br /><br /> The possible values for this attribute are defined by the *ST_SplitterBarState* simple type (§19.7.19).|  
|preferSingleView (Prefer Single View)|Specifies whether the user prefers to see a full-window single-content region over the standard normal view with three content regions.  If enabled, the application can choose to display one of the content regions in the entire window.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|showOutlineIcons (Show Outline Icons in Normal View)|Specifies whether the application should show icons if displaying outline content in any of the content regions of normal view mode.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|snapVertSplitter (Snap Vertical Splitter)|Specifies whether the vertical splitter should snap to a minimized state when the side region is sufficiently small.  The specific parameters of this behaviour are left to the generating application.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|vertBarState (State of the Vertical Splitter Bar)|Specifies the state that the vertical splitter bar should be in when in normal view mode.  The region to be maximized or minimized is the slide region.<br /><br /> The possible values for this attribute are defined by the *ST_SplitterBarState* simple type (§19.7.19).|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_NormalViewProperties) is located in §A.3. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NormalViewProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.NormalViewProperties.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the NormalViewProperties class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NormalViewProperties (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.NormalViewProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.NormalViewProperties : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Presentation.NormalViewProperties" Usage="new DocumentFormat.OpenXml.Presentation.NormalViewProperties childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the NormalViewProperties class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NormalViewProperties (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.NormalViewProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.NormalViewProperties : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Presentation.NormalViewProperties" Usage="new DocumentFormat.OpenXml.Presentation.NormalViewProperties childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the NormalViewProperties class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NormalViewProperties (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.NormalViewProperties.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.NormalViewProperties : string -&gt; DocumentFormat.OpenXml.Presentation.NormalViewProperties" Usage="new DocumentFormat.OpenXml.Presentation.NormalViewProperties outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the NormalViewProperties class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.NormalViewProperties.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="normalViewProperties.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtensionList">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.ExtensionList ExtensionList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.ExtensionList ExtensionList" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.NormalViewProperties.ExtensionList" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtensionList As ExtensionList" />
      <MemberSignature Language="F#" Value="member this.ExtensionList : DocumentFormat.OpenXml.Presentation.ExtensionList with get, set" Usage="DocumentFormat.OpenXml.Presentation.NormalViewProperties.ExtensionList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.ExtensionList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ExtensionList. Represents the following element tag in the schema: p:extLst</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.ExtensionList" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="HorizontalBarState">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.SplitterBarStateValues&gt; HorizontalBarState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Presentation.SplitterBarStateValues&gt; HorizontalBarState" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.NormalViewProperties.HorizontalBarState" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalBarState As EnumValue(Of SplitterBarStateValues)" />
      <MemberSignature Language="F#" Value="member this.HorizontalBarState : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.SplitterBarStateValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Presentation.NormalViewProperties.HorizontalBarState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "horzBarState")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.SplitterBarStateValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>State of the Horizontal Splitter Bar.Represents the following attribute in the schema: horzBarState</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 Specifies the state that the horizontal splitter bar should be in when in normal view mode. The region to be maximized or minimized is the side content region.  
  
 The possible values for this attribute are defined by the `ST_SplitterBarState` simple type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.NormalViewProperties.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Presentation.NormalViewProperties.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferSingleView">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue PreferSingleView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue PreferSingleView" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.NormalViewProperties.PreferSingleView" />
      <MemberSignature Language="VB.NET" Value="Public Property PreferSingleView As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.PreferSingleView : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Presentation.NormalViewProperties.PreferSingleView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "preferSingleView")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Prefer Single View.Represents the following attribute in the schema: preferSingleView</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 Specifies whether the user prefers to see a full-window single-content region over the standard normal view with three content regions. If enabled, the application may choose to display one of the content regions in the entire window.  
  
 The possible values for this attribute are defined by the XML Schema `boolean` datatype.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoredLeft">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.RestoredLeft RestoredLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.RestoredLeft RestoredLeft" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.NormalViewProperties.RestoredLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property RestoredLeft As RestoredLeft" />
      <MemberSignature Language="F#" Value="member this.RestoredLeft : DocumentFormat.OpenXml.Presentation.RestoredLeft with get, set" Usage="DocumentFormat.OpenXml.Presentation.NormalViewProperties.RestoredLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.RestoredLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Normal View Restored Left Properties. Represents the following element tag in the schema: p:restoredLeft</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.RestoredLeft" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="RestoredTop">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.RestoredTop RestoredTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.RestoredTop RestoredTop" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.NormalViewProperties.RestoredTop" />
      <MemberSignature Language="VB.NET" Value="Public Property RestoredTop As RestoredTop" />
      <MemberSignature Language="F#" Value="member this.RestoredTop : DocumentFormat.OpenXml.Presentation.RestoredTop with get, set" Usage="DocumentFormat.OpenXml.Presentation.NormalViewProperties.RestoredTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.RestoredTop</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Normal View Restored Top Properties. Represents the following element tag in the schema: p:restoredTop</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.RestoredTop" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="ShowOutlineIcons">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue ShowOutlineIcons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue ShowOutlineIcons" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.NormalViewProperties.ShowOutlineIcons" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowOutlineIcons As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.ShowOutlineIcons : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Presentation.NormalViewProperties.ShowOutlineIcons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "showOutlineIcons")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Show Outline Icons in Normal View.Represents the following attribute in the schema: showOutlineIcons</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 Specifies whether the application should show icons if displaying outline content in any of the content regions of normal view mode.  
  
 The possible values for this attribute are defined by the XML Schema `boolean` datatype.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapVerticalSplitter">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue SnapVerticalSplitter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue SnapVerticalSplitter" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.NormalViewProperties.SnapVerticalSplitter" />
      <MemberSignature Language="VB.NET" Value="Public Property SnapVerticalSplitter As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.SnapVerticalSplitter : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Presentation.NormalViewProperties.SnapVerticalSplitter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "snapVertSplitter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Snap Vertical Splitter.Represents the following attribute in the schema: snapVertSplitter</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 Specifies whether the vertical splitter should snap to a minimized state when the side region is sufficiently small. The specific parameters of this behaviour are left to the generating application.  
  
 The possible values for this attribute are defined by the XML Schema `boolean` datatype.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalBarState">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.SplitterBarStateValues&gt; VerticalBarState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Presentation.SplitterBarStateValues&gt; VerticalBarState" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.NormalViewProperties.VerticalBarState" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalBarState As EnumValue(Of SplitterBarStateValues)" />
      <MemberSignature Language="F#" Value="member this.VerticalBarState : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.SplitterBarStateValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Presentation.NormalViewProperties.VerticalBarState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "vertBarState")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.SplitterBarStateValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>State of the Vertical Splitter Bar.Represents the following attribute in the schema: vertBarState</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 Specifies the state that the vertical splitter bar should be in when in normal view mode. The region to be maximized or minimized is the slide region.  
  
 The possible values for this attribute are defined by the `ST_SplitterBarState` simple type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>