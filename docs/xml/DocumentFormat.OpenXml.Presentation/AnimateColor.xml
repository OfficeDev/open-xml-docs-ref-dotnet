<Type Name="AnimateColor" FullName="DocumentFormat.OpenXml.Presentation.AnimateColor">
  <TypeSignature Language="C#" Value="public class AnimateColor : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnimateColor extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Presentation.AnimateColor" />
  <TypeSignature Language="VB.NET" Value="Public Class AnimateColor&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type AnimateColor = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.CommonBehavior))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.ByColor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.FromColor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.ToColor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Animate Color Behavior. When the object is serialized out as xml, its qualified name is p:animClr.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **animClr (Animate Color Behavior)**  
  
 This animation element is responsible for animating the color of an object.  
  
 [*Example*:  Consider trying to emphasize a shape by changing its fill color to scheme color accent2. The \<animClr> element should be used as follows:  
  
```xml  
<p:animClr clrSpc="rgb">  
  <p:cBhvr>  
    <p:cTn id="1" dur="2000" fill="hold"/>  
    <p:tgtEl>  
      <p:spTgt spid="1"/>  
    </p:tgtEl>  
    <p:attrNameLst>  
      <p:attrName>fillcolor</p:attrName>  
    </p:attrNameLst>  
  </p:cBhvr>  
  <p:to>  
    <a:schemeClr val="accent2"/>  
  </p:to>  
</p:animClr>  
```  
  
 *end example*]  
  
|Parent Elements|  
|---------------------|  
|childTnLst (§19.5.25); subTnLst (§19.5.78); tnLst (§19.5.87)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|by (By)|§19.5.20|  
|cBhvr (Common Behavior)|§19.5.22|  
|from (From)|§19.5.43|  
|to (To)|§19.5.90|  
  
|Attributes|Description|  
|----------------|-----------------|  
|clrSpc (Color Space)|This attribute specifies the color space in which to interpolate the animation. Values for example can be HSL & .<br /><br /> <br /><br /> The values for from/to/by/etc. can still be specified in any supported color format without affecting the color space within which the animation happens.<br /><br /> <br /><br /> The  color space is best used for doing animations between two different colors since it doesn't require going through any other hues between the two colors specified. The HSL space is useful for animating through a rainbow of colors or for modifying just the saturation by 30% for example.<br /><br /> The possible values for this attribute are defined by the *ST_TLAnimateColorSpace* simple type (§19.7.23).|  
|dir (Direction)|This attribute specifies which direction to cycle the hue around the color wheel. Values are clockwise or counter clockwise. Default is clockwise.<br /><br /> The possible values for this attribute are defined by the *ST_TLAnimateColorDirection* simple type (§19.7.22).|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_TLAnimateColorBehavior) is located in §A.3. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnimateColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.AnimateColor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the AnimateColor class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnimateColor (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.AnimateColor.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.AnimateColor : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Presentation.AnimateColor" Usage="new DocumentFormat.OpenXml.Presentation.AnimateColor childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the AnimateColor class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnimateColor (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.AnimateColor.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.AnimateColor : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Presentation.AnimateColor" Usage="new DocumentFormat.OpenXml.Presentation.AnimateColor childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the AnimateColor class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnimateColor (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.AnimateColor.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.AnimateColor : string -&gt; DocumentFormat.OpenXml.Presentation.AnimateColor" Usage="new DocumentFormat.OpenXml.Presentation.AnimateColor outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the AnimateColor class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ByColor">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.ByColor ByColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.ByColor ByColor" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.AnimateColor.ByColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ByColor As ByColor" />
      <MemberSignature Language="F#" Value="member this.ByColor : DocumentFormat.OpenXml.Presentation.ByColor with get, set" Usage="DocumentFormat.OpenXml.Presentation.AnimateColor.ByColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.ByColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>By. Represents the following element tag in the schema: p:by</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.ByColor" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.AnimateColor.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="animateColor.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorSpace">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.AnimateColorSpaceValues&gt; ColorSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Presentation.AnimateColorSpaceValues&gt; ColorSpace" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.AnimateColor.ColorSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ColorSpace As EnumValue(Of AnimateColorSpaceValues)" />
      <MemberSignature Language="F#" Value="member this.ColorSpace : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.AnimateColorSpaceValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Presentation.AnimateColor.ColorSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "clrSpc")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.AnimateColorSpaceValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Color Space.Represents the following attribute in the schema: clrSpc</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonBehavior">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.CommonBehavior CommonBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.CommonBehavior CommonBehavior" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.AnimateColor.CommonBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property CommonBehavior As CommonBehavior" />
      <MemberSignature Language="F#" Value="member this.CommonBehavior : DocumentFormat.OpenXml.Presentation.CommonBehavior with get, set" Usage="DocumentFormat.OpenXml.Presentation.AnimateColor.CommonBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.CommonBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>CommonBehavior. Represents the following element tag in the schema: p:cBhvr</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.CommonBehavior" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.AnimateColorDirectionValues&gt; Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Presentation.AnimateColorDirectionValues&gt; Direction" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.AnimateColor.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As EnumValue(Of AnimateColorDirectionValues)" />
      <MemberSignature Language="F#" Value="member this.Direction : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.AnimateColorDirectionValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Presentation.AnimateColor.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "dir")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.AnimateColorDirectionValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Direction.Represents the following attribute in the schema: dir</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromColor">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.FromColor FromColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.FromColor FromColor" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.AnimateColor.FromColor" />
      <MemberSignature Language="VB.NET" Value="Public Property FromColor As FromColor" />
      <MemberSignature Language="F#" Value="member this.FromColor : DocumentFormat.OpenXml.Presentation.FromColor with get, set" Usage="DocumentFormat.OpenXml.Presentation.AnimateColor.FromColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.FromColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>From. Represents the following element tag in the schema: p:from</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.FromColor" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.AnimateColor.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Presentation.AnimateColor.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToColor">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.ToColor ToColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.ToColor ToColor" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.AnimateColor.ToColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ToColor As ToColor" />
      <MemberSignature Language="F#" Value="member this.ToColor : DocumentFormat.OpenXml.Presentation.ToColor with get, set" Usage="DocumentFormat.OpenXml.Presentation.AnimateColor.ToColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.ToColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To. Represents the following element tag in the schema: p:to</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.ToColor" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
  </Members>
</Type>