<Type Name="SplitTransition" FullName="DocumentFormat.OpenXml.Presentation.SplitTransition">
  <TypeSignature Language="C#" Value="public class SplitTransition : DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SplitTransition extends DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Presentation.SplitTransition" />
  <TypeSignature Language="VB.NET" Value="Public Class SplitTransition&#xA;Inherits OpenXmlLeafElement" />
  <TypeSignature Language="F#" Value="type SplitTransition = class&#xA;    inherit OpenXmlLeafElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlLeafElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the SplitTransition Class. When the object is serialized out as xml, its qualified name is p:split.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 `split (Split Slide Transition)`  
  
 This element describes the split slide transition effect, which reveals the new slide directly on top of the previous one by wiping either horizontal or vertical from the outside in, or from the inside out, until the new slide is fully shown. The rendering of this transition depends upon the attributes specified which have been shown below.  
  
 [*Example*: Consider the following cases in which the “split” slide transition is applied to a slide, along with a set of attributes. The proper usage and sample renderings are shown below, with the XML fragments preceding the corresponding rendering:  
  
```xml  
<p:transition>  
  <p:split orient="horz" dir="in"/>  
</p:transition>  
```  
  
 e3ef93a8-4d3a-43b2-8b59-94ecab416afa  
  
```xml  
<p:transition>  
  <p:split orient="horz" dir="out"/>  
</p:transition>  
```  
  
 09eb3e70-5e1b-40c4-879d-05392ad98ee4  
  
```xml  
<p:transition>  
  <p:split orient="vert" dir="in"/>  
</p:transition>  
```  
  
 25af6b1d-a885-4c8b-9321-fd1cca646e55  
  
```xml  
<p:transition>  
  <p:split orient="vert" dir="out"/>  
</p:transition>  
```  
  
 a2b86643-9994-4aa8-bb35-a54d84e62b5b  
  
 *end example*]  
  
 [*Note*: Any rendering shown above is for example purposes only. Exact rendering of any transition is determined by the rendering application. As such, the same transition can have many variations depending on the implementation. *end note*]  
  
|Parent Elements|  
|---------------------|  
|transition (§19.3.1.50)|  
  
|Attributes|Description|  
|----------------|-----------------|  
|dir (Direction)|This attribute specifies the direction of a "split" slide transition.<br /><br /> The possible values for this attribute are defined by the *ST_TransitionInOutDirectionType* simple type (§19.7.52).|  
|orient (Orientation)|This attribute specifies the orientation of a "split" slide transition.<br /><br /> The possible values for this attribute are defined by the *ST_Direction* simple type (§19.7.2).|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_SplitTransition) is located in §A.3. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SplitTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.SplitTransition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the SplitTransition class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.SplitTransition.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="splitTransition.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.TransitionInOutDirectionValues&gt; Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Presentation.TransitionInOutDirectionValues&gt; Direction" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.SplitTransition.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As EnumValue(Of TransitionInOutDirectionValues)" />
      <MemberSignature Language="F#" Value="member this.Direction : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.TransitionInOutDirectionValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Presentation.SplitTransition.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "dir")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.TransitionInOutDirectionValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Direction.Represents the following attribute in the schema: dir</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 This attribute specifies the direction of a "split" slide transition.  
  
 The possible values for this attribute are defined by the `ST_TransitionInOutDirectionType` simple type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.SplitTransition.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Presentation.SplitTransition.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.DirectionValues&gt; Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Presentation.DirectionValues&gt; Orientation" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.SplitTransition.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As EnumValue(Of DirectionValues)" />
      <MemberSignature Language="F#" Value="member this.Orientation : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.DirectionValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Presentation.SplitTransition.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "orient")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.DirectionValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Orientation.Represents the following attribute in the schema: orient</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 This attribute specifies the orientation of a "split" slide transition.  
  
 The possible values for this attribute are defined by the `ST_Direction` simple type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>