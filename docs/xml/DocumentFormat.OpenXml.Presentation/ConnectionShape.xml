<Type Name="ConnectionShape" FullName="DocumentFormat.OpenXml.Presentation.ConnectionShape">
  <TypeSignature Language="C#" Value="public class ConnectionShape : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConnectionShape extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Presentation.ConnectionShape" />
  <TypeSignature Language="VB.NET" Value="Public Class ConnectionShape&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type ConnectionShape = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.NonVisualConnectionShapeProperties))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.ShapeProperties))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.ShapeStyle))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.ExtensionListWithModification))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Connection Shape. When the object is serialized out as xml, its qualified name is p:cxnSp.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 `cxnSp (Connection Shape)`  
  
 This element specifies a connection shape that is used to connect two sp elements. Once a connection is specified using a cxnSp, it is left to the generating application to determine the exact path the connector takes. That is the connector routing algorithm is left up to the generating application as the desired path might be different depending on the specific needs of the application.  
  
 a83ede4a-2385-4264-a0c7-a735ed9ec676  
  
 [*Example*: Consider the following connector shape that connects two regular shapes.  
  
```xml  
<p:spTree>  
  …  
  <p:sp>  
    <p:nvSpPr>  
      <p:cNvPr id="1" name="Rectangle 1"/>  
      <p:cNvSpPr/>  
      <p:nvPr/>  
    </p:nvSpPr>  
    …  
  </p:sp>  
  <p:sp>  
    <p:nvSpPr>  
      <p:cNvPr id="2" name="Rectangle 2"/>  
      <p:cNvSpPr/>  
      <p:nvPr/>  
    </p:nvSpPr>  
    …  
  </p:sp>  
  <p:cxnSp>  
    <p:nvCxnSpPr>  
      <p:cNvPr id="3" name="Elbow Connector 3"/>  
      <p:cNvCxnSpPr>  
        <a:stCxn id="1" idx="3"/>  
        <a:endCxn id="2" idx="1"/>  
      </p:cNvCxnSpPr>  
      <p:nvPr/>  
    </p:nvCxnSpPr>  
    …  
  </p:cxnSp>  
</p:spTree>  
```  
  
 *end example*]  
  
|Parent Elements|  
|---------------------|  
|grpSp (§19.3.1.22); spTree (§19.3.1.45)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|extLst (Extension List with Modification Flag)|§19.3.1.20|  
|nvCxnSpPr (Non-Visual Properties for a Connection Shape)|§19.3.1.29|  
|spPr (Shape Properties)|§19.3.1.44|  
|style (Shape Style)|§19.3.1.46|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_Connector) is located in §A.3. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConnectionShape ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.ConnectionShape.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the ConnectionShape class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConnectionShape (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.ConnectionShape.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.ConnectionShape : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Presentation.ConnectionShape" Usage="new DocumentFormat.OpenXml.Presentation.ConnectionShape childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the ConnectionShape class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConnectionShape (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.ConnectionShape.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.ConnectionShape : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Presentation.ConnectionShape" Usage="new DocumentFormat.OpenXml.Presentation.ConnectionShape childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the ConnectionShape class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConnectionShape (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.ConnectionShape.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.ConnectionShape : string -&gt; DocumentFormat.OpenXml.Presentation.ConnectionShape" Usage="new DocumentFormat.OpenXml.Presentation.ConnectionShape outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the ConnectionShape class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.ConnectionShape.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="connectionShape.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtensionListWithModification">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.ExtensionListWithModification ExtensionListWithModification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.ExtensionListWithModification ExtensionListWithModification" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.ConnectionShape.ExtensionListWithModification" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtensionListWithModification As ExtensionListWithModification" />
      <MemberSignature Language="F#" Value="member this.ExtensionListWithModification : DocumentFormat.OpenXml.Presentation.ExtensionListWithModification with get, set" Usage="DocumentFormat.OpenXml.Presentation.ConnectionShape.ExtensionListWithModification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.ExtensionListWithModification</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ExtensionListWithModification. Represents the following element tag in the schema: p:extLst</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.ExtensionListWithModification" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.ConnectionShape.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Presentation.ConnectionShape.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonVisualConnectionShapeProperties">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.NonVisualConnectionShapeProperties NonVisualConnectionShapeProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.NonVisualConnectionShapeProperties NonVisualConnectionShapeProperties" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.ConnectionShape.NonVisualConnectionShapeProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property NonVisualConnectionShapeProperties As NonVisualConnectionShapeProperties" />
      <MemberSignature Language="F#" Value="member this.NonVisualConnectionShapeProperties : DocumentFormat.OpenXml.Presentation.NonVisualConnectionShapeProperties with get, set" Usage="DocumentFormat.OpenXml.Presentation.ConnectionShape.NonVisualConnectionShapeProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.NonVisualConnectionShapeProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Non-Visual Properties for a Connection Shape. Represents the following element tag in the schema: p:nvCxnSpPr</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.NonVisualConnectionShapeProperties" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="ShapeProperties">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.ShapeProperties ShapeProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.ShapeProperties ShapeProperties" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.ConnectionShape.ShapeProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property ShapeProperties As ShapeProperties" />
      <MemberSignature Language="F#" Value="member this.ShapeProperties : DocumentFormat.OpenXml.Presentation.ShapeProperties with get, set" Usage="DocumentFormat.OpenXml.Presentation.ConnectionShape.ShapeProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.ShapeProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Shape Properties. Represents the following element tag in the schema: p:spPr</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.ShapeProperties" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="ShapeStyle">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.ShapeStyle ShapeStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.ShapeStyle ShapeStyle" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.ConnectionShape.ShapeStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ShapeStyle As ShapeStyle" />
      <MemberSignature Language="F#" Value="member this.ShapeStyle : DocumentFormat.OpenXml.Presentation.ShapeStyle with get, set" Usage="DocumentFormat.OpenXml.Presentation.ConnectionShape.ShapeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.ShapeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Connector Shape Style. Represents the following element tag in the schema: p:style</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.ShapeStyle" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
  </Members>
</Type>