<Type Name="ShapeTarget" FullName="DocumentFormat.OpenXml.Presentation.ShapeTarget">
  <TypeSignature Language="C#" Value="public class ShapeTarget : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ShapeTarget extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Presentation.ShapeTarget" />
  <TypeSignature Language="VB.NET" Value="Public Class ShapeTarget&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type ShapeTarget = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.BackgroundAnimation))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.SubShape))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.OleChartElement))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.TextElement))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.GraphicElement))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Shape Target. When the object is serialized out as xml, its qualified name is p:spTgt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **spTgt (Shape Target)**  
  
 The element specifies the shape in which to apply a certain animation to.  
  
 [*Example*:  Consider a shape whose id is  which we want to apply a fade animation effect. The \<spTgt> should be used as follows:  
  
```xml  
<p:animEffect transition="in" filter="fade">  
  <p:cBhvr>  
    <p:cTn id="7" dur="2000"/>  
    <p:tgtEl>  
      <p:spTgt spid="3"/>  
    </p:tgtEl>  
  </p:cBhvr>  
</p:animEffect>  
```  
  
 *end example*]  
  
|Parent Elements|  
|---------------------|  
|tgtEl (§19.5.81)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|bg (Background)|§19.5.10|  
|graphicEl (Graphic Element)|§19.5.45|  
|oleChartEl (Embedded Chart Element)|§19.5.52|  
|subSp (Subshape)|§19.5.77|  
|txEl (Text Element)|§19.5.91|  
  
|Attributes|Description|  
|----------------|-----------------|  
|spid (Shape ID)|This attribute specifies the shape identifier.<br /><br /> The possible values for this attribute are defined by the *ST_ShapeID* simple type (§20.1.10.55).|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_TLShapeTargetElement) is located in §A.3. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ShapeTarget ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.ShapeTarget.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the ShapeTarget class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ShapeTarget (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.ShapeTarget.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.ShapeTarget : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Presentation.ShapeTarget" Usage="new DocumentFormat.OpenXml.Presentation.ShapeTarget childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the ShapeTarget class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ShapeTarget (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.ShapeTarget.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.ShapeTarget : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Presentation.ShapeTarget" Usage="new DocumentFormat.OpenXml.Presentation.ShapeTarget childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the ShapeTarget class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ShapeTarget (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.ShapeTarget.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.ShapeTarget : string -&gt; DocumentFormat.OpenXml.Presentation.ShapeTarget" Usage="new DocumentFormat.OpenXml.Presentation.ShapeTarget outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the ShapeTarget class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundAnimation">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.BackgroundAnimation BackgroundAnimation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.BackgroundAnimation BackgroundAnimation" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.ShapeTarget.BackgroundAnimation" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundAnimation As BackgroundAnimation" />
      <MemberSignature Language="F#" Value="member this.BackgroundAnimation : DocumentFormat.OpenXml.Presentation.BackgroundAnimation with get, set" Usage="DocumentFormat.OpenXml.Presentation.ShapeTarget.BackgroundAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.BackgroundAnimation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Background. Represents the following element tag in the schema: p:bg</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.BackgroundAnimation" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.ShapeTarget.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="shapeTarget.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GraphicElement">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.GraphicElement GraphicElement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.GraphicElement GraphicElement" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.ShapeTarget.GraphicElement" />
      <MemberSignature Language="VB.NET" Value="Public Property GraphicElement As GraphicElement" />
      <MemberSignature Language="F#" Value="member this.GraphicElement : DocumentFormat.OpenXml.Presentation.GraphicElement with get, set" Usage="DocumentFormat.OpenXml.Presentation.ShapeTarget.GraphicElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.GraphicElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Graphic Element. Represents the following element tag in the schema: p:graphicEl</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.GraphicElement" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.ShapeTarget.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Presentation.ShapeTarget.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OleChartElement">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.OleChartElement OleChartElement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.OleChartElement OleChartElement" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.ShapeTarget.OleChartElement" />
      <MemberSignature Language="VB.NET" Value="Public Property OleChartElement As OleChartElement" />
      <MemberSignature Language="F#" Value="member this.OleChartElement : DocumentFormat.OpenXml.Presentation.OleChartElement with get, set" Usage="DocumentFormat.OpenXml.Presentation.ShapeTarget.OleChartElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.OleChartElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>OLE Chart Element. Represents the following element tag in the schema: p:oleChartEl</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.OleChartElement" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="ShapeId">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue ShapeId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue ShapeId" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.ShapeTarget.ShapeId" />
      <MemberSignature Language="VB.NET" Value="Public Property ShapeId As StringValue" />
      <MemberSignature Language="F#" Value="member this.ShapeId : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Presentation.ShapeTarget.ShapeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "spid")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Shape ID.Represents the following attribute in the schema: spid</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubShape">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.SubShape SubShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.SubShape SubShape" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.ShapeTarget.SubShape" />
      <MemberSignature Language="VB.NET" Value="Public Property SubShape As SubShape" />
      <MemberSignature Language="F#" Value="member this.SubShape : DocumentFormat.OpenXml.Presentation.SubShape with get, set" Usage="DocumentFormat.OpenXml.Presentation.ShapeTarget.SubShape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.SubShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Subshape. Represents the following element tag in the schema: p:subSp</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.SubShape" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="TextElement">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.TextElement TextElement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.TextElement TextElement" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.ShapeTarget.TextElement" />
      <MemberSignature Language="VB.NET" Value="Public Property TextElement As TextElement" />
      <MemberSignature Language="F#" Value="member this.TextElement : DocumentFormat.OpenXml.Presentation.TextElement with get, set" Usage="DocumentFormat.OpenXml.Presentation.ShapeTarget.TextElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.TextElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Text Element. Represents the following element tag in the schema: p:txEl</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.TextElement" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
  </Members>
</Type>