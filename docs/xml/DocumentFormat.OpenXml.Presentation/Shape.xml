<Type Name="Shape" FullName="DocumentFormat.OpenXml.Presentation.Shape">
  <TypeSignature Language="C#" Value="public class Shape : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Shape extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Presentation.Shape" />
  <TypeSignature Language="VB.NET" Value="Public Class Shape&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type Shape = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.NonVisualShapeProperties))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.ShapeProperties))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.ShapeStyle))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.TextBody))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.ExtensionListWithModification))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Shape. When the object is serialized out as xml, its qualified name is p:sp.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **sp (Shape)**  
  
 This element specifies the existence of a single shape. A shape can either be a preset or a custom geometry, defined using the DrawingML framework. In addition to a geometry each shape can have both visual and non-visual properties attached. Text and corresponding styling information can also be attached to a shape. This shape is specified along with all other shapes within either the shape tree or group shape elements.  
  
 [*Note*: Shapes are the preferred mechanism for specifying text on a slide. *end note*]  
  
|Parent Elements|  
|---------------------|  
|grpSp (§19.3.1.22); spTree (§19.3.1.45)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|extLst (Extension List with Modification Flag)|§19.3.1.20|  
|nvSpPr (Non-Visual Properties for a Shape)|§19.3.1.34|  
|spPr (Shape Properties)|§19.3.1.44|  
|style (Shape Style)|§19.3.1.46|  
|txBody (Shape Text Body)|§19.3.1.51|  
  
|Attributes|Description|  
|----------------|-----------------|  
|useBgFill (Use Background Fill)|Specifies that the shape fill should be set to that of the slide background surface.<br /><br /> [*Note*: This attribute does not set the fill of the shape to be transparent but instead sets it to be filled with the portion of the slide background that is directly behind it. *end note*]<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_Shape) is located in §A.3. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Shape ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.Shape.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the Shape class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Shape (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.Shape.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.Shape : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Presentation.Shape" Usage="new DocumentFormat.OpenXml.Presentation.Shape childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the Shape class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Shape (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.Shape.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.Shape : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Presentation.Shape" Usage="new DocumentFormat.OpenXml.Presentation.Shape childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the Shape class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Shape (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.Shape.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.Shape : string -&gt; DocumentFormat.OpenXml.Presentation.Shape" Usage="new DocumentFormat.OpenXml.Presentation.Shape outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the Shape class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.Shape.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="shape.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtensionListWithModification">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.ExtensionListWithModification ExtensionListWithModification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.ExtensionListWithModification ExtensionListWithModification" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.Shape.ExtensionListWithModification" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtensionListWithModification As ExtensionListWithModification" />
      <MemberSignature Language="F#" Value="member this.ExtensionListWithModification : DocumentFormat.OpenXml.Presentation.ExtensionListWithModification with get, set" Usage="DocumentFormat.OpenXml.Presentation.Shape.ExtensionListWithModification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.ExtensionListWithModification</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ExtensionListWithModification. Represents the following element tag in the schema: p:extLst</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.ExtensionListWithModification" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.Shape.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Presentation.Shape.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonVisualShapeProperties">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.NonVisualShapeProperties NonVisualShapeProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.NonVisualShapeProperties NonVisualShapeProperties" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.Shape.NonVisualShapeProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property NonVisualShapeProperties As NonVisualShapeProperties" />
      <MemberSignature Language="F#" Value="member this.NonVisualShapeProperties : DocumentFormat.OpenXml.Presentation.NonVisualShapeProperties with get, set" Usage="DocumentFormat.OpenXml.Presentation.Shape.NonVisualShapeProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.NonVisualShapeProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Non-Visual Properties for a Shape. Represents the following element tag in the schema: p:nvSpPr</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.NonVisualShapeProperties" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="ShapeProperties">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.ShapeProperties ShapeProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.ShapeProperties ShapeProperties" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.Shape.ShapeProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property ShapeProperties As ShapeProperties" />
      <MemberSignature Language="F#" Value="member this.ShapeProperties : DocumentFormat.OpenXml.Presentation.ShapeProperties with get, set" Usage="DocumentFormat.OpenXml.Presentation.Shape.ShapeProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.ShapeProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ShapeProperties. Represents the following element tag in the schema: p:spPr</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.ShapeProperties" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="ShapeStyle">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.ShapeStyle ShapeStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.ShapeStyle ShapeStyle" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.Shape.ShapeStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ShapeStyle As ShapeStyle" />
      <MemberSignature Language="F#" Value="member this.ShapeStyle : DocumentFormat.OpenXml.Presentation.ShapeStyle with get, set" Usage="DocumentFormat.OpenXml.Presentation.Shape.ShapeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.ShapeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Shape Style. Represents the following element tag in the schema: p:style</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.ShapeStyle" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="TextBody">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.TextBody TextBody { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.TextBody TextBody" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.Shape.TextBody" />
      <MemberSignature Language="VB.NET" Value="Public Property TextBody As TextBody" />
      <MemberSignature Language="F#" Value="member this.TextBody : DocumentFormat.OpenXml.Presentation.TextBody with get, set" Usage="DocumentFormat.OpenXml.Presentation.Shape.TextBody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.TextBody</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Shape Text Body. Represents the following element tag in the schema: p:txBody</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.TextBody" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="UseBackgroundFill">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue UseBackgroundFill { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue UseBackgroundFill" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.Shape.UseBackgroundFill" />
      <MemberSignature Language="VB.NET" Value="Public Property UseBackgroundFill As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.UseBackgroundFill : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Presentation.Shape.UseBackgroundFill" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "useBgFill")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use Background Fill.Represents the following attribute in the schema: useBgFill</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>