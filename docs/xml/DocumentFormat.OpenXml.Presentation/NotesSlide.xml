<Type Name="NotesSlide" FullName="DocumentFormat.OpenXml.Presentation.NotesSlide">
  <TypeSignature Language="C#" Value="public class NotesSlide : DocumentFormat.OpenXml.OpenXmlPartRootElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NotesSlide extends DocumentFormat.OpenXml.OpenXmlPartRootElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Presentation.NotesSlide" />
  <TypeSignature Language="VB.NET" Value="Public Class NotesSlide&#xA;Inherits OpenXmlPartRootElement" />
  <TypeSignature Language="F#" Value="type NotesSlide = class&#xA;    inherit OpenXmlPartRootElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlPartRootElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.CommonSlideData))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.ColorMapOverride))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.ExtensionListWithModification))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Notes Slide. The root element of NotesSlidePart. When the object is serialized out as xml, its qualified name is p:notes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **notes (Notes Slide)**  
  
 This element specifies the existence of a notes slide along with its corresponding data. Contained within a notes slide are all the common slide elements along with addition properties that are specific to the notes element.  
  
 [*Example*: Consider the following PresentationML notes slide  
  
```xml  
<p:notes>  
  <p:cSld>  
    …  
  </p:cSld>  
  …  
</p:notes  
>  
```  
  
 In the above example a notes element specifies the existence of a notes slide with all of its parts. Notice the cSld element, that specifies the common elements that can appear on any slide type and then any elements specify additional non-common properties for this notes slide. *end example*]  
  
|Parent Elements|  
|---------------------|  
|Root element of PresentationML Notes Slide part|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|clrMapOvr (Color Scheme Map Override)|§19.3.1.7|  
|cSld (Common Slide Data)|§19.3.1.16|  
|extLst (Extension List with Modification Flag)|§19.3.1.20|  
  
|Attributes|Description|  
|----------------|-----------------|  
|showMasterPhAnim (Show Master Placeholder Animations)|Specifies whether or not to display animations on placeholders from the master slide.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|showMasterSp (Show Master Shapes)|Specifies if shapes on the master slide should be shown on slides or not.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_NotesSlide) is located in §A.3. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotesSlide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.NotesSlide.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the NotesSlide class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotesSlide (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.NotesSlide.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.NotesSlide : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Presentation.NotesSlide" Usage="new DocumentFormat.OpenXml.Presentation.NotesSlide childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the NotesSlide class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotesSlide (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.NotesSlide.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.NotesSlide : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Presentation.NotesSlide" Usage="new DocumentFormat.OpenXml.Presentation.NotesSlide childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the NotesSlide class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotesSlide (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.NotesSlide.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.NotesSlide : string -&gt; DocumentFormat.OpenXml.Presentation.NotesSlide" Usage="new DocumentFormat.OpenXml.Presentation.NotesSlide outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the NotesSlide class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.NotesSlide.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="notesSlide.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorMapOverride">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.ColorMapOverride ColorMapOverride { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.ColorMapOverride ColorMapOverride" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.NotesSlide.ColorMapOverride" />
      <MemberSignature Language="VB.NET" Value="Public Property ColorMapOverride As ColorMapOverride" />
      <MemberSignature Language="F#" Value="member this.ColorMapOverride : DocumentFormat.OpenXml.Presentation.ColorMapOverride with get, set" Usage="DocumentFormat.OpenXml.Presentation.NotesSlide.ColorMapOverride" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.ColorMapOverride</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Color Scheme Map Override. Represents the following element tag in the schema: p:clrMapOvr</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.ColorMapOverride" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="CommonSlideData">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.CommonSlideData CommonSlideData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.CommonSlideData CommonSlideData" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.NotesSlide.CommonSlideData" />
      <MemberSignature Language="VB.NET" Value="Public Property CommonSlideData As CommonSlideData" />
      <MemberSignature Language="F#" Value="member this.CommonSlideData : DocumentFormat.OpenXml.Presentation.CommonSlideData with get, set" Usage="DocumentFormat.OpenXml.Presentation.NotesSlide.CommonSlideData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.CommonSlideData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Common slide data for notes slides. Represents the following element tag in the schema: p:cSld</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.CommonSlideData" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="ExtensionListWithModification">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.ExtensionListWithModification ExtensionListWithModification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.ExtensionListWithModification ExtensionListWithModification" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.NotesSlide.ExtensionListWithModification" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtensionListWithModification As ExtensionListWithModification" />
      <MemberSignature Language="F#" Value="member this.ExtensionListWithModification : DocumentFormat.OpenXml.Presentation.ExtensionListWithModification with get, set" Usage="DocumentFormat.OpenXml.Presentation.NotesSlide.ExtensionListWithModification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.ExtensionListWithModification</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ExtensionListWithModification. Represents the following element tag in the schema: p:extLst</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.ExtensionListWithModification" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (DocumentFormat.OpenXml.Packaging.NotesSlidePart openXmlPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class DocumentFormat.OpenXml.Packaging.NotesSlidePart openXmlPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.NotesSlide.Load(DocumentFormat.OpenXml.Packaging.NotesSlidePart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (openXmlPart As NotesSlidePart)" />
      <MemberSignature Language="F#" Value="override this.Load : DocumentFormat.OpenXml.Packaging.NotesSlidePart -&gt; unit" Usage="notesSlide.Load openXmlPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="openXmlPart" Type="DocumentFormat.OpenXml.Packaging.NotesSlidePart" />
      </Parameters>
      <Docs>
        <param name="openXmlPart">Specifies the part to be loaded.</param>
        <summary>Loads the DOM from the NotesSlidePart.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.NotesSlide.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Presentation.NotesSlide.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotesSlidePart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.NotesSlidePart NotesSlidePart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.NotesSlidePart NotesSlidePart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.NotesSlide.NotesSlidePart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotesSlidePart As NotesSlidePart" />
      <MemberSignature Language="F#" Value="member this.NotesSlidePart : DocumentFormat.OpenXml.Packaging.NotesSlidePart" Usage="DocumentFormat.OpenXml.Presentation.NotesSlide.NotesSlidePart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.NotesSlidePart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the NotesSlidePart associated with this element.</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Packaging.NotesSlidePart" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (DocumentFormat.OpenXml.Packaging.NotesSlidePart openXmlPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class DocumentFormat.OpenXml.Packaging.NotesSlidePart openXmlPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.NotesSlide.Save(DocumentFormat.OpenXml.Packaging.NotesSlidePart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (openXmlPart As NotesSlidePart)" />
      <MemberSignature Language="F#" Value="override this.Save : DocumentFormat.OpenXml.Packaging.NotesSlidePart -&gt; unit" Usage="notesSlide.Save openXmlPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="openXmlPart" Type="DocumentFormat.OpenXml.Packaging.NotesSlidePart" />
      </Parameters>
      <Docs>
        <param name="openXmlPart">Specifies the part to save to.</param>
        <summary>Saves the DOM into the NotesSlidePart.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowMasterPlaceholderAnimations">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue ShowMasterPlaceholderAnimations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue ShowMasterPlaceholderAnimations" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.NotesSlide.ShowMasterPlaceholderAnimations" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowMasterPlaceholderAnimations As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.ShowMasterPlaceholderAnimations : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Presentation.NotesSlide.ShowMasterPlaceholderAnimations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "showMasterPhAnim")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Show Master Placeholder Animations.Represents the following attribute in the schema: showMasterPhAnim</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 Specifies whether or not to display animations on placeholders from the master slide.  
  
 The possible values for this attribute are defined by the XML Schema `boolean` datatype.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowMasterShapes">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue ShowMasterShapes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue ShowMasterShapes" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.NotesSlide.ShowMasterShapes" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowMasterShapes As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.ShowMasterShapes : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Presentation.NotesSlide.ShowMasterShapes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "showMasterSp")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Show Master Shapes.Represents the following attribute in the schema: showMasterSp</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 Specifies if shapes on the master slide should be shown on slides or not.  
  
 The possible values for this attribute are defined by the XML Schema `boolean` datatype.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>