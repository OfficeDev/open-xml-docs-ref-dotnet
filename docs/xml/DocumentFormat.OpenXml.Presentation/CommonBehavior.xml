<Type Name="CommonBehavior" FullName="DocumentFormat.OpenXml.Presentation.CommonBehavior">
  <TypeSignature Language="C#" Value="public class CommonBehavior : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommonBehavior extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Presentation.CommonBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class CommonBehavior&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type CommonBehavior = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.CommonTimeNode))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.TargetElement))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.AttributeNameList))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the CommonBehavior Class. When the object is serialized out as xml, its qualified name is p:cBhvr.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **cBhvr (Common Behavior)**  
  
 This element describes the common behaviors of animations.  
  
 [*Example*:  Consider trying to emphasize text within a shape by changing the size of its font. The \<anim> element should be used as follows:  
  
```xml  
<p:anim to="1.5" calcmode="lin" valueType="num">  
  <p:cBhvr override="childStyle">  
    <p:cTn id="6" dur="2000" fill="hold"/>  
    <p:tgtEl>  
      <p:spTgt spid="3">  
        <p:txEl>  
          <p:charRg st="4294967295" end="4294967295"/>  
        </p:txEl>  
      </p:spTgt>  
    </p:tgtEl>  
    <p:attrNameLst>  
      <p:attrName>style.fontSize</p:attrName>  
    </p:attrNameLst>  
  </p:cBhvr>  
</p:anim>  
```  
  
 *end example*]  
  
|Parent Elements|  
|---------------------|  
|anim (§19.5.1); animClr (§19.5.2); animEffect (§19.5.3); animMotion (§19.5.4); animRot (§19.5.5); animScale (§19.5.6); cmd (§19.5.28); set (§19.5.66)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|attrNameLst (Attribute Name List)|§19.5.8|  
|cTn (Common Time Node Properties)|§19.5.33|  
|tgtEl (Target Element)|§19.5.81|  
  
|Attributes|Description|  
|----------------|-----------------|  
|accumulate (Accumulate)|This attribute makes a repeating animation build with each iteration when set to "always."<br /><br /> The possible values for this attribute are defined by the *ST_TLBehaviorAccumulateType* simple type (§19.7.27).|  
|additive (Additive)|This attribute specifies how to apply the animation values to the original value for the property.<br /><br /> The possible values for this attribute are defined by the *ST_TLBehaviorAdditiveType* simple type (§19.7.28).|  
|by (By)|This attribute specifies a relative offset value for the animation..<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *string* datatype.|  
|from (From)|This attribute specifies the starting value of the animation.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *string* datatype.|  
|override (Override)|This attribute specifies how a behavior should override values of the attribute being animated on the target element.  The "childStyle" clears the attributes on the children contained inside the target element.<br /><br /> The possible values for this attribute are defined by the *ST_TLBehaviorOverrideType* simple type (§19.7.29).|  
|rctx (Runtime Context)|This attribute describes the runtime context of the animation. The currently-understood values are “PPT” and “IE.” This is used to specify the behavior used when animating in the PPT slideshow vs. IE HTML runtime. An example can be seen with the transparency effect. In IE, the transparency is animated as a bitmap, where in PPT, the style.opacity property of a shape is used to animate the transparency.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *string* datatype.|  
|to (To)|This attribute specifies  the ending value of the animation.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *string* datatype.|  
|xfrmType (Transform Type)|This attribute specifies the kind of transform to be used.<br /><br /> The possible values for this attribute are defined by the *ST_TLBehaviorTransformType* simple type (§19.7.30).|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_TLCommonBehaviorData) is located in §A.3. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommonBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.CommonBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the CommonBehavior class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommonBehavior (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.CommonBehavior.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.CommonBehavior : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Presentation.CommonBehavior" Usage="new DocumentFormat.OpenXml.Presentation.CommonBehavior childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the CommonBehavior class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommonBehavior (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.CommonBehavior.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.CommonBehavior : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Presentation.CommonBehavior" Usage="new DocumentFormat.OpenXml.Presentation.CommonBehavior childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the CommonBehavior class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommonBehavior (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.CommonBehavior.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.CommonBehavior : string -&gt; DocumentFormat.OpenXml.Presentation.CommonBehavior" Usage="new DocumentFormat.OpenXml.Presentation.CommonBehavior outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the CommonBehavior class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accumulate">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.BehaviorAccumulateValues&gt; Accumulate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Presentation.BehaviorAccumulateValues&gt; Accumulate" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.CommonBehavior.Accumulate" />
      <MemberSignature Language="VB.NET" Value="Public Property Accumulate As EnumValue(Of BehaviorAccumulateValues)" />
      <MemberSignature Language="F#" Value="member this.Accumulate : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.BehaviorAccumulateValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Presentation.CommonBehavior.Accumulate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "accumulate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.BehaviorAccumulateValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Accumulate.Represents the following attribute in the schema: accumulate</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 This attribute makes a repeating animation build with each iteration when set to "always."  
  
 The possible values for this attribute are defined by the `ST_TLBehaviorAccumulateType` simple type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Additive">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.BehaviorAdditiveValues&gt; Additive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Presentation.BehaviorAdditiveValues&gt; Additive" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.CommonBehavior.Additive" />
      <MemberSignature Language="VB.NET" Value="Public Property Additive As EnumValue(Of BehaviorAdditiveValues)" />
      <MemberSignature Language="F#" Value="member this.Additive : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.BehaviorAdditiveValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Presentation.CommonBehavior.Additive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "additive")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.BehaviorAdditiveValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Additive.Represents the following attribute in the schema: additive</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 This attribute specifies how to apply the animation values to the original value for the property.  
  
 The possible values for this attribute are defined by the `ST_TLBehaviorAdditiveType` simple type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeNameList">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.AttributeNameList AttributeNameList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.AttributeNameList AttributeNameList" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.CommonBehavior.AttributeNameList" />
      <MemberSignature Language="VB.NET" Value="Public Property AttributeNameList As AttributeNameList" />
      <MemberSignature Language="F#" Value="member this.AttributeNameList : DocumentFormat.OpenXml.Presentation.AttributeNameList with get, set" Usage="DocumentFormat.OpenXml.Presentation.CommonBehavior.AttributeNameList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.AttributeNameList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Attribute Name List. Represents the following element tag in the schema: p:attrNameLst</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.AttributeNameList" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="By">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue By { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue By" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.CommonBehavior.By" />
      <MemberSignature Language="VB.NET" Value="Public Property By As StringValue" />
      <MemberSignature Language="F#" Value="member this.By : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Presentation.CommonBehavior.By" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "by")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>By.Represents the following attribute in the schema: by</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 This attribute specifies a relative offset value for the animation.  
  
 The possible values for this attribute are defined by the XML Schema `string` datatype.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.CommonBehavior.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="commonBehavior.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonTimeNode">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.CommonTimeNode CommonTimeNode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.CommonTimeNode CommonTimeNode" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.CommonBehavior.CommonTimeNode" />
      <MemberSignature Language="VB.NET" Value="Public Property CommonTimeNode As CommonTimeNode" />
      <MemberSignature Language="F#" Value="member this.CommonTimeNode : DocumentFormat.OpenXml.Presentation.CommonTimeNode with get, set" Usage="DocumentFormat.OpenXml.Presentation.CommonBehavior.CommonTimeNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.CommonTimeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>CommonTimeNode. Represents the following element tag in the schema: p:cTn</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.CommonTimeNode" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue From" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.CommonBehavior.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As StringValue" />
      <MemberSignature Language="F#" Value="member this.From : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Presentation.CommonBehavior.From" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "from")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>From.Represents the following attribute in the schema: from</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 This attribute specifies the starting value of the animation.  
  
 The possible values for this attribute are defined by the XML Schema `string` datatype.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.CommonBehavior.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Presentation.CommonBehavior.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Override">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.BehaviorOverrideValues&gt; Override { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Presentation.BehaviorOverrideValues&gt; Override" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.CommonBehavior.Override" />
      <MemberSignature Language="VB.NET" Value="Public Property Override As EnumValue(Of BehaviorOverrideValues)" />
      <MemberSignature Language="F#" Value="member this.Override : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.BehaviorOverrideValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Presentation.CommonBehavior.Override" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "override")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.BehaviorOverrideValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Override.Represents the following attribute in the schema: override</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 This attribute specifies how a behavior should override values of the attribute being animated on the target element.  The "childStyle" will clear the attributes on the children contained inside the target element.  
  
 The possible values for this attribute are defined by the `ST_TLBehaviorOverrideType` simple type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RuntimeContext">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue RuntimeContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue RuntimeContext" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.CommonBehavior.RuntimeContext" />
      <MemberSignature Language="VB.NET" Value="Public Property RuntimeContext As StringValue" />
      <MemberSignature Language="F#" Value="member this.RuntimeContext : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Presentation.CommonBehavior.RuntimeContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "rctx")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Runtime Context.Represents the following attribute in the schema: rctx</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 This attribute describes the runtime context of the animation. The currently-understood values are "PPT" and "IE." This is used to specify the behavior used when animating in the PPT slideshow vs. IE HTML runtime. An example can be seen with the transparency effect. In IE, the transparency is animated as a bitmap, where in PPT, the style.opacity property of a shape is used to animate the transparency.  
  
 The possible values for this attribute are defined by the XML Schema `string` datatype.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetElement">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.TargetElement TargetElement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.TargetElement TargetElement" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.CommonBehavior.TargetElement" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetElement As TargetElement" />
      <MemberSignature Language="F#" Value="member this.TargetElement : DocumentFormat.OpenXml.Presentation.TargetElement with get, set" Usage="DocumentFormat.OpenXml.Presentation.CommonBehavior.TargetElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.TargetElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Target Element. Represents the following element tag in the schema: p:tgtEl</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.TargetElement" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue To { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue To" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.CommonBehavior.To" />
      <MemberSignature Language="VB.NET" Value="Public Property To As StringValue" />
      <MemberSignature Language="F#" Value="member this.To : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Presentation.CommonBehavior.To" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "to")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To.Represents the following attribute in the schema: to</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 This attribute specifies  the ending value of the animation.  
  
 The possible values for this attribute are defined by the XML Schema `string` datatype.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformType">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.BehaviorTransformValues&gt; TransformType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Presentation.BehaviorTransformValues&gt; TransformType" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.CommonBehavior.TransformType" />
      <MemberSignature Language="VB.NET" Value="Public Property TransformType As EnumValue(Of BehaviorTransformValues)" />
      <MemberSignature Language="F#" Value="member this.TransformType : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.BehaviorTransformValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Presentation.CommonBehavior.TransformType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "xfrmType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.BehaviorTransformValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Transform Type.Represents the following attribute in the schema: xfrmType</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 This attribute specifies the type of transform to be used.  
  
 The possible values for this attribute are defined by the `ST_TLBehaviorTransformType` simple type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>