<Type Name="DiagramBuildValues" FullName="DocumentFormat.OpenXml.Presentation.DiagramBuildValues">
  <TypeSignature Language="C#" Value="public enum DiagramBuildValues" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DiagramBuildValues extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Presentation.DiagramBuildValues" />
  <TypeSignature Language="VB.NET" Value="Public Enum DiagramBuildValues" />
  <TypeSignature Language="F#" Value="type DiagramBuildValues = " />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Diagram Build Types</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AllAtOnce">
      <MemberSignature Language="C#" Value="AllAtOnce" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Presentation.DiagramBuildValues AllAtOnce = int32(15)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Presentation.DiagramBuildValues.AllAtOnce" />
      <MemberSignature Language="VB.NET" Value="AllAtOnce" />
      <MemberSignature Language="F#" Value="AllAtOnce = 15" Usage="DocumentFormat.OpenXml.Presentation.DiagramBuildValues.AllAtOnce" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("allAtOnce")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.DiagramBuildValues</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary>Diagram Build Type Enum ( All At Once ).             When the item is serialized out as xml, its value is "allAtOnce".</summary>
      </Docs>
    </Member>
    <Member MemberName="BreadthByLevel">
      <MemberSignature Language="C#" Value="BreadthByLevel" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Presentation.DiagramBuildValues BreadthByLevel = int32(4)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Presentation.DiagramBuildValues.BreadthByLevel" />
      <MemberSignature Language="VB.NET" Value="BreadthByLevel" />
      <MemberSignature Language="F#" Value="BreadthByLevel = 4" Usage="DocumentFormat.OpenXml.Presentation.DiagramBuildValues.BreadthByLevel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("breadthByLvl")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.DiagramBuildValues</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Diagram Build Type Enum ( Breadth By Level ).             When the item is serialized out as xml, its value is "breadthByLvl".</summary>
      </Docs>
    </Member>
    <Member MemberName="BreadthByNode">
      <MemberSignature Language="C#" Value="BreadthByNode" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Presentation.DiagramBuildValues BreadthByNode = int32(3)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Presentation.DiagramBuildValues.BreadthByNode" />
      <MemberSignature Language="VB.NET" Value="BreadthByNode" />
      <MemberSignature Language="F#" Value="BreadthByNode = 3" Usage="DocumentFormat.OpenXml.Presentation.DiagramBuildValues.BreadthByNode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("breadthByNode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.DiagramBuildValues</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Diagram Build Type Enum ( Breadth By Node ).             When the item is serialized out as xml, its value is "breadthByNode".</summary>
      </Docs>
    </Member>
    <Member MemberName="Clockwise">
      <MemberSignature Language="C#" Value="Clockwise" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Presentation.DiagramBuildValues Clockwise = int32(5)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Presentation.DiagramBuildValues.Clockwise" />
      <MemberSignature Language="VB.NET" Value="Clockwise" />
      <MemberSignature Language="F#" Value="Clockwise = 5" Usage="DocumentFormat.OpenXml.Presentation.DiagramBuildValues.Clockwise" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("cw")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.DiagramBuildValues</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Diagram Build Type Enum ( Clockwise ).             When the item is serialized out as xml, its value is "cw".</summary>
      </Docs>
    </Member>
    <Member MemberName="ClockwiseIn">
      <MemberSignature Language="C#" Value="ClockwiseIn" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Presentation.DiagramBuildValues ClockwiseIn = int32(6)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Presentation.DiagramBuildValues.ClockwiseIn" />
      <MemberSignature Language="VB.NET" Value="ClockwiseIn" />
      <MemberSignature Language="F#" Value="ClockwiseIn = 6" Usage="DocumentFormat.OpenXml.Presentation.DiagramBuildValues.ClockwiseIn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("cwIn")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.DiagramBuildValues</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>Diagram Build Type Enum ( Clockwise-In ).             When the item is serialized out as xml, its value is "cwIn".</summary>
      </Docs>
    </Member>
    <Member MemberName="ClockwiseOut">
      <MemberSignature Language="C#" Value="ClockwiseOut" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Presentation.DiagramBuildValues ClockwiseOut = int32(7)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Presentation.DiagramBuildValues.ClockwiseOut" />
      <MemberSignature Language="VB.NET" Value="ClockwiseOut" />
      <MemberSignature Language="F#" Value="ClockwiseOut = 7" Usage="DocumentFormat.OpenXml.Presentation.DiagramBuildValues.ClockwiseOut" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("cwOut")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.DiagramBuildValues</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>Diagram Build Type Enum ( Clockwise-Out ).             When the item is serialized out as xml, its value is "cwOut".</summary>
      </Docs>
    </Member>
    <Member MemberName="CounterClockwise">
      <MemberSignature Language="C#" Value="CounterClockwise" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Presentation.DiagramBuildValues CounterClockwise = int32(8)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Presentation.DiagramBuildValues.CounterClockwise" />
      <MemberSignature Language="VB.NET" Value="CounterClockwise" />
      <MemberSignature Language="F#" Value="CounterClockwise = 8" Usage="DocumentFormat.OpenXml.Presentation.DiagramBuildValues.CounterClockwise" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("ccw")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.DiagramBuildValues</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Diagram Build Type Enum ( Counter-Clockwise ).             When the item is serialized out as xml, its value is "ccw".</summary>
      </Docs>
    </Member>
    <Member MemberName="CounterClockwiseIn">
      <MemberSignature Language="C#" Value="CounterClockwiseIn" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Presentation.DiagramBuildValues CounterClockwiseIn = int32(9)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Presentation.DiagramBuildValues.CounterClockwiseIn" />
      <MemberSignature Language="VB.NET" Value="CounterClockwiseIn" />
      <MemberSignature Language="F#" Value="CounterClockwiseIn = 9" Usage="DocumentFormat.OpenXml.Presentation.DiagramBuildValues.CounterClockwiseIn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("ccwIn")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.DiagramBuildValues</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>Diagram Build Type Enum ( Counter-Clockwise-In ).             When the item is serialized out as xml, its value is "ccwIn".</summary>
      </Docs>
    </Member>
    <Member MemberName="CounterClockwiseOut">
      <MemberSignature Language="C#" Value="CounterClockwiseOut" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Presentation.DiagramBuildValues CounterClockwiseOut = int32(10)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Presentation.DiagramBuildValues.CounterClockwiseOut" />
      <MemberSignature Language="VB.NET" Value="CounterClockwiseOut" />
      <MemberSignature Language="F#" Value="CounterClockwiseOut = 10" Usage="DocumentFormat.OpenXml.Presentation.DiagramBuildValues.CounterClockwiseOut" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("ccwOut")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.DiagramBuildValues</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>Diagram Build Type Enum ( Counter-Clockwise-Out ).             When the item is serialized out as xml, its value is "ccwOut".</summary>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="Custom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Presentation.DiagramBuildValues Custom = int32(16)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Presentation.DiagramBuildValues.Custom" />
      <MemberSignature Language="VB.NET" Value="Custom" />
      <MemberSignature Language="F#" Value="Custom = 16" Usage="DocumentFormat.OpenXml.Presentation.DiagramBuildValues.Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("cust")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.DiagramBuildValues</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Diagram Build Type Enum ( Custom ).             When the item is serialized out as xml, its value is "cust".</summary>
      </Docs>
    </Member>
    <Member MemberName="DepthByBranch">
      <MemberSignature Language="C#" Value="DepthByBranch" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Presentation.DiagramBuildValues DepthByBranch = int32(2)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Presentation.DiagramBuildValues.DepthByBranch" />
      <MemberSignature Language="VB.NET" Value="DepthByBranch" />
      <MemberSignature Language="F#" Value="DepthByBranch = 2" Usage="DocumentFormat.OpenXml.Presentation.DiagramBuildValues.DepthByBranch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("depthByBranch")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.DiagramBuildValues</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Diagram Build Type Enum ( Depth By Branch ).             When the item is serialized out as xml, its value is "depthByBranch".</summary>
      </Docs>
    </Member>
    <Member MemberName="DepthByNode">
      <MemberSignature Language="C#" Value="DepthByNode" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Presentation.DiagramBuildValues DepthByNode = int32(1)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Presentation.DiagramBuildValues.DepthByNode" />
      <MemberSignature Language="VB.NET" Value="DepthByNode" />
      <MemberSignature Language="F#" Value="DepthByNode = 1" Usage="DocumentFormat.OpenXml.Presentation.DiagramBuildValues.DepthByNode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("depthByNode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.DiagramBuildValues</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Diagram Build Type Enum ( Depth By Node ).             When the item is serialized out as xml, its value is "depthByNode".</summary>
      </Docs>
    </Member>
    <Member MemberName="Down">
      <MemberSignature Language="C#" Value="Down" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Presentation.DiagramBuildValues Down = int32(14)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Presentation.DiagramBuildValues.Down" />
      <MemberSignature Language="VB.NET" Value="Down" />
      <MemberSignature Language="F#" Value="Down = 14" Usage="DocumentFormat.OpenXml.Presentation.DiagramBuildValues.Down" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("down")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.DiagramBuildValues</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary>Diagram Build Type Enum ( Down ).             When the item is serialized out as xml, its value is "down".</summary>
      </Docs>
    </Member>
    <Member MemberName="InByRing">
      <MemberSignature Language="C#" Value="InByRing" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Presentation.DiagramBuildValues InByRing = int32(11)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Presentation.DiagramBuildValues.InByRing" />
      <MemberSignature Language="VB.NET" Value="InByRing" />
      <MemberSignature Language="F#" Value="InByRing = 11" Usage="DocumentFormat.OpenXml.Presentation.DiagramBuildValues.InByRing" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("inByRing")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.DiagramBuildValues</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>Diagram Build Type Enum ( In-By-Ring ).             When the item is serialized out as xml, its value is "inByRing".</summary>
      </Docs>
    </Member>
    <Member MemberName="OutByRing">
      <MemberSignature Language="C#" Value="OutByRing" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Presentation.DiagramBuildValues OutByRing = int32(12)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Presentation.DiagramBuildValues.OutByRing" />
      <MemberSignature Language="VB.NET" Value="OutByRing" />
      <MemberSignature Language="F#" Value="OutByRing = 12" Usage="DocumentFormat.OpenXml.Presentation.DiagramBuildValues.OutByRing" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("outByRing")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.DiagramBuildValues</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary>Diagram Build Type Enum ( Out-By-Ring ).             When the item is serialized out as xml, its value is "outByRing".</summary>
      </Docs>
    </Member>
    <Member MemberName="Up">
      <MemberSignature Language="C#" Value="Up" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Presentation.DiagramBuildValues Up = int32(13)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Presentation.DiagramBuildValues.Up" />
      <MemberSignature Language="VB.NET" Value="Up" />
      <MemberSignature Language="F#" Value="Up = 13" Usage="DocumentFormat.OpenXml.Presentation.DiagramBuildValues.Up" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("up")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.DiagramBuildValues</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary>Diagram Build Type Enum ( Up ).             When the item is serialized out as xml, its value is "up".</summary>
      </Docs>
    </Member>
    <Member MemberName="Whole">
      <MemberSignature Language="C#" Value="Whole" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Presentation.DiagramBuildValues Whole = int32(0)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Presentation.DiagramBuildValues.Whole" />
      <MemberSignature Language="VB.NET" Value="Whole" />
      <MemberSignature Language="F#" Value="Whole = 0" Usage="DocumentFormat.OpenXml.Presentation.DiagramBuildValues.Whole" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("whole")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.DiagramBuildValues</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Diagram Build Type Enum ( Whole ).             When the item is serialized out as xml, its value is "whole".</summary>
      </Docs>
    </Member>
  </Members>
</Type>