<Type Name="TargetElement" FullName="DocumentFormat.OpenXml.Presentation.TargetElement">
  <TypeSignature Language="C#" Value="public class TargetElement : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TargetElement extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Presentation.TargetElement" />
  <TypeSignature Language="VB.NET" Value="Public Class TargetElement&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type TargetElement = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.SlideTarget))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.SoundTarget))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.ShapeTarget))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.InkTarget))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office2010.PowerPoint.BookmarkTarget), DocumentFormat.OpenXml.FileFormatVersions.Office2010 | DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Target Element Trigger Choice. When the object is serialized out as xml, its qualified name is p:tgtEl.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **tgtEl (Target Element)**  
  
 This element specifies the target children elements which have the animation effects applied to.  
  
 [*Example*:  Consider a shape with ID 3 with a fade effect animation applied to it. The \<tgtEl> element should be used as follows:  
  
```xml  
<p:animEffect transition="in" filter="fade">  
  <p:cBhvr>  
    <p:cTn id="7" dur="2000"/>  
    <p:tgtEl>  
      <p:spTgt spid="3"/>  
    </p:tgtEl>  
  </p:cBhvr>  
</p:animEffect>  
```  
  
 *end example*]  
  
|Parent Elements|  
|---------------------|  
|cBhvr (§19.5.22); cMediaNode (§19.5.29); cond (§19.5.31); endSync (§19.5.39)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|inkTgt (Ink Target)|§19.5.47|  
|sldTgt (Slide Target)|§19.5.67|  
|sndTgt (Sound Target)|§19.5.70|  
|spTgt (Shape Target)|§19.5.72|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_TLTimeTargetElement) is located in §A.3. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TargetElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.TargetElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the TargetElement class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TargetElement (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.TargetElement.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.TargetElement : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Presentation.TargetElement" Usage="new DocumentFormat.OpenXml.Presentation.TargetElement childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the TargetElement class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TargetElement (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.TargetElement.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.TargetElement : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Presentation.TargetElement" Usage="new DocumentFormat.OpenXml.Presentation.TargetElement childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the TargetElement class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TargetElement (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.TargetElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.TargetElement : string -&gt; DocumentFormat.OpenXml.Presentation.TargetElement" Usage="new DocumentFormat.OpenXml.Presentation.TargetElement outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the TargetElement class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BookmarkTarget">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Office2010.PowerPoint.BookmarkTarget BookmarkTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Office2010.PowerPoint.BookmarkTarget BookmarkTarget" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.TargetElement.BookmarkTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property BookmarkTarget As BookmarkTarget" />
      <MemberSignature Language="F#" Value="member this.BookmarkTarget : DocumentFormat.OpenXml.Office2010.PowerPoint.BookmarkTarget with get, set" Usage="DocumentFormat.OpenXml.Presentation.TargetElement.BookmarkTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Office2010.PowerPoint.BookmarkTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>BookmarkTarget. Represents the following element tag in the schema: p14:bmkTgt</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p14 = http://schemas.microsoft.com/office/powerpoint/2010/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.TargetElement.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="targetElement.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InkTarget">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.InkTarget InkTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.InkTarget InkTarget" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.TargetElement.InkTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property InkTarget As InkTarget" />
      <MemberSignature Language="F#" Value="member this.InkTarget : DocumentFormat.OpenXml.Presentation.InkTarget with get, set" Usage="DocumentFormat.OpenXml.Presentation.TargetElement.InkTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.InkTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ink Target. Represents the following element tag in the schema: p:inkTgt</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.InkTarget" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.TargetElement.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Presentation.TargetElement.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeTarget">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.ShapeTarget ShapeTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.ShapeTarget ShapeTarget" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.TargetElement.ShapeTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property ShapeTarget As ShapeTarget" />
      <MemberSignature Language="F#" Value="member this.ShapeTarget : DocumentFormat.OpenXml.Presentation.ShapeTarget with get, set" Usage="DocumentFormat.OpenXml.Presentation.TargetElement.ShapeTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.ShapeTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Shape Target. Represents the following element tag in the schema: p:spTgt</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.ShapeTarget" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="SlideTarget">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.SlideTarget SlideTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.SlideTarget SlideTarget" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.TargetElement.SlideTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property SlideTarget As SlideTarget" />
      <MemberSignature Language="F#" Value="member this.SlideTarget : DocumentFormat.OpenXml.Presentation.SlideTarget with get, set" Usage="DocumentFormat.OpenXml.Presentation.TargetElement.SlideTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.SlideTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Slide Target. Represents the following element tag in the schema: p:sldTgt</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.SlideTarget" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="SoundTarget">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.SoundTarget SoundTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.SoundTarget SoundTarget" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.TargetElement.SoundTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property SoundTarget As SoundTarget" />
      <MemberSignature Language="F#" Value="member this.SoundTarget : DocumentFormat.OpenXml.Presentation.SoundTarget with get, set" Usage="DocumentFormat.OpenXml.Presentation.TargetElement.SoundTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.SoundTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sound Target. Represents the following element tag in the schema: p:sndTgt</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.SoundTarget" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
  </Members>
</Type>