<Type Name="BuildParagraph" FullName="DocumentFormat.OpenXml.Presentation.BuildParagraph">
  <TypeSignature Language="C#" Value="public class BuildParagraph : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BuildParagraph extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Presentation.BuildParagraph" />
  <TypeSignature Language="VB.NET" Value="Public Class BuildParagraph&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type BuildParagraph = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Presentation.TemplateList))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Build Paragraph. When the object is serialized out as xml, its qualified name is p:bldP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **bldP (Build Paragraph)**  
  
 This element specifies how to build paragraph level properties.  
  
 [*Example*:  Consider having animation applied only to 1st level paragraphs. The \<bldP> element should be used as follows:  
  
```xml  
<p:bldLst>  
  <p:bldP spid="3" grpId="0" build="p"/>  
</p:bldLst>  
```  
  
 *end example*]  
  
|Parent Elements|  
|---------------------|  
|bldLst (§19.5.14)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|tmplLst (Template effects)|§19.5.85|  
  
|Attributes|Description|  
|----------------|-----------------|  
|advAuto (Auto Advance Time)|This attribute specifies time after which to automatically advance the build to the next step.<br /><br /> The possible values for this attribute are defined by the *ST_TLTime* simple type (§19.7.38).|  
|animBg (Animate Background)|This attribute indicates whether to animate the background of the shape associated with the text.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|autoUpdateAnimBg (Auto Update Animation Background)|This attribute indicates whether to automatically update the "animateBg" setting to true when the shape associated with the text has a fill or line.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|bldLvl (Build Level)|This attribute describes the build level for the paragraph. It is only supported in paragraph type builds i.e the build attribute shall also be set to "byParagraph" for this attribute to apply.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *unsignedInt* datatype.|  
|build (Build Types)|This attribute describe the build types.<br /><br /> The possible values for this attribute are defined by the *ST_TLParaBuildType* simple type (§19.7.36).|  
|grpId (Group ID)|This attribute ties effects persisted in the animation to the build information. The attribute is used by the editor when changes to the build information are made. GroupIDs are unique for a given shape. They are not guaranteed to be unique IDs across all shapes on a slide.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *unsignedInt* datatype.|  
|rev (Reverse)|This attribute is only supported in paragraph type builds. This specifies the direction of the build relative to the order of the elements in the container. When this is set to "true", the animations for the paragraphs are persisted in reverse order to the order of the paragraphs themselves such that the last paragraph animates first. Default value is "false".<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|spid (Shape ID)|This attribute describes the shape to which the build applies.<br /><br /> The possible values for this attribute are defined by the *ST_ShapeID* simple type (§20.1.10.55).|  
|uiExpand (Expand UI)|This attribute describes the view option indicating if the build should be displayed expanded.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_TLBuildParagraph) is located in §A.3. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BuildParagraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.BuildParagraph.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the BuildParagraph class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BuildParagraph (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.BuildParagraph.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.BuildParagraph : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Presentation.BuildParagraph" Usage="new DocumentFormat.OpenXml.Presentation.BuildParagraph childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the BuildParagraph class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BuildParagraph (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.BuildParagraph.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.BuildParagraph : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Presentation.BuildParagraph" Usage="new DocumentFormat.OpenXml.Presentation.BuildParagraph childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the BuildParagraph class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BuildParagraph (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.BuildParagraph.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Presentation.BuildParagraph : string -&gt; DocumentFormat.OpenXml.Presentation.BuildParagraph" Usage="new DocumentFormat.OpenXml.Presentation.BuildParagraph outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the BuildParagraph class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimateBackground">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue AnimateBackground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue AnimateBackground" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.BuildParagraph.AnimateBackground" />
      <MemberSignature Language="VB.NET" Value="Public Property AnimateBackground As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.AnimateBackground : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Presentation.BuildParagraph.AnimateBackground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "animBg")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Animate Background.Represents the following attribute in the schema: animBg</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoAdvance">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue AutoAdvance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue AutoAdvance" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.BuildParagraph.AutoAdvance" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoAdvance As StringValue" />
      <MemberSignature Language="F#" Value="member this.AutoAdvance : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Presentation.BuildParagraph.AutoAdvance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "advAuto")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Auto Advance Time.Represents the following attribute in the schema: advAuto</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoAnimateBackground">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue AutoAnimateBackground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue AutoAnimateBackground" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.BuildParagraph.AutoAnimateBackground" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoAnimateBackground As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.AutoAnimateBackground : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Presentation.BuildParagraph.AutoAnimateBackground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "autoUpdateAnimBg")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Auto Update Animation Background.Represents the following attribute in the schema: autoUpdateAnimBg</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.ParagraphBuildValues&gt; Build { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Presentation.ParagraphBuildValues&gt; Build" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.BuildParagraph.Build" />
      <MemberSignature Language="VB.NET" Value="Public Property Build As EnumValue(Of ParagraphBuildValues)" />
      <MemberSignature Language="F#" Value="member this.Build : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.ParagraphBuildValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Presentation.BuildParagraph.Build" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "build")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Presentation.ParagraphBuildValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Build Types.Represents the following attribute in the schema: build</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildLevel">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.UInt32Value BuildLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.UInt32Value BuildLevel" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.BuildParagraph.BuildLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property BuildLevel As UInt32Value" />
      <MemberSignature Language="F#" Value="member this.BuildLevel : DocumentFormat.OpenXml.UInt32Value with get, set" Usage="DocumentFormat.OpenXml.Presentation.BuildParagraph.BuildLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "bldLvl")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.UInt32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Build Level.Represents the following attribute in the schema: bldLvl</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.UInt32Value" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Presentation.BuildParagraph.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="buildParagraph.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupId">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.UInt32Value GroupId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.UInt32Value GroupId" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.BuildParagraph.GroupId" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupId As UInt32Value" />
      <MemberSignature Language="F#" Value="member this.GroupId : DocumentFormat.OpenXml.UInt32Value with get, set" Usage="DocumentFormat.OpenXml.Presentation.BuildParagraph.GroupId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "grpId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.UInt32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Group ID.Represents the following attribute in the schema: grpId</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.UInt32Value" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.BuildParagraph.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Presentation.BuildParagraph.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue Reverse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue Reverse" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.BuildParagraph.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Property Reverse As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.Reverse : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Presentation.BuildParagraph.Reverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "rev")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reverse.Represents the following attribute in the schema: rev</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeId">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue ShapeId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue ShapeId" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.BuildParagraph.ShapeId" />
      <MemberSignature Language="VB.NET" Value="Public Property ShapeId As StringValue" />
      <MemberSignature Language="F#" Value="member this.ShapeId : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Presentation.BuildParagraph.ShapeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "spid")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Shape ID.Represents the following attribute in the schema: spid</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateList">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Presentation.TemplateList TemplateList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Presentation.TemplateList TemplateList" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.BuildParagraph.TemplateList" />
      <MemberSignature Language="VB.NET" Value="Public Property TemplateList As TemplateList" />
      <MemberSignature Language="F#" Value="member this.TemplateList : DocumentFormat.OpenXml.Presentation.TemplateList with get, set" Usage="DocumentFormat.OpenXml.Presentation.BuildParagraph.TemplateList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Presentation.TemplateList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Template effects. Represents the following element tag in the schema: p:tmplLst</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Presentation.TemplateList" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:p = http://schemas.openxmlformats.org/presentationml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="UiExpand">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue UiExpand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue UiExpand" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Presentation.BuildParagraph.UiExpand" />
      <MemberSignature Language="VB.NET" Value="Public Property UiExpand As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.UiExpand : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Presentation.BuildParagraph.UiExpand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "uiExpand")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Expand UI.Represents the following attribute in the schema: uiExpand</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>