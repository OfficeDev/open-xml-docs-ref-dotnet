<Type Name="IgnoredError" FullName="DocumentFormat.OpenXml.Office2010.Excel.IgnoredError">
  <TypeSignature Language="C#" Value="public class IgnoredError : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IgnoredError extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Office2010.Excel.IgnoredError" />
  <TypeSignature Language="VB.NET" Value="Public Class IgnoredError&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type IgnoredError = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office.Excel.ReferenceSequence))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.OfficeAvailability(DocumentFormat.OpenXml.FileFormatVersions.Office2010)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the IgnoredError Class.This class is available in Office2010 or above. When the object is serialized out as xml, its qualified name is x14:ignoredError.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 *2.6.54   CT_IgnoredError*  
  
 *Target namespace:* http://schemas.microsoft.com/office/spreadsheetml/2009/9/main  
  
 *Referenced by:* CT_IgnoredErrors  
  
 A complex type that specifies the types of cell errors that are to be ignored for a specific cell range. This complex type is equivalent to *CT_IgnoredError* ([ISO/IEC-29500-1] section 18.3.1.50), but allows the *sqref* child element to have greater than or equal to 8,192 ref child elements.  
  
 *Child Elements:*  
  
 *xm:sqref:* A sqref element that specifies the range where cell errors have been ignored. This sqref MUST have greater than or equal to 8,192 ref child elements.  
  
 *Attributes:*  
  
 *evalError:* A *Boolean* ([XMLSCHEMA2] section 3.2.2) attribute that specifies whether to ignore calculation errors.  
  
 *twoDigitTextYear:* A *Boolean* ([XMLSCHEMA2] section 3.2.2) attribute that specifies whether to ignore errors arising from the formatting of date/time values.  
  
 *numberStoredAsText:* A *Boolean* ([XMLSCHEMA2] section 3.2.2) attribute that specifies whether to ignore errors arising from the formatting of numeric values.  
  
 *formula:* A *Boolean* ([XMLSCHEMA2] section 3.2.2) attribute that specifies whether to ignore errors arising from formulas that are inconsistent with formulas ([ISO/IEC-29500-1] section 18.17) in neighboring cells.  
  
 *formulaRange:* A *Boolean* ([XMLSCHEMA2] section 3.2.2) attribute that specifies whether to ignore errors arising from formulas ([ISO/IEC-29500-1] section 18.17) that contain references to less than the entirety of a range containing contiguous data.  
  
 *unlockedFormula:* A *Boolean* ([XMLSCHEMA2] section 3.2.2) attribute that specifies whether to ignore errors arising from unprotected formulas ([ISO/IEC-29500-1] section 18.17).  
  
 *emptyCellReference:* A *Boolean* ([XMLSCHEMA2] section 3.2.2) attribute that specifies whether to ignore errors arising from references to empty cells.  
  
 *listDataValidation:* A *Boolean* ([XMLSCHEMA2] section 3.2.2) attribute that specifies whether to ignore errors arising from data validation.  
  
 *calculatedColumn:* A *Boolean* ([XMLSCHEMA2] section 3.2.2) attribute that specifies whether to ignore errors arising from calculated column (2) formulas ([ISO/IEC-29500-1] section 18.17).  
  
 The following W3C XML Schema ([XMLSCHEMA1] section 2.1) fragment specifies the contents of this complex type.  
  
 *\<xsd:complexType name="CT_IgnoredError">*  
  
 *\<xsd:sequence>*  
  
 *\<xsd:element ref="xm:sqref" minOccurs="1" maxOccurs="1"/>*  
  
 *\</xsd:sequence>*  
  
 *\<xsd:attribute name="evalError" type="xsd:boolean" use="optional" default="false"/>*  
  
 *\<xsd:attribute name="twoDigitTextYear" type="xsd:boolean" use="optional" default="false"/>*  
  
 *\<xsd:attribute name="numberStoredAsText" type="xsd:boolean" use="optional" default="false"/>*  
  
 *\<xsd:attribute name="formula" type="xsd:boolean" use="optional" default="false"/>*  
  
 *\<xsd:attribute name="formulaRange" type="xsd:boolean" use="optional" default="false"/>*  
  
 *\<xsd:attribute name="unlockedFormula" type="xsd:boolean" use="optional" default="false"/>*  
  
 *\<xsd:attribute name="emptyCellReference" type="xsd:boolean" use="optional" default="false"/>*  
  
 *\<xsd:attribute name="listDataValidation" type="xsd:boolean" use="optional" default="false"/>*  
  
 *\<xsd:attribute name="calculatedColumn" type="xsd:boolean" use="optional" default="false"/>*  
  
 *\</xsd:complexType>*  
  
 See section 5.4 for the full W3C XML Schema ([XMLSCHEMA1] section 2.1).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IgnoredError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the IgnoredError class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IgnoredError (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2010.Excel.IgnoredError : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Office2010.Excel.IgnoredError" Usage="new DocumentFormat.OpenXml.Office2010.Excel.IgnoredError childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the IgnoredError class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IgnoredError (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2010.Excel.IgnoredError : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Office2010.Excel.IgnoredError" Usage="new DocumentFormat.OpenXml.Office2010.Excel.IgnoredError childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the IgnoredError class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IgnoredError (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2010.Excel.IgnoredError : string -&gt; DocumentFormat.OpenXml.Office2010.Excel.IgnoredError" Usage="new DocumentFormat.OpenXml.Office2010.Excel.IgnoredError outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the IgnoredError class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculatedColumn">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue CalculatedColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue CalculatedColumn" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.CalculatedColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculatedColumn As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.CalculatedColumn : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.CalculatedColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "calculatedColumn")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>calculatedColumn.Represents the following attribute in the schema: calculatedColumn</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="ignoredError.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyCellReference">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue EmptyCellReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue EmptyCellReference" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.EmptyCellReference" />
      <MemberSignature Language="VB.NET" Value="Public Property EmptyCellReference As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.EmptyCellReference : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.EmptyCellReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "emptyCellReference")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>emptyCellReference.Represents the following attribute in the schema: emptyCellReference</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvalError">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue EvalError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue EvalError" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.EvalError" />
      <MemberSignature Language="VB.NET" Value="Public Property EvalError As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.EvalError : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.EvalError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "evalError")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>evalError.Represents the following attribute in the schema: evalError</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue Formula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue Formula" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.Formula" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.Formula : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.Formula" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "formula")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>formula.Represents the following attribute in the schema: formula</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaRange">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue FormulaRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue FormulaRange" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.FormulaRange" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaRange As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.FormulaRange : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.FormulaRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "formulaRange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>formulaRange.Represents the following attribute in the schema: formulaRange</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListDataValidation">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue ListDataValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue ListDataValidation" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.ListDataValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property ListDataValidation As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.ListDataValidation : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.ListDataValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "listDataValidation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>listDataValidation.Represents the following attribute in the schema: listDataValidation</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberStoredAsText">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue NumberStoredAsText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue NumberStoredAsText" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.NumberStoredAsText" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberStoredAsText As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.NumberStoredAsText : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.NumberStoredAsText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "numberStoredAsText")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>numberStoredAsText.Represents the following attribute in the schema: numberStoredAsText</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceSequence">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Office.Excel.ReferenceSequence ReferenceSequence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Office.Excel.ReferenceSequence ReferenceSequence" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.ReferenceSequence" />
      <MemberSignature Language="VB.NET" Value="Public Property ReferenceSequence As ReferenceSequence" />
      <MemberSignature Language="F#" Value="member this.ReferenceSequence : DocumentFormat.OpenXml.Office.Excel.ReferenceSequence with get, set" Usage="DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.ReferenceSequence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Office.Excel.ReferenceSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ReferenceSequence. Represents the following element tag in the schema: xne:sqref</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:xne = http://schemas.microsoft.com/office/excel/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="TwoDigitTextYear">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue TwoDigitTextYear { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue TwoDigitTextYear" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.TwoDigitTextYear" />
      <MemberSignature Language="VB.NET" Value="Public Property TwoDigitTextYear As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.TwoDigitTextYear : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.TwoDigitTextYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "twoDigitTextYear")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>twoDigitTextYear.Represents the following attribute in the schema: twoDigitTextYear</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockedFormula">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue UnlockedFormula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue UnlockedFormula" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.UnlockedFormula" />
      <MemberSignature Language="VB.NET" Value="Public Property UnlockedFormula As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.UnlockedFormula : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Excel.IgnoredError.UnlockedFormula" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "unlockedFormula")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>unlockedFormula.Represents the following attribute in the schema: unlockedFormula</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>