<Type Name="CalculatedMember" FullName="DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember">
  <TypeSignature Language="C#" Value="public class CalculatedMember : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CalculatedMember extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember" />
  <TypeSignature Language="VB.NET" Value="Public Class CalculatedMember&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type CalculatedMember = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office2010.Excel.TupleSet), DocumentFormat.OpenXml.FileFormatVersions.Office2010 | DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.OfficeAvailability(DocumentFormat.OpenXml.FileFormatVersions.Office2010)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the CalculatedMember Class.This class is available in Office2010 or above. When the object is serialized out as xml, its qualified name is x14:calculatedMember.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 *2.4.15   calculatedMember*  
  
 *Target namespace:* http://schemas.microsoft.com/office/spreadsheetml/2009/9/main  
  
 A *calculatedMember* element is a *CT_CalculatedMember* type element, as specified in section 2.6.15, that specifies extended properties of a PivotTable, as specified in [ISO/IEC-29500-1] section 18.10, OLAP *calculated* member. See section 2.2.4.5 for how this element integrates with the Office Open XML file formats specified in [ISO/IEC-29500-1].  
  
 The following W3C XML Schema ([XMLSCHEMA1] section 2.1) fragment specifies the contents of this element.  
  
 *\<xsd:element name="calculatedMember" type="CT_CalculatedMember"/>*  
  
 See section 5.4 for the full W3C XML Schema ([XMLSCHEMA1] section 2.1).  
  
 *2.6.15   CT_CalculatedMember*  
  
 *Target namespace:* http://schemas.microsoft.com/office/spreadsheetml/2009/9/main  
  
 *Referenced by:* calculatedMember  
  
 A complex type that specifies extended properties of a PivotTable ([ISO/IEC-29500-1] section 18.10) OLAP calculated member.  
  
 *Child Elements:*  
  
 *tupleSet:* A *CT_TupleSet* element (section 2.6.16) that specifies OLAP tuples within this *OLAP named set*.  
  
 *Attributes:*  
  
 *displayFolder:* An *ST_Xstring* ([ISO/IEC-29500-1] section 22.9.2.19) attribute that specifies the display folder of this *PivotTable* ([ISO/IEC-29500-1] section 18.10) named set. The length of this value MUST be less than 65,536 characters. This attribute MUST NOT exist if the *set* attribute in the ancestor *CT_CalculatedMember* ([ISO/IEC-29500-4] section A.2) element is zero ("0").  
  
 *flattenHierarchies:* A *Boolean* ([XMLSCHEMA2] section 3.2.2) attribute that specifies whether to display members from different OLAP levels of the same PivotTable cache hierarchy of this *PivotTable* named set in the same *PivotTable* field (1). This attribute MUST NOT exist if the *set* attribute in the ancestor *CT_CalculatedMember* element is zero ("0").  
  
|||  
|-|-|  
|*Value*|*Meaning*|  
|*"0"*|*Each member from a different level of the same PivotTable cache hierarchy of this PivotTable named set is displayed in a separate PivotTable field (1).*|  
|*"1"*|*All members from different levels of the same PivotTable cache hierarchy of this PivotTable named set are displayed in the same PivotTable field (1).*|  
  
 *dynamicSet:* A *Boolean* ([XMLSCHEMA2] section 3.2.2) attribute that specifies whether this *PivotTable* named set is a dynamic OLAP named set. This attribute MUST NOT exist if the *set* attribute in the ancestor *CT_CalculatedMember* element is zero ("0").  
  
|||  
|-|-|  
|*Value*|*Meaning*|  
|*"0"*|*This PivotTable named set is a static OLAP named set.*|  
|*"1"*|*This PivotTable named set is a dynamic OLAP named set.*|  
  
 *hierarchizeDistinct:* A *Boolean* ([XMLSCHEMA2] section 3.2.2) attribute that specifies whether to automatically order and remove duplicates from this *PivotTable* named set. This attribute MUST NOT exist if the *set* attribute in the ancestor *CT_CalculatedMember* element is zero ("0").  
  
|||  
|-|-|  
|*Value*|*Meaning*|  
|*"0"*|*Do not automatically order and remove duplicates from this PivotTable named set.*|  
|*"1"*|*Automatically order and remove duplicates from this PivotTable named set.*|  
  
 *mdxLong:* An *ST_Xstring* attribute that specifies *multidimensional expression (MDX)* of the PivotTable OLAP calculated member. The length of this attribute MUST be zero or it MUST be greater than 32,767 characters and less than 1,073,741,823 characters. If this value is greater than 32,767 characters, the length of the *mdx* attribute in the ancestor *CT_CalculatedMember* element MUST be "1" and the first character of the *mdx* attribute MUST be equal to " ", the space character (0x0020).  
  
 The following W3C XML Schema ([XMLSCHEMA1] section 2.1) fragment specifies the contents of this complex type.  
  
 *\<xsd:complexType name="CT_CalculatedMember">*  
  
 *\<xsd:sequence>*  
  
 *\<xsd:element name="tupleSet" minOccurs="0" maxOccurs="1" type="CT_TupleSet"/>*  
  
 *\</xsd:sequence>*  
  
 *\<xsd:attribute name="displayFolder" type="x:ST_Xstring" use="optional"/>*  
  
 *\<xsd:attribute name="flattenHierarchies" type="xsd:boolean" use="optional" default="true"/>*  
  
 *\<xsd:attribute name="dynamicSet" type="xsd:boolean" use="optional" default="false"/>*  
  
 *\<xsd:attribute name="hierarchizeDistinct" type="xsd:boolean" use="optional" default="true"/>*  
  
 *\<xsd:attribute name="mdxLong" type="x:ST_Xstring" use="optional"/>*  
  
 *\</xsd:complexType>*  
  
 See section 5.4 for the full W3C XML Schema ([XMLSCHEMA1] section 2.1).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CalculatedMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the CalculatedMember class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CalculatedMember (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember" Usage="new DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the CalculatedMember class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CalculatedMember (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember" Usage="new DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the CalculatedMember class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CalculatedMember (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember : string -&gt; DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember" Usage="new DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the CalculatedMember class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="calculatedMember.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFolder">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue DisplayFolder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue DisplayFolder" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.DisplayFolder" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFolder As StringValue" />
      <MemberSignature Language="F#" Value="member this.DisplayFolder : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.DisplayFolder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "displayFolder")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>displayFolder.Represents the following attribute in the schema: displayFolder</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicSet">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue DynamicSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue DynamicSet" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.DynamicSet" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicSet As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.DynamicSet : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.DynamicSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "dynamicSet")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>dynamicSet.Represents the following attribute in the schema: dynamicSet</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlattenHierarchies">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue FlattenHierarchies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue FlattenHierarchies" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.FlattenHierarchies" />
      <MemberSignature Language="VB.NET" Value="Public Property FlattenHierarchies As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.FlattenHierarchies : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.FlattenHierarchies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "flattenHierarchies")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>flattenHierarchies.Represents the following attribute in the schema: flattenHierarchies</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HierarchizeDistinct">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue HierarchizeDistinct { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue HierarchizeDistinct" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.HierarchizeDistinct" />
      <MemberSignature Language="VB.NET" Value="Public Property HierarchizeDistinct As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.HierarchizeDistinct : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.HierarchizeDistinct" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "hierarchizeDistinct")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>hierarchizeDistinct.Represents the following attribute in the schema: hierarchizeDistinct</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MdxLong">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue MdxLong { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue MdxLong" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.MdxLong" />
      <MemberSignature Language="VB.NET" Value="Public Property MdxLong As StringValue" />
      <MemberSignature Language="F#" Value="member this.MdxLong : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.MdxLong" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "mdxLong")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>mdxLong.Represents the following attribute in the schema: mdxLong</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TupleSet">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Office2010.Excel.TupleSet TupleSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Office2010.Excel.TupleSet TupleSet" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.TupleSet" />
      <MemberSignature Language="VB.NET" Value="Public Property TupleSet As TupleSet" />
      <MemberSignature Language="F#" Value="member this.TupleSet : DocumentFormat.OpenXml.Office2010.Excel.TupleSet with get, set" Usage="DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.TupleSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Office2010.Excel.TupleSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>TupleSet. Represents the following element tag in the schema: x14:tupleSet</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
      </Docs>
    </Member>
  </Members>
</Type>