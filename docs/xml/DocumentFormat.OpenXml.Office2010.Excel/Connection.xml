<Type Name="Connection" FullName="DocumentFormat.OpenXml.Office2010.Excel.Connection">
  <TypeSignature Language="C#" Value="public class Connection : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Connection extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Office2010.Excel.Connection" />
  <TypeSignature Language="VB.NET" Value="Public Class Connection&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type Connection = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office2010.Excel.CalculatedMembers), DocumentFormat.OpenXml.FileFormatVersions.Office2010 | DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.OfficeAvailability(DocumentFormat.OpenXml.FileFormatVersions.Office2010)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the Connection Class.This class is available in Office2010 or above. When the object is serialized out as xml, its qualified name is x14:connection.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 *2.4.21   connection*  
  
 *Target namespace:* http://schemas.microsoft.com/office/spreadsheetml/2009/9/main  
  
 A *connection* element is a *CT_Connection* type element, as specified in section 2.6.34, that specifies the extended properties of an external connection, as specified in [ISO/IEC-29500-1] section 18.13. If this element exists, the *type* attribute of the ancestor *CT_Connection* element, as specified in [ISO/IEC-29500-4] section A.2, MUST be equal to "5". See section 2.2.4.1 for how this element integrates with the Office Open XML file formats specified in [ISO/IEC-29500-1].  
  
 The following W3C XML Schema ([XMLSCHEMA1] section 2.1) fragment specifies the contents of this element.  
  
 *\<xsd:element name="connection" type="CT_Connection"/>*  
  
 See section 5.4 for the full W3C XML Schema ([XMLSCHEMA1] section 2.1).  
  
 *2.6.34   CT_Connection*  
  
 *Target namespace:* http://schemas.microsoft.com/office/spreadsheetml/2009/9/main  
  
 *Referenced by:* connection  
  
 A complex type that specifies the extended properties of an external connection ([ISO/IEC-29500-1] section 18.13).  
  
 *Child Elements:*  
  
 *calculatedMembers:* A *CT_CalculatedMembers* ([ISO/IEC-29500-4] section A.2) element that specifies a list of PivotTable ([ISO/IEC-29500-1] section 18.10) OLAP-calculated members associated with this external connection ([ISO/IEC-29500-1] section 18.13). If this external connection ([ISO/IEC-29500-1] section 18.13) is associated with a PivotTable ([ISO/IEC-29500-1] section 18.10) PivotCache, the list MUST NOT exist. If this element exists, the ancestor *CT_connection* ([ISO/IEC-29500-4] section A.2) element of this element MUST have a child *CT_OlapPr* ([ISO/IEC-29500-1] section 18.13.5) element.  
  
 *Attributes:*  
  
 *culture:* An *ST_Xstring* ([ISO/IEC-29500-1] section 22.9.2.19) attribute that specifies the language associated with this external connection ([ISO/IEC-29500-1] section 18.13). The length of this string MUST be less than 85 characters. If the length of this string is greater than 0, the contents of this string MUST\<51> be a language tag as specified by [RFC3066]. If this attribute is not present, the data connection is using the server language.  
  
 *embeddedDataId:* An *ST_Xstring* ([ISO/IEC-29500-1] section 22.9.2.19) attribute that specifies an embedded Custom Data part. The length of this value MUST be less than 65,536 characters. If the length of this string is greater than 0, the contents of this string MUST be equal to the *id* attribute of a CT_DatastoreItem element, in a Custom Data Properties part in this package ([ISO/IEC-29500-1] section 9).  
  
 The following W3C XML Schema ([XMLSCHEMA1] section 2.1) fragment specifies the contents of this complex type.  
  
 *\<xsd:complexType name="CT_Connection">*  
  
 *\<xsd:sequence>*  
  
 *\<xsd:element name="calculatedMembers" type="x:CT_CalculatedMembers" minOccurs="0" maxOccurs="1"/>*  
  
 *\</xsd:sequence>*  
  
 *\<xsd:attribute name="culture" use="optional" type="x:ST_Xstring"/>*  
  
 *\<xsd:attribute name="embeddedDataId" use="optional" type="x:ST_Xstring"/>*  
  
 *\</xsd:complexType>*  
  
 See section 5.4 for the full W3C XML Schema ([XMLSCHEMA1] section 2.1).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Connection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.Excel.Connection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the Connection class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Connection (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.Excel.Connection.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2010.Excel.Connection : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Office2010.Excel.Connection" Usage="new DocumentFormat.OpenXml.Office2010.Excel.Connection childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the Connection class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Connection (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.Excel.Connection.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2010.Excel.Connection : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Office2010.Excel.Connection" Usage="new DocumentFormat.OpenXml.Office2010.Excel.Connection childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the Connection class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Connection (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.Excel.Connection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2010.Excel.Connection : string -&gt; DocumentFormat.OpenXml.Office2010.Excel.Connection" Usage="new DocumentFormat.OpenXml.Office2010.Excel.Connection outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the Connection class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculatedMembers">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Office2010.Excel.CalculatedMembers CalculatedMembers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Office2010.Excel.CalculatedMembers CalculatedMembers" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.Connection.CalculatedMembers" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculatedMembers As CalculatedMembers" />
      <MemberSignature Language="F#" Value="member this.CalculatedMembers : DocumentFormat.OpenXml.Office2010.Excel.CalculatedMembers with get, set" Usage="DocumentFormat.OpenXml.Office2010.Excel.Connection.CalculatedMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Office2010.Excel.CalculatedMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>CalculatedMembers. Represents the following element tag in the schema: x14:calculatedMembers</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.Excel.Connection.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="connection.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue Culture" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.Connection.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As StringValue" />
      <MemberSignature Language="F#" Value="member this.Culture : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Excel.Connection.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "culture")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>culture.Represents the following attribute in the schema: culture</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmbeddedDataId">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue EmbeddedDataId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue EmbeddedDataId" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.Connection.EmbeddedDataId" />
      <MemberSignature Language="VB.NET" Value="Public Property EmbeddedDataId As StringValue" />
      <MemberSignature Language="F#" Value="member this.EmbeddedDataId : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Excel.Connection.EmbeddedDataId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "embeddedDataId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>embeddedDataId.Represents the following attribute in the schema: embeddedDataId</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Excel.Connection.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Office2010.Excel.Connection.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>