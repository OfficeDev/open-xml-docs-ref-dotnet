<Type Name="Workbook" FullName="DocumentFormat.OpenXml.Spreadsheet.Workbook">
  <TypeSignature Language="C#" Value="public class Workbook : DocumentFormat.OpenXml.OpenXmlPartRootElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Workbook extends DocumentFormat.OpenXml.OpenXmlPartRootElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Spreadsheet.Workbook" />
  <TypeSignature Language="VB.NET" Value="Public Class Workbook&#xA;Inherits OpenXmlPartRootElement" />
  <TypeSignature Language="F#" Value="type Workbook = class&#xA;    inherit OpenXmlPartRootElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlPartRootElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.FileVersion))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.FileSharing))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.WorkbookProperties))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office2013.ExcelAc.AbsolutePath), DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.WorkbookProtection))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.BookViews))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.Sheets))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.FunctionGroups))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.ExternalReferences))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.DefinedNames))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.CalculationProperties))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.OleSize))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.CustomWorkbookViews))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.PivotCaches))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.WebPublishing))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.FileRecoveryProperties))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.WebPublishObjects))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.WorkbookExtensionList))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Workbook. The root element of WorkbookPart. When the object is serialized out as xml, its qualified name is x:workbook.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **workbook (Workbook)**  
  
 The workbook element is the top level element. It contains elements and attributes that encompass the data content of the workbook. The workbook's child elements each have their own subclause references, and these are shown in the child elements table below. A partial list of the workbook's structures that these elements represent are:  
  
-   Sheets: represents the collection of worksheets in the workbook. The sheets are the central structure within a workbook, and contain the text, numbers, dates, formulas, and other elements of a workbook.  
  
-   Views: SpreadsheetML defines a collection of Workbook views that define basic window dimensions and position of the workbook if it is ever displayed by a spreadsheet application. It also defines a collection of Custom Workbook Views that allows SpreadsheetML to describe one or more views of the data within a workbook.  
  
-   Properties: the workbook has several property collection that store basic workbook settings, such as the date system to use, file protection settings, calculation settings, and smart tag behaviors.  
  
-   Names:  words or strings of characters that represent cells, ranges of cells, formulas, or constant values.  
  
 *[Example:*  
  
```xml  
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>  
<workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/5/main" mlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships">  
  <fileVersion lastEdited="4" lowestEdited="4" rupBuild="4017"/>  
  <workbookPr dateCompatibility="false" vbName="ThisWorkbook" defaultThemeVersion="123820"/>  
  <bookViews>  
    <workbookView xWindow="120" yWindow="45" windowWidth="15135"      windowHeight="7650" activeTab="4"/>  
  </bookViews>  
  <sheets>  
    <sheet name="Sheet1" sheetId="1" r:id="rId1"/>  
    <sheet name="Sheet2" sheetId="2" r:id="rId2"/>  
    <sheet name="Sheet5" sheetId="3" r:id="rId3"/>  
    <sheet name="Chart1" sheetId="4" type="chartsheet" r:id="rId4"/>  
  </sheets>  
  <definedNames>  
    <definedName name="MyDefinedName">Sheet3!$A$1:$C$12</definedName>  
  </definedNames>  
  <calcPr calcId="122211" calcMode="autoNoTable" refMode="R1C1" iterate="1"    fullPrecision="0"/>  
  <customWorkbookViews>  
    <customWorkbookView name="CustomView1"       guid="{CE6681F1-E999-414D-8446-68A031534B57}" maximized="1" xWindow="1"       yWindow="1" windowWidth="1024" windowHeight="547" activeSheetId="1"/>  
  </customWorkbookViews>  
  <pivotCaches>  
    <pivotCache cacheId="0" r:id="rId8"/>  
  </pivotCaches>  
  <smartTagPr embed="1" show="noIndicator"/>  
  <smartTagTypes>  
    <smartTagType namespaceUri="urn:schemas-openxmlformats-org:office:smarttags"       name="date"/>  
  </smartTagTypes>  
  <webPublishing codePage="1252"/>  
</workbook>  
```  
  
 *end example*]  
  
|Parent Elements|  
|---------------------|  
|Root element of SpreadsheetML Workbook part|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|bookViews (Workbook Views)|§18.2.1|  
|calcPr (Calculation Properties)|§18.2.2|  
|customWorkbookViews (Custom Workbook Views)|§18.2.4|  
|definedNames (Defined Names)|§18.2.6|  
|externalReferences (External References)|§18.2.9|  
|extLst (Future Feature Data Storage Area)|§18.2.10|  
|fileRecoveryPr (File Recovery Properties)|§18.2.11|  
|fileSharing (File Sharing)|§18.2.12|  
|fileVersion (File Version)|§18.2.13|  
|functionGroups (Function Groups)|§18.2.15|  
|oleSize (Embedded Object Size)|§18.2.16|  
|pivotCaches (PivotCaches)|§18.2.18|  
|sheets (Sheets)|§18.2.20|  
|smartTagPr (Smart Tag Properties)|§18.2.21|  
|smartTagTypes (Smart Tag Types)|§18.2.23|  
|webPublishing (Web Publishing Properties)|§18.2.24|  
|webPublishObjects (Web Publish Objects)|§18.2.26|  
|workbookPr (Workbook Properties)|§18.2.28|  
|workbookProtection (Workbook Protection)|§18.2.29|  
  
  [*Note*: The W3C XML Schema definition of this element’s content model (CT_Workbook) is located in §A.2. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
   
  
## Examples  
 The following code example opens an existing spreadsheet document and adds a new worksheet, named "mySheet," and associates it with the workbook.  
  
```csharp  
using System;  
using System.Linq;  
using DocumentFormat.OpenXml.Packaging;  
using DocumentFormat.OpenXml.Spreadsheet;  
  
namespace WorkbookEx  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            string fileName = @"C:\Users\Public\Documents\WorkbookEx.xlsx";  
            // Open an existing spreadsheet document for editing.  
            using (SpreadsheetDocument spreadSheet = SpreadsheetDocument.Open(fileName, true))  
            {  
                // Add a blank WorksheetPart.  
                WorksheetPart newWorksheetPart = spreadSheet.WorkbookPart.AddNewPart<WorksheetPart>();  
                newWorksheetPart.Worksheet = new Worksheet(new SheetData());  
  
                // Create a Sheets object in the Workbook.  
                Sheets sheets = spreadSheet.WorkbookPart.Workbook.GetFirstChild<Sheets>();  
                string relationshipId = spreadSheet.WorkbookPart.GetIdOfPart(newWorksheetPart);  
  
                // Create a unique ID for the new worksheet.  
                uint sheetId = 1;  
                if (sheets.Elements<Sheet>().Count() > 0)  
                {  
                    sheetId = sheets.Elements<Sheet>().Select(s => s.SheetId.Value).Max() + 1;  
                }  
  
                // Give the new worksheet a name.  
                string sheetName = "mySheet" + sheetId;  
  
                // Append the new worksheet and associate it with the workbook.  
                Sheet sheet = new Sheet() { Id = relationshipId, SheetId = sheetId, Name = sheetName };  
                sheets.Append(sheet);  
            }  
            Console.WriteLine("All done. Press a key.");  
            Console.ReadKey();  
        }  
    }  
}  
  
```  
  
```  
Imports System.Linq  
Imports DocumentFormat.OpenXml.Packaging  
Imports DocumentFormat.OpenXml.Spreadsheet  
Module Module1  
    Sub Main()  
        Dim fileName As String = "C:\Users\Public\Documents\WorkbookEx.xlsx"  
        ' Open an existing spreadsheet document for editing.  
        Dim spreadSheet As SpreadsheetDocument = SpreadsheetDocument.Open(fileName, True)  
        Using (spreadSheet)  
            ' Add a blank WorksheetPart.  
            Dim newWorksheetPart As WorksheetPart = spreadSheet.WorkbookPart.AddNewPart(Of WorksheetPart)()  
            newWorksheetPart.Worksheet = New Worksheet(New SheetData())  
  
            ' Create a Sheets object.  
            Dim sheets As Sheets = spreadSheet.WorkbookPart.Workbook.GetFirstChild(Of Sheets)()  
            Dim relationshipId As String = spreadSheet.WorkbookPart.GetIdOfPart(newWorksheetPart)  
  
            ' Get a unique ID for the new worksheet.  
            Dim sheetId As UInteger = 1  
            If (sheets.Elements(Of Sheet).Count > 0) Then  
                sheetId = sheets.Elements(Of Sheet).Select(Function(s) s.SheetId.Value).Max + 1  
            End If  
  
            ' Give the new worksheet a name.  
            Dim sheetName As String = ("mySheet" + sheetId.ToString())  
  
            ' Append the new worksheet and associate it with the workbook.  
            Dim sheet As Sheet = New Sheet  
            sheet.Id = relationshipId  
            sheet.SheetId = sheetId  
            sheet.Name = sheetName  
            sheets.Append(sheet)  
        End Using  
        Console.WriteLine("All done. Press a key.")  
        Console.ReadKey()  
    End Sub  
End Module  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Workbook ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.Workbook.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the Workbook class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Workbook (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.Workbook.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Spreadsheet.Workbook : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Spreadsheet.Workbook" Usage="new DocumentFormat.OpenXml.Spreadsheet.Workbook childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the Workbook class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Workbook (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.Workbook.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Spreadsheet.Workbook : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Spreadsheet.Workbook" Usage="new DocumentFormat.OpenXml.Spreadsheet.Workbook childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the Workbook class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Workbook (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.Workbook.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Spreadsheet.Workbook : string -&gt; DocumentFormat.OpenXml.Spreadsheet.Workbook" Usage="new DocumentFormat.OpenXml.Spreadsheet.Workbook outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the Workbook class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsolutePath">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Office2013.ExcelAc.AbsolutePath AbsolutePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Office2013.ExcelAc.AbsolutePath AbsolutePath" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.Workbook.AbsolutePath" />
      <MemberSignature Language="VB.NET" Value="Public Property AbsolutePath As AbsolutePath" />
      <MemberSignature Language="F#" Value="member this.AbsolutePath : DocumentFormat.OpenXml.Office2013.ExcelAc.AbsolutePath with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.Workbook.AbsolutePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.OfficeAvailability(DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Office2013.ExcelAc.AbsolutePath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>AbsolutePath, this property is only available in Office2013. Represents the following element tag in the schema: x15ac:absPath</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x15ac = http://schemas.microsoft.com/office/spreadsheetml/2010/11/ac
            </remark>
      </Docs>
    </Member>
    <Member MemberName="BookViews">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.BookViews BookViews { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.BookViews BookViews" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.Workbook.BookViews" />
      <MemberSignature Language="VB.NET" Value="Public Property BookViews As BookViews" />
      <MemberSignature Language="F#" Value="member this.BookViews : DocumentFormat.OpenXml.Spreadsheet.BookViews with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.Workbook.BookViews" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.BookViews</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>BookViews. Represents the following element tag in the schema: x:bookViews</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="CalculationProperties">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.CalculationProperties CalculationProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.CalculationProperties CalculationProperties" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.Workbook.CalculationProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculationProperties As CalculationProperties" />
      <MemberSignature Language="F#" Value="member this.CalculationProperties : DocumentFormat.OpenXml.Spreadsheet.CalculationProperties with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.Workbook.CalculationProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.CalculationProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>CalculationProperties. Represents the following element tag in the schema: x:calcPr</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.Workbook.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="workbook.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conformance">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.ConformanceClass&gt; Conformance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Spreadsheet.ConformanceClass&gt; Conformance" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.Workbook.Conformance" />
      <MemberSignature Language="VB.NET" Value="Public Property Conformance As EnumValue(Of ConformanceClass)" />
      <MemberSignature Language="F#" Value="member this.Conformance : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.ConformanceClass&gt; with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.Workbook.Conformance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "conformance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.ConformanceClass&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>conformance.Represents the following attribute in the schema: conformance</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomWorkbookViews">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.CustomWorkbookViews CustomWorkbookViews { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.CustomWorkbookViews CustomWorkbookViews" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.Workbook.CustomWorkbookViews" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomWorkbookViews As CustomWorkbookViews" />
      <MemberSignature Language="F#" Value="member this.CustomWorkbookViews : DocumentFormat.OpenXml.Spreadsheet.CustomWorkbookViews with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.Workbook.CustomWorkbookViews" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.CustomWorkbookViews</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>CustomWorkbookViews. Represents the following element tag in the schema: x:customWorkbookViews</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="DefinedNames">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.DefinedNames DefinedNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.DefinedNames DefinedNames" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.Workbook.DefinedNames" />
      <MemberSignature Language="VB.NET" Value="Public Property DefinedNames As DefinedNames" />
      <MemberSignature Language="F#" Value="member this.DefinedNames : DocumentFormat.OpenXml.Spreadsheet.DefinedNames with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.Workbook.DefinedNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.DefinedNames</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>DefinedNames. Represents the following element tag in the schema: x:definedNames</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="ExternalReferences">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.ExternalReferences ExternalReferences { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.ExternalReferences ExternalReferences" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.Workbook.ExternalReferences" />
      <MemberSignature Language="VB.NET" Value="Public Property ExternalReferences As ExternalReferences" />
      <MemberSignature Language="F#" Value="member this.ExternalReferences : DocumentFormat.OpenXml.Spreadsheet.ExternalReferences with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.Workbook.ExternalReferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ExternalReferences</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ExternalReferences. Represents the following element tag in the schema: x:externalReferences</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="FileSharing">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.FileSharing FileSharing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.FileSharing FileSharing" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.Workbook.FileSharing" />
      <MemberSignature Language="VB.NET" Value="Public Property FileSharing As FileSharing" />
      <MemberSignature Language="F#" Value="member this.FileSharing : DocumentFormat.OpenXml.Spreadsheet.FileSharing with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.Workbook.FileSharing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.FileSharing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>FileSharing. Represents the following element tag in the schema: x:fileSharing</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="FileVersion">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.FileVersion FileVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.FileVersion FileVersion" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.Workbook.FileVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property FileVersion As FileVersion" />
      <MemberSignature Language="F#" Value="member this.FileVersion : DocumentFormat.OpenXml.Spreadsheet.FileVersion with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.Workbook.FileVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.FileVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>FileVersion. Represents the following element tag in the schema: x:fileVersion</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="FunctionGroups">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.FunctionGroups FunctionGroups { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.FunctionGroups FunctionGroups" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.Workbook.FunctionGroups" />
      <MemberSignature Language="VB.NET" Value="Public Property FunctionGroups As FunctionGroups" />
      <MemberSignature Language="F#" Value="member this.FunctionGroups : DocumentFormat.OpenXml.Spreadsheet.FunctionGroups with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.Workbook.FunctionGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.FunctionGroups</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>FunctionGroups. Represents the following element tag in the schema: x:functionGroups</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (DocumentFormat.OpenXml.Packaging.WorkbookPart openXmlPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class DocumentFormat.OpenXml.Packaging.WorkbookPart openXmlPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.Workbook.Load(DocumentFormat.OpenXml.Packaging.WorkbookPart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (openXmlPart As WorkbookPart)" />
      <MemberSignature Language="F#" Value="override this.Load : DocumentFormat.OpenXml.Packaging.WorkbookPart -&gt; unit" Usage="workbook.Load openXmlPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="openXmlPart" Type="DocumentFormat.OpenXml.Packaging.WorkbookPart" />
      </Parameters>
      <Docs>
        <param name="openXmlPart">Specifies the part to be loaded.</param>
        <summary>Loads the DOM from the WorkbookPart.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.Workbook.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Spreadsheet.Workbook.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OleSize">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.OleSize OleSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.OleSize OleSize" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.Workbook.OleSize" />
      <MemberSignature Language="VB.NET" Value="Public Property OleSize As OleSize" />
      <MemberSignature Language="F#" Value="member this.OleSize : DocumentFormat.OpenXml.Spreadsheet.OleSize with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.Workbook.OleSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.OleSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>OleSize. Represents the following element tag in the schema: x:oleSize</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="PivotCaches">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.PivotCaches PivotCaches { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.PivotCaches PivotCaches" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.Workbook.PivotCaches" />
      <MemberSignature Language="VB.NET" Value="Public Property PivotCaches As PivotCaches" />
      <MemberSignature Language="F#" Value="member this.PivotCaches : DocumentFormat.OpenXml.Spreadsheet.PivotCaches with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.Workbook.PivotCaches" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.PivotCaches</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>PivotCaches. Represents the following element tag in the schema: x:pivotCaches</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (DocumentFormat.OpenXml.Packaging.WorkbookPart openXmlPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class DocumentFormat.OpenXml.Packaging.WorkbookPart openXmlPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.Workbook.Save(DocumentFormat.OpenXml.Packaging.WorkbookPart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (openXmlPart As WorkbookPart)" />
      <MemberSignature Language="F#" Value="override this.Save : DocumentFormat.OpenXml.Packaging.WorkbookPart -&gt; unit" Usage="workbook.Save openXmlPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="openXmlPart" Type="DocumentFormat.OpenXml.Packaging.WorkbookPart" />
      </Parameters>
      <Docs>
        <param name="openXmlPart">Specifies the part to save to.</param>
        <summary>Saves the DOM into the WorkbookPart.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sheets">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.Sheets Sheets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.Sheets Sheets" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.Workbook.Sheets" />
      <MemberSignature Language="VB.NET" Value="Public Property Sheets As Sheets" />
      <MemberSignature Language="F#" Value="member this.Sheets : DocumentFormat.OpenXml.Spreadsheet.Sheets with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.Workbook.Sheets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sheets. Represents the following element tag in the schema: x:sheets</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="WebPublishing">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.WebPublishing WebPublishing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.WebPublishing WebPublishing" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.Workbook.WebPublishing" />
      <MemberSignature Language="VB.NET" Value="Public Property WebPublishing As WebPublishing" />
      <MemberSignature Language="F#" Value="member this.WebPublishing : DocumentFormat.OpenXml.Spreadsheet.WebPublishing with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.Workbook.WebPublishing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.WebPublishing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WebPublishing. Represents the following element tag in the schema: x:webPublishing</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="WorkbookPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.WorkbookPart WorkbookPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.WorkbookPart WorkbookPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.Workbook.WorkbookPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkbookPart As WorkbookPart" />
      <MemberSignature Language="F#" Value="member this.WorkbookPart : DocumentFormat.OpenXml.Packaging.WorkbookPart" Usage="DocumentFormat.OpenXml.Spreadsheet.Workbook.WorkbookPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WorkbookPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the WorkbookPart associated with this element.</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Packaging.WorkbookPart" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkbookProperties">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.WorkbookProperties WorkbookProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.WorkbookProperties WorkbookProperties" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.Workbook.WorkbookProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkbookProperties As WorkbookProperties" />
      <MemberSignature Language="F#" Value="member this.WorkbookProperties : DocumentFormat.OpenXml.Spreadsheet.WorkbookProperties with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.Workbook.WorkbookProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.WorkbookProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WorkbookProperties. Represents the following element tag in the schema: x:workbookPr</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="WorkbookProtection">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.WorkbookProtection WorkbookProtection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.WorkbookProtection WorkbookProtection" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.Workbook.WorkbookProtection" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkbookProtection As WorkbookProtection" />
      <MemberSignature Language="F#" Value="member this.WorkbookProtection : DocumentFormat.OpenXml.Spreadsheet.WorkbookProtection with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.Workbook.WorkbookProtection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.WorkbookProtection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WorkbookProtection. Represents the following element tag in the schema: x:workbookProtection</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
  </Members>
</Type>