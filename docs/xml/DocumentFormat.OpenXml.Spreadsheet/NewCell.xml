<Type Name="NewCell" FullName="DocumentFormat.OpenXml.Spreadsheet.NewCell">
  <TypeSignature Language="C#" Value="public class NewCell : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NewCell extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Spreadsheet.NewCell" />
  <TypeSignature Language="VB.NET" Value="Public Class NewCell&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type NewCell = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.CellFormula))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.CellValue))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.InlineString))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.ExtensionList))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>New Cell Data. When the object is serialized out as xml, its qualified name is x:nc.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **nc (New Cell Data)**  
  
 This element represents new cell data that was added to the worksheet.  
  
 For most spreadsheet application purposes, only the data type and reference need to be used for revision tracking purposes. The rest of the cell properties can be written out, but are not necessarily needed as they can be recorded in other areas of the spreadsheet.  For instance the \<rfmt> element can be used to record style information instead of the *S (style index)* attribute.  
  
|Parent Elements|  
|---------------------|  
|rcc (§18.11.1.9)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|extLst (Future Feature Data Storage Area)|§18.2.10|  
|f (Formula)|§18.3.1.40|  
|is (Rich Text Inline)|§18.3.1.53|  
|v (Cell Value)|§18.3.1.96|  
  
|Attributes|Description|  
|----------------|-----------------|  
|cm (Cell Metadata Index)|The zero-based index of the cell metadata record associated with this cell. Metadata information is found in the Metadata Part. Cell metadata is extra information stored at the cell level, and is attached to the cell (travels through moves, copy / paste, clear, etc). Cell metadata is not accessible via formula reference.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *unsignedInt* datatype.|  
|ph (Show Phonetic)|A Boolean value indicating if the spreadsheet application should show phonetic information.  Phonetic information is displayed in the same cell across the top of the cell and serves as a 'hint' which indicates how the text should be pronounced.  This should only be used for East Asian languages.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|r (Reference)|An A1 style reference to the location of this cell<br /><br /> The possible values for this attribute are defined by the *ST_CellRef* simple type (§18.18.7).|  
|s (Style Index)|The index of this cell's style. Style records are stored in the Styles Part.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *unsignedInt* datatype.|  
|t (Cell Data Type)|An enumeration representing the cell's data type.<br /><br /> The possible values for this attribute are defined by the *ST_CellType* simple type (§18.18.11).|  
|vm (Value Metadata Index)|The zero-based index of the value metadata record associated with this cell's value. Metadata records are stored in the Metadata Part. Value metadata is extra information stored at the cell level, but associated with the value rather than the cell itself. Value metadata is accessible via formula reference.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *unsignedInt* datatype.|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_Cell) is located in §A.2. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NewCell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.NewCell.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the NewCell class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NewCell (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.NewCell.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Spreadsheet.NewCell : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Spreadsheet.NewCell" Usage="new DocumentFormat.OpenXml.Spreadsheet.NewCell childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the NewCell class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NewCell (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.NewCell.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Spreadsheet.NewCell : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Spreadsheet.NewCell" Usage="new DocumentFormat.OpenXml.Spreadsheet.NewCell childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the NewCell class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NewCell (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.NewCell.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Spreadsheet.NewCell : string -&gt; DocumentFormat.OpenXml.Spreadsheet.NewCell" Usage="new DocumentFormat.OpenXml.Spreadsheet.NewCell outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the NewCell class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellFormula">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.CellFormula CellFormula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.CellFormula CellFormula" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.NewCell.CellFormula" />
      <MemberSignature Language="VB.NET" Value="Public Property CellFormula As CellFormula" />
      <MemberSignature Language="F#" Value="member this.CellFormula : DocumentFormat.OpenXml.Spreadsheet.CellFormula with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.NewCell.CellFormula" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.CellFormula</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Formula. Represents the following element tag in the schema: x:f</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="CellMetaIndex">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.UInt32Value CellMetaIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.UInt32Value CellMetaIndex" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.NewCell.CellMetaIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property CellMetaIndex As UInt32Value" />
      <MemberSignature Language="F#" Value="member this.CellMetaIndex : DocumentFormat.OpenXml.UInt32Value with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.NewCell.CellMetaIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "cm")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.UInt32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cell Metadata Index.Represents the following attribute in the schema: cm</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellReference">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue CellReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue CellReference" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.NewCell.CellReference" />
      <MemberSignature Language="VB.NET" Value="Public Property CellReference As StringValue" />
      <MemberSignature Language="F#" Value="member this.CellReference : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.NewCell.CellReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "r")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reference.Represents the following attribute in the schema: r</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellValue">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.CellValue CellValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.CellValue CellValue" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.NewCell.CellValue" />
      <MemberSignature Language="VB.NET" Value="Public Property CellValue As CellValue" />
      <MemberSignature Language="F#" Value="member this.CellValue : DocumentFormat.OpenXml.Spreadsheet.CellValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.NewCell.CellValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.CellValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cell Value. Represents the following element tag in the schema: x:v</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.NewCell.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="newCell.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.CellValues&gt; DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Spreadsheet.CellValues&gt; DataType" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.NewCell.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As EnumValue(Of CellValues)" />
      <MemberSignature Language="F#" Value="member this.DataType : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.CellValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.NewCell.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "t")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.CellValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cell Data Type.Represents the following attribute in the schema: t</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtensionList">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.ExtensionList ExtensionList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.ExtensionList ExtensionList" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.NewCell.ExtensionList" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtensionList As ExtensionList" />
      <MemberSignature Language="F#" Value="member this.ExtensionList : DocumentFormat.OpenXml.Spreadsheet.ExtensionList with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.NewCell.ExtensionList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ExtensionList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Future Feature Data Storage Area. Represents the following element tag in the schema: x:extLst</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="InlineString">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.InlineString InlineString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.InlineString InlineString" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.NewCell.InlineString" />
      <MemberSignature Language="VB.NET" Value="Public Property InlineString As InlineString" />
      <MemberSignature Language="F#" Value="member this.InlineString : DocumentFormat.OpenXml.Spreadsheet.InlineString with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.NewCell.InlineString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.InlineString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rich Text Inline. Represents the following element tag in the schema: x:is</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.NewCell.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Spreadsheet.NewCell.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPhonetic">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue ShowPhonetic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue ShowPhonetic" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.NewCell.ShowPhonetic" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPhonetic As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.ShowPhonetic : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.NewCell.ShowPhonetic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "ph")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Show Phonetic.Represents the following attribute in the schema: ph</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleIndex">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.UInt32Value StyleIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.UInt32Value StyleIndex" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.NewCell.StyleIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property StyleIndex As UInt32Value" />
      <MemberSignature Language="F#" Value="member this.StyleIndex : DocumentFormat.OpenXml.UInt32Value with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.NewCell.StyleIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "s")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.UInt32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Style Index.Represents the following attribute in the schema: s</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueMetaIndex">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.UInt32Value ValueMetaIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.UInt32Value ValueMetaIndex" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.NewCell.ValueMetaIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueMetaIndex As UInt32Value" />
      <MemberSignature Language="F#" Value="member this.ValueMetaIndex : DocumentFormat.OpenXml.UInt32Value with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.NewCell.ValueMetaIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "vm")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.UInt32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Value Metadata Index.Represents the following attribute in the schema: vm</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>