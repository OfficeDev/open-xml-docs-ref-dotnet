<Type Name="PhoneticRun" FullName="DocumentFormat.OpenXml.Spreadsheet.PhoneticRun">
  <TypeSignature Language="C#" Value="public class PhoneticRun : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PhoneticRun extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Spreadsheet.PhoneticRun" />
  <TypeSignature Language="VB.NET" Value="Public Class PhoneticRun&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type PhoneticRun = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.Text))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Phonetic Run. When the object is serialized out as xml, its qualified name is x:rPh.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **rPh (Phonetic Run)**  
  
 This element represents a run of text which displays a phonetic hint for this String Item (si).  
  
 Phonetic hints are used to give information about the pronunciation of an East Asian language.  The hints are displayed as text within the spreadsheet cells across the top portion of the cell.  
  
|Parent Elements|  
|---------------------|  
|is (§18.3.1.53); si (§18.4.8); text (§18.7.7)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|t (Text)|§18.4.12|  
  
|Attributes|Description|  
|----------------|-----------------|  
|eb (Base Text End Index)|An integer used as a zero-based index representing the ending offset into the base text for this phonetic run.  This represents the ending point in the base text the phonetic hint applies to.<br /><br /> This value shall be between 0 and the total length of the base text.  The following condition shall be true:  *sb* < *eb*.<br /><br /> It is recommended that the following condition also be satisfied:<br /><br /> That for any two consecutive phonetic runs, *sb*1 < *eb*1 <= *sb*2 < *eb*2  to avoid overlapping phonetic runs<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *unsignedInt* datatype.|  
|sb (Base Text Start Index)|An integer used as a zero-based index representing the starting offset into the base text for this phonetic run.  This represents the starting point in the base text the phonetic hint applies to.<br /><br /> This value shall be between 0 and the total length of the base text.  The following condition shall be true:  *sb* < *eb.*<br /><br /> It is recommended that the following condition also be satisfied:<br /><br /> That for any two consecutive phonetic runs, *sb*1 < *eb*1 <= *sb*2 < *eb*2  to avoid overlapping phonetic runs.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *unsignedInt* datatype.|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_PhoneticRun) is located in §A.2. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PhoneticRun ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.PhoneticRun.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the PhoneticRun class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PhoneticRun (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.PhoneticRun.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Spreadsheet.PhoneticRun : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Spreadsheet.PhoneticRun" Usage="new DocumentFormat.OpenXml.Spreadsheet.PhoneticRun childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the PhoneticRun class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PhoneticRun (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.PhoneticRun.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Spreadsheet.PhoneticRun : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Spreadsheet.PhoneticRun" Usage="new DocumentFormat.OpenXml.Spreadsheet.PhoneticRun childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the PhoneticRun class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PhoneticRun (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.PhoneticRun.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Spreadsheet.PhoneticRun : string -&gt; DocumentFormat.OpenXml.Spreadsheet.PhoneticRun" Usage="new DocumentFormat.OpenXml.Spreadsheet.PhoneticRun outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the PhoneticRun class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseTextStartIndex">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.UInt32Value BaseTextStartIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.UInt32Value BaseTextStartIndex" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PhoneticRun.BaseTextStartIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseTextStartIndex As UInt32Value" />
      <MemberSignature Language="F#" Value="member this.BaseTextStartIndex : DocumentFormat.OpenXml.UInt32Value with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.PhoneticRun.BaseTextStartIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "sb")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.UInt32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Base Text Start Index.Represents the following attribute in the schema: sb</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.UInt32Value" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.PhoneticRun.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="phoneticRun.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndingBaseIndex">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.UInt32Value EndingBaseIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.UInt32Value EndingBaseIndex" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PhoneticRun.EndingBaseIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property EndingBaseIndex As UInt32Value" />
      <MemberSignature Language="F#" Value="member this.EndingBaseIndex : DocumentFormat.OpenXml.UInt32Value with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.PhoneticRun.EndingBaseIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "eb")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.UInt32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Base Text End Index.Represents the following attribute in the schema: eb</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.UInt32Value" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PhoneticRun.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Spreadsheet.PhoneticRun.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.Text Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.Text Text" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PhoneticRun.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As Text" />
      <MemberSignature Language="F#" Value="member this.Text : DocumentFormat.OpenXml.Spreadsheet.Text with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.PhoneticRun.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.Text</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Text. Represents the following element tag in the schema: x:t</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Spreadsheet.Text" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
  </Members>
</Type>