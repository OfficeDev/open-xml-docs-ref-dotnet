<Type Name="PageSetup" FullName="DocumentFormat.OpenXml.Spreadsheet.PageSetup">
  <TypeSignature Language="C#" Value="public class PageSetup : DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PageSetup extends DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Spreadsheet.PageSetup" />
  <TypeSignature Language="VB.NET" Value="Public Class PageSetup&#xA;Inherits OpenXmlLeafElement" />
  <TypeSignature Language="F#" Value="type PageSetup = class&#xA;    inherit OpenXmlLeafElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlLeafElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Page Setup Settings. When the object is serialized out as xml, its qualified name is x:pageSetup.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **pageSetup (Page Setup Settings)**  
  
 Page setup settings for the worksheet.  
  
 [*Example*: The following example shows the pageSetup element for  A0 paper, printed in black and white, with graphics:  
  
```xml  
<pageSetup blackAndWhite="true" draft="false" paperHeight="1189" paperWidth="841" paperUnits="mm" />  
```  
  
 *end example*]  
  
|Parent Elements|  
|---------------------|  
|customSheetView (§18.3.1.25); dialogsheet (§18.3.1.34); worksheet (§18.3.1.99)|  
  
|Attributes|Description|  
|----------------|-----------------|  
|blackAndWhite (Black And White)|Print black and white.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|cellComments (Print Cell Comments)|This attribute specifies how to print cell comments.<br /><br /> The possible values for this attribute are defined by the *ST_CellComments* simple type (§18.18.5).|  
|copies (Number Of Copies)|Number of copies to print.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *unsignedInt* datatype.|  
|draft (Draft)|Print without graphics.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|errors (Print Error Handling)|Specifies how to print cell values for cells with errors.<br /><br /> The possible values for this attribute are defined by the *ST_PrintError* simple type (§18.18.60).|  
|firstPageNumber (First Page Number)|Page number for first printed page. If no value is specified, then 'automatic' is assumed.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *unsignedInt* datatype.|  
|fitToHeight (Fit To Height)|Number of vertical pages to fit on.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *unsignedInt* datatype.|  
|fitToWidth (Fit To Width)|Number of horizontal pages to fit on.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *unsignedInt* datatype.|  
|horizontalDpi (Horizontal DPI)|Horizontal print resolution of the device.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *unsignedInt* datatype.|  
|id (Id)<br /><br /> Namespace: *.../officeDocument/2006/relationships*|Relationship Id of the devMode printer settings part.<br /><br /> The possible values for this attribute are defined by the *ST_RelationshipId* simple type (§22.8.2.1).|  
|orientation (Orientation)|Orientation of the page.<br /><br /> The possible values for this attribute are defined by the *ST_Orientation* simple type (§18.18.50).|  
|pageOrder (Page Order)|Order of printed pages.<br /><br /> The possible values for this attribute are defined by the *ST_PageOrder* simple type (§18.18.51).|  
|paperHeight (Paper Height)|Height of custom paper as a number followed by a unit identifier. [*Example*: *297mm*, *11in* *end example*]<br /><br /> When paperHeight and paperWidth are specified, paperSize shall be ignored.<br /><br /> The possible values for this attribute are defined by the *ST_PositiveUniversalMeasure* simple type (§22.9.2.12).|  
|paperSize (Paper Size)|Paper size<br /><br /> 1 = Letter paper (8.5 in. by 11 in.)<br /><br /> 2 = Letter small paper (8.5 in. by 11 in.)<br /><br /> 3 = Tabloid paper (11 in. by 17 in.)<br /><br /> 4 = Ledger paper (17 in. by 11 in.)<br /><br /> 5 = Legal paper (8.5 in. by 14 in.)<br /><br /> 6 = Statement paper (5.5 in. by 8.5 in.)<br /><br /> 7 = Executive paper (7.25 in. by 10.5 in.)<br /><br /> 8 = A3 paper (297 mm by 420 mm)<br /><br /> 9 = A4 paper (210 mm by 297 mm)<br /><br /> 10 = A4 small paper (210 mm by 297 mm)<br /><br /> 11 = A5 paper (148 mm by 210 mm)<br /><br /> 12 = B4 paper (250 mm by 353 mm)<br /><br /> 13 = B5 paper (176 mm by 250 mm)<br /><br /> 14 = Folio paper (8.5 in. by 13 in.)<br /><br /> 15 = Quarto paper (215 mm by 275 mm)<br /><br /> 16 = Standard paper (10 in. by 14 in.)<br /><br /> 17 = Standard paper (11 in. by 17 in.)<br /><br /> 18 = Note paper (8.5 in. by 11 in.)<br /><br /> 19 = #9 envelope (3.875 in. by 8.875 in.)<br /><br /> 20 = #10 envelope (4.125 in. by 9.5 in.)<br /><br /> 21 = #11 envelope (4.5 in. by 10.375 in.)<br /><br /> 22 = #12 envelope (4.75 in. by 11 in.)<br /><br /> 23 = #14 envelope (5 in. by 11.5 in.)<br /><br /> 24 = C paper (17 in. by 22 in.)<br /><br /> 25 = D paper (22 in. by 34 in.)<br /><br /> 26 = E paper (34 in. by 44 in.)<br /><br /> 27 = DL envelope (110 mm by 220 mm)<br /><br /> 28 = C5 envelope (162 mm by 229 mm)<br /><br /> 29 = C3 envelope (324 mm by 458 mm)<br /><br /> 30 = C4 envelope (229 mm by 324 mm)<br /><br /> 31 = C6 envelope (114 mm by 162 mm)<br /><br /> 32 = C65 envelope (114 mm by 229 mm)<br /><br /> 33 = B4 envelope (250 mm by 353 mm)<br /><br /> 34 = B5 envelope (176 mm by 250 mm)<br /><br /> 35 = B6 envelope (176 mm by 125 mm)<br /><br /> 36 = Italy envelope (110 mm by 230 mm)<br /><br /> 37 = Monarch envelope (3.875 in. by 7.5 in.).<br /><br /> 38 = 6 3/4 envelope (3.625 in. by 6.5 in.)<br /><br /> 39 = US standard fanfold (14.875 in. by 11 in.)<br /><br /> 40 = German standard fanfold (8.5 in. by 12 in.)<br /><br /> 41 = German legal fanfold (8.5 in. by 13 in.)<br /><br /> 42 =  B4 (250 mm by 353 mm)<br /><br /> 43 = Japanese double postcard (200 mm by 148 mm)<br /><br /> 44 = Standard paper (9 in. by 11 in.)<br /><br /> 45 = Standard paper (10 in. by 11 in.)<br /><br /> 46 = Standard paper (15 in. by 11 in.)<br /><br /> 47 = Invite envelope (220 mm by 220 mm)<br /><br /> 50 = Letter extra paper (9.275 in. by 12 in.)<br /><br /> 51 = Legal extra paper (9.275 in. by 15 in.)<br /><br /> 52 = Tabloid extra paper (11.69 in. by 18 in.)<br /><br /> 53 = A4 extra paper (236 mm by 322 mm)<br /><br /> 54 = Letter transverse paper (8.275 in. by 11 in.)<br /><br /> 55 = A4 transverse paper (210 mm by 297 mm)<br /><br /> 56 = Letter extra transverse paper (9.275 in. by 12 in.)<br /><br /> 57 = SuperA/SuperA/A4 paper (227 mm by 356 mm)<br /><br /> 58 = SuperB/SuperB/A3 paper (305 mm by 487 mm)<br /><br /> 59 = Letter plus paper (8.5 in. by 12.69 in.)<br /><br /> 60 = A4 plus paper (210 mm by 330 mm)<br /><br /> 61 = A5 transverse paper (148 mm by 210 mm)<br /><br /> 62 = JIS B5 transverse paper (182 mm by 257 mm)<br /><br /> 63 = A3 extra paper (322 mm by 445 mm)<br /><br /> 64 = A5 extra paper (174 mm by 235 mm)<br /><br /> 65 =  B5 extra paper (201 mm by 276 mm)<br /><br /> 66 = A2 paper (420 mm by 594 mm)<br /><br /> 67 = A3 transverse paper (297 mm by 420 mm)<br /><br /> 68 = A3 extra transverse paper (322 mm by 445 mm)<br /><br /> When paperHeight, paperWidth, and paperUnits are specified, paperSize should be ignored.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *unsignedInt* datatype.|  
|paperWidth (Paper Width)|Width of custom paper as a number followed by a unit identifier. [*Example*: *21cm*, *8.5in* *end example*]<br /><br /> When paperHeight and paperWidth are specified, paperSize shall be ignored.<br /><br /> The possible values for this attribute are defined by the *ST_PositiveUniversalMeasure* simple type (§22.9.2.12).|  
|scale (Print Scale)|Print scaling. This attribute is restricted to values ranging from 10 to 400.<br /><br /> [*Example*:<br /><br /> 10 - 10%<br /><br /> 20 - 20%<br /><br /> …<br /><br /> 100 - 100%<br /><br /> …<br /><br /> 400 - 400%<br /><br /> *end example*]<br /><br /> This setting is overridden when fitToWidth and/or fitToHeight are in use.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *unsignedInt* datatype.|  
|useFirstPageNumber (Use First Page Number)|Use firstPageNumber value for first page number, and do not auto number the pages.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|usePrinterDefaults (Use Printer Defaults)|Use the printer’s defaults settings for page setup values and don't use the default values specified in the schema.  [*Example*: If dpi is not present or specified in the XML, the application must not  assume 600dpi as specified in the schema as a default and instead must let the printer specify the default dpi. *end example*]<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|verticalDpi (Vertical DPI)|Vertical print resolution of the device.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *unsignedInt* datatype.|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_PageSetup) is located in §A.2. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageSetup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.PageSetup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the PageSetup class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlackAndWhite">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue BlackAndWhite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue BlackAndWhite" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PageSetup.BlackAndWhite" />
      <MemberSignature Language="VB.NET" Value="Public Property BlackAndWhite As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.BlackAndWhite : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.PageSetup.BlackAndWhite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "blackAndWhite")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Black And White.Represents the following attribute in the schema: blackAndWhite</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellComments">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.CellCommentsValues&gt; CellComments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Spreadsheet.CellCommentsValues&gt; CellComments" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PageSetup.CellComments" />
      <MemberSignature Language="VB.NET" Value="Public Property CellComments As EnumValue(Of CellCommentsValues)" />
      <MemberSignature Language="F#" Value="member this.CellComments : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.CellCommentsValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.PageSetup.CellComments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "cellComments")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.CellCommentsValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Print Cell Comments.Represents the following attribute in the schema: cellComments</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.PageSetup.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="pageSetup.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copies">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.UInt32Value Copies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.UInt32Value Copies" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PageSetup.Copies" />
      <MemberSignature Language="VB.NET" Value="Public Property Copies As UInt32Value" />
      <MemberSignature Language="F#" Value="member this.Copies : DocumentFormat.OpenXml.UInt32Value with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.PageSetup.Copies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "copies")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.UInt32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Number Of Copies.Represents the following attribute in the schema: copies</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.UInt32Value" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Draft">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue Draft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue Draft" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PageSetup.Draft" />
      <MemberSignature Language="VB.NET" Value="Public Property Draft As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.Draft : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.PageSetup.Draft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "draft")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Draft.Represents the following attribute in the schema: draft</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.PrintErrorValues&gt; Errors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Spreadsheet.PrintErrorValues&gt; Errors" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PageSetup.Errors" />
      <MemberSignature Language="VB.NET" Value="Public Property Errors As EnumValue(Of PrintErrorValues)" />
      <MemberSignature Language="F#" Value="member this.Errors : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.PrintErrorValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.PageSetup.Errors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "errors")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.PrintErrorValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Print Error Handling.Represents the following attribute in the schema: errors</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstPageNumber">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.UInt32Value FirstPageNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.UInt32Value FirstPageNumber" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PageSetup.FirstPageNumber" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstPageNumber As UInt32Value" />
      <MemberSignature Language="F#" Value="member this.FirstPageNumber : DocumentFormat.OpenXml.UInt32Value with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.PageSetup.FirstPageNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "firstPageNumber")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.UInt32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>First Page Number.Represents the following attribute in the schema: firstPageNumber</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.UInt32Value" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FitToHeight">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.UInt32Value FitToHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.UInt32Value FitToHeight" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PageSetup.FitToHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property FitToHeight As UInt32Value" />
      <MemberSignature Language="F#" Value="member this.FitToHeight : DocumentFormat.OpenXml.UInt32Value with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.PageSetup.FitToHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "fitToHeight")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.UInt32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Fit To Height.Represents the following attribute in the schema: fitToHeight</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.UInt32Value" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FitToWidth">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.UInt32Value FitToWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.UInt32Value FitToWidth" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PageSetup.FitToWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property FitToWidth As UInt32Value" />
      <MemberSignature Language="F#" Value="member this.FitToWidth : DocumentFormat.OpenXml.UInt32Value with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.PageSetup.FitToWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "fitToWidth")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.UInt32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Fit To Width.Represents the following attribute in the schema: fitToWidth</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.UInt32Value" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalDpi">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.UInt32Value HorizontalDpi { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.UInt32Value HorizontalDpi" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PageSetup.HorizontalDpi" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalDpi As UInt32Value" />
      <MemberSignature Language="F#" Value="member this.HorizontalDpi : DocumentFormat.OpenXml.UInt32Value with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.PageSetup.HorizontalDpi" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "horizontalDpi")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.UInt32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Horizontal DPI.Represents the following attribute in the schema: horizontalDpi</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.UInt32Value" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue Id" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PageSetup.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As StringValue" />
      <MemberSignature Language="F#" Value="member this.Id : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.PageSetup.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(19, "id")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Id.Represents the following attribute in the schema: r:id</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>To be added.</remarks>
        <remark> xmlns:r=http://schemas.openxmlformats.org/officeDocument/2006/relationships
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PageSetup.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Spreadsheet.PageSetup.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.OrientationValues&gt; Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Spreadsheet.OrientationValues&gt; Orientation" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PageSetup.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As EnumValue(Of OrientationValues)" />
      <MemberSignature Language="F#" Value="member this.Orientation : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.OrientationValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.PageSetup.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "orientation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.OrientationValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Orientation.Represents the following attribute in the schema: orientation</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageOrder">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.PageOrderValues&gt; PageOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Spreadsheet.PageOrderValues&gt; PageOrder" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PageSetup.PageOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property PageOrder As EnumValue(Of PageOrderValues)" />
      <MemberSignature Language="F#" Value="member this.PageOrder : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.PageOrderValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.PageSetup.PageOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "pageOrder")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.PageOrderValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Page Order.Represents the following attribute in the schema: pageOrder</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PaperSize">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.UInt32Value PaperSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.UInt32Value PaperSize" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PageSetup.PaperSize" />
      <MemberSignature Language="VB.NET" Value="Public Property PaperSize As UInt32Value" />
      <MemberSignature Language="F#" Value="member this.PaperSize : DocumentFormat.OpenXml.UInt32Value with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.PageSetup.PaperSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "paperSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.UInt32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Paper Size.Represents the following attribute in the schema: paperSize</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.UInt32Value" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.UInt32Value Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.UInt32Value Scale" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PageSetup.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Property Scale As UInt32Value" />
      <MemberSignature Language="F#" Value="member this.Scale : DocumentFormat.OpenXml.UInt32Value with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.PageSetup.Scale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "scale")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.UInt32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Print Scale.Represents the following attribute in the schema: scale</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.UInt32Value" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseFirstPageNumber">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue UseFirstPageNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue UseFirstPageNumber" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PageSetup.UseFirstPageNumber" />
      <MemberSignature Language="VB.NET" Value="Public Property UseFirstPageNumber As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.UseFirstPageNumber : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.PageSetup.UseFirstPageNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "useFirstPageNumber")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use First Page Number.Represents the following attribute in the schema: useFirstPageNumber</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsePrinterDefaults">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue UsePrinterDefaults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue UsePrinterDefaults" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PageSetup.UsePrinterDefaults" />
      <MemberSignature Language="VB.NET" Value="Public Property UsePrinterDefaults As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.UsePrinterDefaults : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.PageSetup.UsePrinterDefaults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "usePrinterDefaults")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use Printer Defaults.Represents the following attribute in the schema: usePrinterDefaults</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalDpi">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.UInt32Value VerticalDpi { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.UInt32Value VerticalDpi" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.PageSetup.VerticalDpi" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalDpi As UInt32Value" />
      <MemberSignature Language="F#" Value="member this.VerticalDpi : DocumentFormat.OpenXml.UInt32Value with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.PageSetup.VerticalDpi" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "verticalDpi")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.UInt32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Vertical DPI.Represents the following attribute in the schema: verticalDpi</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.UInt32Value" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>