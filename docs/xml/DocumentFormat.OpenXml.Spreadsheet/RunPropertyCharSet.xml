<Type Name="RunPropertyCharSet" FullName="DocumentFormat.OpenXml.Spreadsheet.RunPropertyCharSet">
  <TypeSignature Language="C#" Value="public class RunPropertyCharSet : DocumentFormat.OpenXml.Spreadsheet.InternationalPropertyType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RunPropertyCharSet extends DocumentFormat.OpenXml.Spreadsheet.InternationalPropertyType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Spreadsheet.RunPropertyCharSet" />
  <TypeSignature Language="VB.NET" Value="Public Class RunPropertyCharSet&#xA;Inherits InternationalPropertyType" />
  <TypeSignature Language="F#" Value="type RunPropertyCharSet = class&#xA;    inherit InternationalPropertyType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Spreadsheet.InternationalPropertyType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Character Set. When the object is serialized out as xml, its qualified name is x:charset.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **charset (Character Set)**  
  
 This element defines the font character set of this font.  
  
 This field is used in font creation and selection if a font of the given facename is not available on the system. Although it is not required to have around when resolving font facename, the information can be stored for when needed to help resolve which font face to use of all available fonts on a system.  
  
 Charset represents the basic set of characters associated with a font (that it can display), and roughly corresponds to the  codepage (8-bit or DBCS) of that character set used by a given language. Given more common use of Unicode where many fonts support more than one of the traditional charset categories, and the use of font linking, using charset to resolve font name is less and less common, but still can be useful.  
  
 These are operating-system-dependent values.  
  
 [*Note*: The following are some of the possible the character sets:  
  
 Value  
  
 Character Set  
  
 0  
  
 _CHARSET  
  
 1  
  
 DEFAULT_CHARSET  
  
 2  
  
 SYMBOL_CHARSET  
  
 77  
  
 _CHARSET  
  
 128  
  
 SHIFTJIS_CHARSET  
  
 129  
  
 HANGEUL_CHARSET  
  
 129  
  
 HANGUL_CHARSET  
  
 130  
  
 JOHAB_CHARSET  
  
 134  
  
 GB2312_CHARSET  
  
 136  
  
 CHINESEBIG5_CHARSET  
  
 161  
  
 GREEK_CHARSET  
  
 162  
  
 TURKISH_CHARSET  
  
 163  
  
 VIETNAMESE_CHARSET  
  
 177  
  
 HEBREW_CHARSET  
  
 178  
  
 ARABIC_CHARSET  
  
 186  
  
 BALTIC_CHARSET  
  
 204  
  
 RUSSIAN_CHARSET  
  
 222  
  
 THAI_CHARSET  
  
 238  
  
 EASTEUROPE_CHARSET  
  
 255  
  
 OEM_CHARSET  
  
 The OEM_CHARSET value specifies a character set that is operating-system dependent. *end note*]  
  
 Fonts with other character sets can exist in the operating system. If an application uses a font with an unknown character set, it should not attempt to translate or interpret strings that are rendered with that font.  
  
|Parent Elements|  
|---------------------|  
|font (§18.8.22); rPr (§18.4.7)|  
  
|Attributes|Description|  
|----------------|-----------------|  
|val (Value)|The value of an integer, where each value corresponds to a different character set.  This attribute is restricted to values ranging from 0 to 255.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *int* datatype.|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_IntProperty) is located in §A.2. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RunPropertyCharSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.RunPropertyCharSet.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the RunPropertyCharSet class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.RunPropertyCharSet.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="runPropertyCharSet.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.RunPropertyCharSet.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Spreadsheet.RunPropertyCharSet.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>