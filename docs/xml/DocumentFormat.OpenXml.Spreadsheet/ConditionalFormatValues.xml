<Type Name="ConditionalFormatValues" FullName="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues">
  <TypeSignature Language="C#" Value="public enum ConditionalFormatValues" FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConditionalFormatValues extends System.Enum" FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" />
  <TypeSignature Language="VB.NET" Value="Public Enum ConditionalFormatValues" FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1" />
  <TypeSignature Language="F#" Value="type ConditionalFormatValues = " FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1" />
  <TypeSignature Language="C#" Value="public readonly struct ConditionalFormatValues : DocumentFormat.OpenXml.IEnumValue, DocumentFormat.OpenXml.IEnumValueFactory&lt;DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues&gt;, IEquatable&lt;DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues&gt;" FrameworkAlternate="openxml-3.0.0;openxml-3.0.1" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ConditionalFormatValues extends System.ValueType implements class DocumentFormat.OpenXml.IEnumValue, class DocumentFormat.OpenXml.IEnumValueFactory`1&lt;valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues&gt;, class System.IEquatable`1&lt;valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues&gt;" FrameworkAlternate="openxml-3.0.0;openxml-3.0.1" />
  <TypeSignature Language="VB.NET" Value="Public Structure ConditionalFormatValues&#xA;Implements IEnumValue, IEnumValueFactory(Of ConditionalFormatValues), IEquatable(Of ConditionalFormatValues)" FrameworkAlternate="openxml-3.0.0;openxml-3.0.1" />
  <TypeSignature Language="F#" Value="type ConditionalFormatValues = struct&#xA;    interface IEnumValue&#xA;    interface IEnumValueFactory&lt;ConditionalFormatValues&gt;" FrameworkAlternate="openxml-3.0.0;openxml-3.0.1" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>0.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.0.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
    <AssemblyVersion>2.9.1.0</AssemblyVersion>
    <AssemblyVersion>2.10.0.0</AssemblyVersion>
    <AssemblyVersion>2.10.1.0</AssemblyVersion>
    <AssemblyVersion>2.11.0.0</AssemblyVersion>
    <AssemblyVersion>2.11.1.0</AssemblyVersion>
    <AssemblyVersion>2.11.2.0</AssemblyVersion>
    <AssemblyVersion>2.11.3.0</AssemblyVersion>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
    <AssemblyVersion>2.12.1.0</AssemblyVersion>
    <AssemblyVersion>2.12.2.0</AssemblyVersion>
    <AssemblyVersion>2.12.3.0</AssemblyVersion>
    <AssemblyVersion>2.13.0.0</AssemblyVersion>
    <AssemblyVersion>2.13.1.0</AssemblyVersion>
    <AssemblyVersion>2.14.0.0</AssemblyVersion>
    <AssemblyVersion>2.15.0.0</AssemblyVersion>
    <AssemblyVersion>2.16.0.0</AssemblyVersion>
    <AssemblyVersion>2.17.1.0</AssemblyVersion>
    <AssemblyVersion>2.18.0.0</AssemblyVersion>
    <AssemblyVersion>2.19.0.0</AssemblyVersion>
    <AssemblyVersion>2.20.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
    <BaseTypeName FrameworkAlternate="openxml-3.0.0;openxml-3.0.1">System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="openxml-3.0.0;openxml-3.0.1">
      <InterfaceName>DocumentFormat.OpenXml.IEnumValue</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="openxml-3.0.0;openxml-3.0.1">
      <InterfaceName>DocumentFormat.OpenXml.IEnumValueFactory&lt;DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="openxml-3.0.0;openxml-3.0.1">
      <InterfaceName>System.IEquatable&lt;DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1">
      <AttributeName Language="C#">[System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="openxml-3.0.1">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Conditional Format Type
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalFormatValues (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues : string -&gt; DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Usage="new DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="openxml-3.0.1">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="openxml-3.0.0;openxml-3.0.1" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
            Creates a new ConditionalFormatValues enum instance
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AboveAverage">
      <MemberSignature Language="C#" Value="AboveAverage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues AboveAverage = int32(17)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.AboveAverage" />
      <MemberSignature Language="VB.NET" Value="AboveAverage" />
      <MemberSignature Language="F#" Value="AboveAverage = 17" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.AboveAverage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>0.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.1.0</AssemblyVersion>
        <AssemblyVersion>2.10.0.0</AssemblyVersion>
        <AssemblyVersion>2.10.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.0.0</AssemblyVersion>
        <AssemblyVersion>2.11.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.2.0</AssemblyVersion>
        <AssemblyVersion>2.11.3.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
        <AssemblyVersion>2.12.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.2.0</AssemblyVersion>
        <AssemblyVersion>2.12.3.0</AssemblyVersion>
        <AssemblyVersion>2.13.0.0</AssemblyVersion>
        <AssemblyVersion>2.13.1.0</AssemblyVersion>
        <AssemblyVersion>2.14.0.0</AssemblyVersion>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1">
          <AttributeName Language="C#">[DocumentFormat.OpenXml.EnumString("aboveAverage")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.EnumString("aboveAverage")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary>
            Above or Below Average.
            <para>When the item is serialized out as xml, its value is "aboveAverage".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="AboveAverage">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues AboveAverage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues AboveAverage" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.AboveAverage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AboveAverage As ConditionalFormatValues" />
      <MemberSignature Language="F#" Value="static member AboveAverage : DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.AboveAverage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Above or Below Average.
            <para>When the item is serialized out as xml, its value is "aboveAverage".</para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginsWith">
      <MemberSignature Language="C#" Value="BeginsWith" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues BeginsWith = int32(10)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.BeginsWith" />
      <MemberSignature Language="VB.NET" Value="BeginsWith" />
      <MemberSignature Language="F#" Value="BeginsWith = 10" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.BeginsWith" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>0.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.1.0</AssemblyVersion>
        <AssemblyVersion>2.10.0.0</AssemblyVersion>
        <AssemblyVersion>2.10.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.0.0</AssemblyVersion>
        <AssemblyVersion>2.11.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.2.0</AssemblyVersion>
        <AssemblyVersion>2.11.3.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
        <AssemblyVersion>2.12.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.2.0</AssemblyVersion>
        <AssemblyVersion>2.12.3.0</AssemblyVersion>
        <AssemblyVersion>2.13.0.0</AssemblyVersion>
        <AssemblyVersion>2.13.1.0</AssemblyVersion>
        <AssemblyVersion>2.14.0.0</AssemblyVersion>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1">
          <AttributeName Language="C#">[DocumentFormat.OpenXml.EnumString("beginsWith")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.EnumString("beginsWith")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>
            Begins With.
            <para>When the item is serialized out as xml, its value is "beginsWith".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="BeginsWith">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues BeginsWith { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues BeginsWith" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.BeginsWith" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BeginsWith As ConditionalFormatValues" />
      <MemberSignature Language="F#" Value="static member BeginsWith : DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.BeginsWith" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Begins With.
            <para>When the item is serialized out as xml, its value is "beginsWith".</para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellIs">
      <MemberSignature Language="C#" Value="CellIs" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues CellIs = int32(1)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.CellIs" />
      <MemberSignature Language="VB.NET" Value="CellIs" />
      <MemberSignature Language="F#" Value="CellIs = 1" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.CellIs" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>0.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.1.0</AssemblyVersion>
        <AssemblyVersion>2.10.0.0</AssemblyVersion>
        <AssemblyVersion>2.10.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.0.0</AssemblyVersion>
        <AssemblyVersion>2.11.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.2.0</AssemblyVersion>
        <AssemblyVersion>2.11.3.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
        <AssemblyVersion>2.12.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.2.0</AssemblyVersion>
        <AssemblyVersion>2.12.3.0</AssemblyVersion>
        <AssemblyVersion>2.13.0.0</AssemblyVersion>
        <AssemblyVersion>2.13.1.0</AssemblyVersion>
        <AssemblyVersion>2.14.0.0</AssemblyVersion>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1">
          <AttributeName Language="C#">[DocumentFormat.OpenXml.EnumString("cellIs")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.EnumString("cellIs")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
            Cell Is.
            <para>When the item is serialized out as xml, its value is "cellIs".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="CellIs">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues CellIs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues CellIs" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.CellIs" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CellIs As ConditionalFormatValues" />
      <MemberSignature Language="F#" Value="static member CellIs : DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.CellIs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Cell Is.
            <para>When the item is serialized out as xml, its value is "cellIs".</para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorScale">
      <MemberSignature Language="C#" Value="ColorScale" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues ColorScale = int32(2)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ColorScale" />
      <MemberSignature Language="VB.NET" Value="ColorScale" />
      <MemberSignature Language="F#" Value="ColorScale = 2" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ColorScale" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>0.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.1.0</AssemblyVersion>
        <AssemblyVersion>2.10.0.0</AssemblyVersion>
        <AssemblyVersion>2.10.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.0.0</AssemblyVersion>
        <AssemblyVersion>2.11.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.2.0</AssemblyVersion>
        <AssemblyVersion>2.11.3.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
        <AssemblyVersion>2.12.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.2.0</AssemblyVersion>
        <AssemblyVersion>2.12.3.0</AssemblyVersion>
        <AssemblyVersion>2.13.0.0</AssemblyVersion>
        <AssemblyVersion>2.13.1.0</AssemblyVersion>
        <AssemblyVersion>2.14.0.0</AssemblyVersion>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1">
          <AttributeName Language="C#">[DocumentFormat.OpenXml.EnumString("colorScale")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.EnumString("colorScale")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
            Color Scale.
            <para>When the item is serialized out as xml, its value is "colorScale".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="ColorScale">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues ColorScale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues ColorScale" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ColorScale" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ColorScale As ConditionalFormatValues" />
      <MemberSignature Language="F#" Value="static member ColorScale : DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ColorScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Color Scale.
            <para>When the item is serialized out as xml, its value is "colorScale".</para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsBlanks">
      <MemberSignature Language="C#" Value="ContainsBlanks" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues ContainsBlanks = int32(12)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ContainsBlanks" />
      <MemberSignature Language="VB.NET" Value="ContainsBlanks" />
      <MemberSignature Language="F#" Value="ContainsBlanks = 12" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ContainsBlanks" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>0.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.1.0</AssemblyVersion>
        <AssemblyVersion>2.10.0.0</AssemblyVersion>
        <AssemblyVersion>2.10.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.0.0</AssemblyVersion>
        <AssemblyVersion>2.11.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.2.0</AssemblyVersion>
        <AssemblyVersion>2.11.3.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
        <AssemblyVersion>2.12.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.2.0</AssemblyVersion>
        <AssemblyVersion>2.12.3.0</AssemblyVersion>
        <AssemblyVersion>2.13.0.0</AssemblyVersion>
        <AssemblyVersion>2.13.1.0</AssemblyVersion>
        <AssemblyVersion>2.14.0.0</AssemblyVersion>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1">
          <AttributeName Language="C#">[DocumentFormat.OpenXml.EnumString("containsBlanks")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.EnumString("containsBlanks")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary>
            Contains Blanks.
            <para>When the item is serialized out as xml, its value is "containsBlanks".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="ContainsBlanks">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues ContainsBlanks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues ContainsBlanks" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ContainsBlanks" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContainsBlanks As ConditionalFormatValues" />
      <MemberSignature Language="F#" Value="static member ContainsBlanks : DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ContainsBlanks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Contains Blanks.
            <para>When the item is serialized out as xml, its value is "containsBlanks".</para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsErrors">
      <MemberSignature Language="C#" Value="ContainsErrors" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues ContainsErrors = int32(14)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ContainsErrors" />
      <MemberSignature Language="VB.NET" Value="ContainsErrors" />
      <MemberSignature Language="F#" Value="ContainsErrors = 14" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ContainsErrors" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>0.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.1.0</AssemblyVersion>
        <AssemblyVersion>2.10.0.0</AssemblyVersion>
        <AssemblyVersion>2.10.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.0.0</AssemblyVersion>
        <AssemblyVersion>2.11.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.2.0</AssemblyVersion>
        <AssemblyVersion>2.11.3.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
        <AssemblyVersion>2.12.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.2.0</AssemblyVersion>
        <AssemblyVersion>2.12.3.0</AssemblyVersion>
        <AssemblyVersion>2.13.0.0</AssemblyVersion>
        <AssemblyVersion>2.13.1.0</AssemblyVersion>
        <AssemblyVersion>2.14.0.0</AssemblyVersion>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1">
          <AttributeName Language="C#">[DocumentFormat.OpenXml.EnumString("containsErrors")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.EnumString("containsErrors")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary>
            Contains Errors.
            <para>When the item is serialized out as xml, its value is "containsErrors".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="ContainsErrors">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues ContainsErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues ContainsErrors" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ContainsErrors" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContainsErrors As ConditionalFormatValues" />
      <MemberSignature Language="F#" Value="static member ContainsErrors : DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ContainsErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Contains Errors.
            <para>When the item is serialized out as xml, its value is "containsErrors".</para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="ContainsText" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues ContainsText = int32(8)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ContainsText" />
      <MemberSignature Language="VB.NET" Value="ContainsText" />
      <MemberSignature Language="F#" Value="ContainsText = 8" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ContainsText" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>0.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.1.0</AssemblyVersion>
        <AssemblyVersion>2.10.0.0</AssemblyVersion>
        <AssemblyVersion>2.10.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.0.0</AssemblyVersion>
        <AssemblyVersion>2.11.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.2.0</AssemblyVersion>
        <AssemblyVersion>2.11.3.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
        <AssemblyVersion>2.12.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.2.0</AssemblyVersion>
        <AssemblyVersion>2.12.3.0</AssemblyVersion>
        <AssemblyVersion>2.13.0.0</AssemblyVersion>
        <AssemblyVersion>2.13.1.0</AssemblyVersion>
        <AssemblyVersion>2.14.0.0</AssemblyVersion>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1">
          <AttributeName Language="C#">[DocumentFormat.OpenXml.EnumString("containsText")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.EnumString("containsText")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
            Contains Text.
            <para>When the item is serialized out as xml, its value is "containsText".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues ContainsText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues ContainsText" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContainsText As ConditionalFormatValues" />
      <MemberSignature Language="F#" Value="static member ContainsText : DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ContainsText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Contains Text.
            <para>When the item is serialized out as xml, its value is "containsText".</para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBar">
      <MemberSignature Language="C#" Value="DataBar" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues DataBar = int32(3)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.DataBar" />
      <MemberSignature Language="VB.NET" Value="DataBar" />
      <MemberSignature Language="F#" Value="DataBar = 3" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.DataBar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>0.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.1.0</AssemblyVersion>
        <AssemblyVersion>2.10.0.0</AssemblyVersion>
        <AssemblyVersion>2.10.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.0.0</AssemblyVersion>
        <AssemblyVersion>2.11.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.2.0</AssemblyVersion>
        <AssemblyVersion>2.11.3.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
        <AssemblyVersion>2.12.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.2.0</AssemblyVersion>
        <AssemblyVersion>2.12.3.0</AssemblyVersion>
        <AssemblyVersion>2.13.0.0</AssemblyVersion>
        <AssemblyVersion>2.13.1.0</AssemblyVersion>
        <AssemblyVersion>2.14.0.0</AssemblyVersion>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1">
          <AttributeName Language="C#">[DocumentFormat.OpenXml.EnumString("dataBar")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.EnumString("dataBar")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
            Data Bar.
            <para>When the item is serialized out as xml, its value is "dataBar".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="DataBar">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues DataBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues DataBar" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.DataBar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DataBar As ConditionalFormatValues" />
      <MemberSignature Language="F#" Value="static member DataBar : DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.DataBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Data Bar.
            <para>When the item is serialized out as xml, its value is "dataBar".</para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentFormat.OpenXml.IEnumValue.IsValid">
      <MemberSignature Language="C#" Value="bool DocumentFormat.OpenXml.IEnumValue.IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DocumentFormat.OpenXml.IEnumValue.IsValid" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.DocumentFormat#OpenXml#IEnumValue#IsValid" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsValid As Boolean Implements IEnumValue.IsValid" />
      <MemberSignature Language="F#" Value="member this.DocumentFormat.OpenXml.IEnumValue.IsValid : bool" Usage="DocumentFormat.OpenXml.IEnumValue.IsValid" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:DocumentFormat.OpenXml.IEnumValue.IsValid</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentFormat.OpenXml.IEnumValue.Value">
      <MemberSignature Language="C#" Value="string DocumentFormat.OpenXml.IEnumValue.Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentFormat.OpenXml.IEnumValue.Value" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.DocumentFormat#OpenXml#IEnumValue#Value" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Value As String Implements IEnumValue.Value" />
      <MemberSignature Language="F#" Value="member this.DocumentFormat.OpenXml.IEnumValue.Value : string" Usage="DocumentFormat.OpenXml.IEnumValue.Value" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:DocumentFormat.OpenXml.IEnumValue.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="openxml-3.0.1">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="openxml-3.0.1">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentFormat.OpenXml.IEnumValue.Version">
      <MemberSignature Language="C#" Value="DocumentFormat.OpenXml.FileFormatVersions DocumentFormat.OpenXml.IEnumValue.Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype DocumentFormat.OpenXml.FileFormatVersions DocumentFormat.OpenXml.IEnumValue.Version" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.DocumentFormat#OpenXml#IEnumValue#Version" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Version As FileFormatVersions Implements IEnumValue.Version" />
      <MemberSignature Language="F#" Value="member this.DocumentFormat.OpenXml.IEnumValue.Version : DocumentFormat.OpenXml.FileFormatVersions" Usage="DocumentFormat.OpenXml.IEnumValue.Version" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:DocumentFormat.OpenXml.IEnumValue.Version</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.FileFormatVersions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentFormat.OpenXml.IEnumValueFactory&lt;DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues&gt;.Create">
      <MemberSignature Language="C#" Value="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues IEnumValueFactory&lt;ConditionalFormatValues&gt;.Create (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues DocumentFormat.OpenXml.IEnumValueFactory&lt;DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues&gt;.Create(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.DocumentFormat#OpenXml#IEnumValueFactory&lt;DocumentFormat#OpenXml#Spreadsheet#ConditionalFormatValues&gt;#Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function Create (name As String) As ConditionalFormatValues Implements IEnumValueFactory(Of ConditionalFormatValues).Create" />
      <MemberSignature Language="F#" Value="abstract member DocumentFormat.OpenXml.IEnumValueFactory&lt;DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues&gt;.Create : string -&gt; DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues&#xA;override this.DocumentFormat.OpenXml.IEnumValueFactory&lt;DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues&gt;.Create : string -&gt; DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Usage="conditionalFormatValues.DocumentFormat.OpenXml.IEnumValueFactory&lt;DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues&gt;.Create name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:DocumentFormat.OpenXml.IEnumValueFactory`1.Create(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="openxml-3.0.1">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="openxml-3.0.0;openxml-3.0.1" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateValues">
      <MemberSignature Language="C#" Value="DuplicateValues" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues DuplicateValues = int32(7)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.DuplicateValues" />
      <MemberSignature Language="VB.NET" Value="DuplicateValues" />
      <MemberSignature Language="F#" Value="DuplicateValues = 7" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.DuplicateValues" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>0.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.1.0</AssemblyVersion>
        <AssemblyVersion>2.10.0.0</AssemblyVersion>
        <AssemblyVersion>2.10.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.0.0</AssemblyVersion>
        <AssemblyVersion>2.11.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.2.0</AssemblyVersion>
        <AssemblyVersion>2.11.3.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
        <AssemblyVersion>2.12.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.2.0</AssemblyVersion>
        <AssemblyVersion>2.12.3.0</AssemblyVersion>
        <AssemblyVersion>2.13.0.0</AssemblyVersion>
        <AssemblyVersion>2.13.1.0</AssemblyVersion>
        <AssemblyVersion>2.14.0.0</AssemblyVersion>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1">
          <AttributeName Language="C#">[DocumentFormat.OpenXml.EnumString("duplicateValues")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.EnumString("duplicateValues")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
            Duplicate Values.
            <para>When the item is serialized out as xml, its value is "duplicateValues".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="DuplicateValues">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues DuplicateValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues DuplicateValues" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.DuplicateValues" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DuplicateValues As ConditionalFormatValues" />
      <MemberSignature Language="F#" Value="static member DuplicateValues : DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.DuplicateValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Duplicate Values.
            <para>When the item is serialized out as xml, its value is "duplicateValues".</para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="EndsWith" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues EndsWith = int32(11)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.EndsWith" />
      <MemberSignature Language="VB.NET" Value="EndsWith" />
      <MemberSignature Language="F#" Value="EndsWith = 11" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.EndsWith" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>0.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.1.0</AssemblyVersion>
        <AssemblyVersion>2.10.0.0</AssemblyVersion>
        <AssemblyVersion>2.10.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.0.0</AssemblyVersion>
        <AssemblyVersion>2.11.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.2.0</AssemblyVersion>
        <AssemblyVersion>2.11.3.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
        <AssemblyVersion>2.12.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.2.0</AssemblyVersion>
        <AssemblyVersion>2.12.3.0</AssemblyVersion>
        <AssemblyVersion>2.13.0.0</AssemblyVersion>
        <AssemblyVersion>2.13.1.0</AssemblyVersion>
        <AssemblyVersion>2.14.0.0</AssemblyVersion>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1">
          <AttributeName Language="C#">[DocumentFormat.OpenXml.EnumString("endsWith")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.EnumString("endsWith")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>
            Ends With.
            <para>When the item is serialized out as xml, its value is "endsWith".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues EndsWith { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues EndsWith" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.EndsWith" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EndsWith As ConditionalFormatValues" />
      <MemberSignature Language="F#" Value="static member EndsWith : DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.EndsWith" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ends With.
            <para>When the item is serialized out as xml, its value is "endsWith".</para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues other) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.Equals(DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ConditionalFormatValues) As Boolean" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Index="0" FrameworkAlternate="openxml-3.0.0;openxml-3.0.1" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="openxml-3.0.0;openxml-3.0.1" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="Expression" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues Expression = int32(0)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.Expression" />
      <MemberSignature Language="VB.NET" Value="Expression" />
      <MemberSignature Language="F#" Value="Expression = 0" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.Expression" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>0.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.1.0</AssemblyVersion>
        <AssemblyVersion>2.10.0.0</AssemblyVersion>
        <AssemblyVersion>2.10.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.0.0</AssemblyVersion>
        <AssemblyVersion>2.11.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.2.0</AssemblyVersion>
        <AssemblyVersion>2.11.3.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
        <AssemblyVersion>2.12.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.2.0</AssemblyVersion>
        <AssemblyVersion>2.12.3.0</AssemblyVersion>
        <AssemblyVersion>2.13.0.0</AssemblyVersion>
        <AssemblyVersion>2.13.1.0</AssemblyVersion>
        <AssemblyVersion>2.14.0.0</AssemblyVersion>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1">
          <AttributeName Language="C#">[DocumentFormat.OpenXml.EnumString("expression")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.EnumString("expression")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
            Expression.
            <para>When the item is serialized out as xml, its value is "expression".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues Expression" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Expression As ConditionalFormatValues" />
      <MemberSignature Language="F#" Value="static member Expression : DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Expression.
            <para>When the item is serialized out as xml, its value is "expression".</para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconSet">
      <MemberSignature Language="C#" Value="IconSet" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues IconSet = int32(4)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.IconSet" />
      <MemberSignature Language="VB.NET" Value="IconSet" />
      <MemberSignature Language="F#" Value="IconSet = 4" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.IconSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>0.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.1.0</AssemblyVersion>
        <AssemblyVersion>2.10.0.0</AssemblyVersion>
        <AssemblyVersion>2.10.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.0.0</AssemblyVersion>
        <AssemblyVersion>2.11.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.2.0</AssemblyVersion>
        <AssemblyVersion>2.11.3.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
        <AssemblyVersion>2.12.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.2.0</AssemblyVersion>
        <AssemblyVersion>2.12.3.0</AssemblyVersion>
        <AssemblyVersion>2.13.0.0</AssemblyVersion>
        <AssemblyVersion>2.13.1.0</AssemblyVersion>
        <AssemblyVersion>2.14.0.0</AssemblyVersion>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1">
          <AttributeName Language="C#">[DocumentFormat.OpenXml.EnumString("iconSet")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.EnumString("iconSet")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
            Icon Set.
            <para>When the item is serialized out as xml, its value is "iconSet".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="IconSet">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues IconSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues IconSet" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.IconSet" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IconSet As ConditionalFormatValues" />
      <MemberSignature Language="F#" Value="static member IconSet : DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.IconSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Icon Set.
            <para>When the item is serialized out as xml, its value is "iconSet".</para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotContainsBlanks">
      <MemberSignature Language="C#" Value="NotContainsBlanks" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues NotContainsBlanks = int32(13)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.NotContainsBlanks" />
      <MemberSignature Language="VB.NET" Value="NotContainsBlanks" />
      <MemberSignature Language="F#" Value="NotContainsBlanks = 13" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.NotContainsBlanks" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>0.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.1.0</AssemblyVersion>
        <AssemblyVersion>2.10.0.0</AssemblyVersion>
        <AssemblyVersion>2.10.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.0.0</AssemblyVersion>
        <AssemblyVersion>2.11.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.2.0</AssemblyVersion>
        <AssemblyVersion>2.11.3.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
        <AssemblyVersion>2.12.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.2.0</AssemblyVersion>
        <AssemblyVersion>2.12.3.0</AssemblyVersion>
        <AssemblyVersion>2.13.0.0</AssemblyVersion>
        <AssemblyVersion>2.13.1.0</AssemblyVersion>
        <AssemblyVersion>2.14.0.0</AssemblyVersion>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1">
          <AttributeName Language="C#">[DocumentFormat.OpenXml.EnumString("notContainsBlanks")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.EnumString("notContainsBlanks")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary>
            Contains No Blanks.
            <para>When the item is serialized out as xml, its value is "notContainsBlanks".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="NotContainsBlanks">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues NotContainsBlanks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues NotContainsBlanks" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.NotContainsBlanks" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NotContainsBlanks As ConditionalFormatValues" />
      <MemberSignature Language="F#" Value="static member NotContainsBlanks : DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.NotContainsBlanks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Contains No Blanks.
            <para>When the item is serialized out as xml, its value is "notContainsBlanks".</para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotContainsErrors">
      <MemberSignature Language="C#" Value="NotContainsErrors" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues NotContainsErrors = int32(15)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.NotContainsErrors" />
      <MemberSignature Language="VB.NET" Value="NotContainsErrors" />
      <MemberSignature Language="F#" Value="NotContainsErrors = 15" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.NotContainsErrors" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>0.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.1.0</AssemblyVersion>
        <AssemblyVersion>2.10.0.0</AssemblyVersion>
        <AssemblyVersion>2.10.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.0.0</AssemblyVersion>
        <AssemblyVersion>2.11.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.2.0</AssemblyVersion>
        <AssemblyVersion>2.11.3.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
        <AssemblyVersion>2.12.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.2.0</AssemblyVersion>
        <AssemblyVersion>2.12.3.0</AssemblyVersion>
        <AssemblyVersion>2.13.0.0</AssemblyVersion>
        <AssemblyVersion>2.13.1.0</AssemblyVersion>
        <AssemblyVersion>2.14.0.0</AssemblyVersion>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1">
          <AttributeName Language="C#">[DocumentFormat.OpenXml.EnumString("notContainsErrors")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.EnumString("notContainsErrors")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary>
            Contains No Errors.
            <para>When the item is serialized out as xml, its value is "notContainsErrors".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="NotContainsErrors">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues NotContainsErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues NotContainsErrors" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.NotContainsErrors" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NotContainsErrors As ConditionalFormatValues" />
      <MemberSignature Language="F#" Value="static member NotContainsErrors : DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.NotContainsErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Contains No Errors.
            <para>When the item is serialized out as xml, its value is "notContainsErrors".</para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotContainsText">
      <MemberSignature Language="C#" Value="NotContainsText" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues NotContainsText = int32(9)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.NotContainsText" />
      <MemberSignature Language="VB.NET" Value="NotContainsText" />
      <MemberSignature Language="F#" Value="NotContainsText = 9" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.NotContainsText" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>0.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.1.0</AssemblyVersion>
        <AssemblyVersion>2.10.0.0</AssemblyVersion>
        <AssemblyVersion>2.10.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.0.0</AssemblyVersion>
        <AssemblyVersion>2.11.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.2.0</AssemblyVersion>
        <AssemblyVersion>2.11.3.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
        <AssemblyVersion>2.12.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.2.0</AssemblyVersion>
        <AssemblyVersion>2.12.3.0</AssemblyVersion>
        <AssemblyVersion>2.13.0.0</AssemblyVersion>
        <AssemblyVersion>2.13.1.0</AssemblyVersion>
        <AssemblyVersion>2.14.0.0</AssemblyVersion>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1">
          <AttributeName Language="C#">[DocumentFormat.OpenXml.EnumString("notContainsText")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.EnumString("notContainsText")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>
            Does Not Contain Text.
            <para>When the item is serialized out as xml, its value is "notContainsText".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="NotContainsText">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues NotContainsText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues NotContainsText" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.NotContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NotContainsText As ConditionalFormatValues" />
      <MemberSignature Language="F#" Value="static member NotContainsText : DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.NotContainsText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Does Not Contain Text.
            <para>When the item is serialized out as xml, its value is "notContainsText".</para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues left, DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues left, valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues right) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.op_Equality(DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues,DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ConditionalFormatValues, right As ConditionalFormatValues) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Index="0" FrameworkAlternate="openxml-3.0.0;openxml-3.0.1" />
        <Parameter Name="right" Type="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Index="1" FrameworkAlternate="openxml-3.0.0;openxml-3.0.1" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues left, DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues left, valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues right) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.op_Inequality(DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues,DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ConditionalFormatValues, right As ConditionalFormatValues) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Index="0" FrameworkAlternate="openxml-3.0.0;openxml-3.0.1" />
        <Parameter Name="right" Type="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Index="1" FrameworkAlternate="openxml-3.0.0;openxml-3.0.1" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimePeriod">
      <MemberSignature Language="C#" Value="TimePeriod" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues TimePeriod = int32(16)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.TimePeriod" />
      <MemberSignature Language="VB.NET" Value="TimePeriod" />
      <MemberSignature Language="F#" Value="TimePeriod = 16" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.TimePeriod" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>0.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.1.0</AssemblyVersion>
        <AssemblyVersion>2.10.0.0</AssemblyVersion>
        <AssemblyVersion>2.10.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.0.0</AssemblyVersion>
        <AssemblyVersion>2.11.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.2.0</AssemblyVersion>
        <AssemblyVersion>2.11.3.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
        <AssemblyVersion>2.12.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.2.0</AssemblyVersion>
        <AssemblyVersion>2.12.3.0</AssemblyVersion>
        <AssemblyVersion>2.13.0.0</AssemblyVersion>
        <AssemblyVersion>2.13.1.0</AssemblyVersion>
        <AssemblyVersion>2.14.0.0</AssemblyVersion>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1">
          <AttributeName Language="C#">[DocumentFormat.OpenXml.EnumString("timePeriod")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.EnumString("timePeriod")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
            Time Period.
            <para>When the item is serialized out as xml, its value is "timePeriod".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="TimePeriod">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues TimePeriod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues TimePeriod" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.TimePeriod" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TimePeriod As ConditionalFormatValues" />
      <MemberSignature Language="F#" Value="static member TimePeriod : DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.TimePeriod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Time Period.
            <para>When the item is serialized out as xml, its value is "timePeriod".</para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top10">
      <MemberSignature Language="C#" Value="Top10" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues Top10 = int32(5)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.Top10" />
      <MemberSignature Language="VB.NET" Value="Top10" />
      <MemberSignature Language="F#" Value="Top10 = 5" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.Top10" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>0.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.1.0</AssemblyVersion>
        <AssemblyVersion>2.10.0.0</AssemblyVersion>
        <AssemblyVersion>2.10.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.0.0</AssemblyVersion>
        <AssemblyVersion>2.11.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.2.0</AssemblyVersion>
        <AssemblyVersion>2.11.3.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
        <AssemblyVersion>2.12.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.2.0</AssemblyVersion>
        <AssemblyVersion>2.12.3.0</AssemblyVersion>
        <AssemblyVersion>2.13.0.0</AssemblyVersion>
        <AssemblyVersion>2.13.1.0</AssemblyVersion>
        <AssemblyVersion>2.14.0.0</AssemblyVersion>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1">
          <AttributeName Language="C#">[DocumentFormat.OpenXml.EnumString("top10")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.EnumString("top10")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
            Top 10.
            <para>When the item is serialized out as xml, its value is "top10".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="Top10">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues Top10 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues Top10" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.Top10" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Top10 As ConditionalFormatValues" />
      <MemberSignature Language="F#" Value="static member Top10 : DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.Top10" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Top 10.
            <para>When the item is serialized out as xml, its value is "top10".</para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniqueValues">
      <MemberSignature Language="C#" Value="UniqueValues" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues UniqueValues = int32(6)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.UniqueValues" />
      <MemberSignature Language="VB.NET" Value="UniqueValues" />
      <MemberSignature Language="F#" Value="UniqueValues = 6" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.UniqueValues" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>0.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.1.0</AssemblyVersion>
        <AssemblyVersion>2.10.0.0</AssemblyVersion>
        <AssemblyVersion>2.10.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.0.0</AssemblyVersion>
        <AssemblyVersion>2.11.1.0</AssemblyVersion>
        <AssemblyVersion>2.11.2.0</AssemblyVersion>
        <AssemblyVersion>2.11.3.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
        <AssemblyVersion>2.12.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.2.0</AssemblyVersion>
        <AssemblyVersion>2.12.3.0</AssemblyVersion>
        <AssemblyVersion>2.13.0.0</AssemblyVersion>
        <AssemblyVersion>2.13.1.0</AssemblyVersion>
        <AssemblyVersion>2.14.0.0</AssemblyVersion>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="openxml-2.10.0;openxml-2.10.1;openxml-2.11.0;openxml-2.11.1;openxml-2.11.2;openxml-2.11.3;openxml-2.12.0;openxml-2.12.1;openxml-2.12.2;openxml-2.12.3;openxml-2.13.0;openxml-2.13.1;openxml-2.14.0;openxml-2.15.0;openxml-2.16.0;openxml-2.17.1;openxml-2.18.0;openxml-2.19.0;openxml-2.20.0;openxml-2.7.1;openxml-2.7.2;openxml-2.8.0;openxml-2.8.1;openxml-2.9.0;openxml-2.9.1">
          <AttributeName Language="C#">[DocumentFormat.OpenXml.EnumString("uniqueValues")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.EnumString("uniqueValues")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
            Unique Values.
            <para>When the item is serialized out as xml, its value is "uniqueValues".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="UniqueValues">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues UniqueValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues UniqueValues" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.UniqueValues" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UniqueValues As ConditionalFormatValues" />
      <MemberSignature Language="F#" Value="static member UniqueValues : DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.UniqueValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Unique Values.
            <para>When the item is serialized out as xml, its value is "uniqueValues".</para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
