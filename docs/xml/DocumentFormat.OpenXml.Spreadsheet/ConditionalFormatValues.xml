<Type Name="ConditionalFormatValues" FullName="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues">
  <TypeSignature Language="C#" Value="public enum ConditionalFormatValues" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConditionalFormatValues extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues" />
  <TypeSignature Language="VB.NET" Value="Public Enum ConditionalFormatValues" />
  <TypeSignature Language="F#" Value="type ConditionalFormatValues = " />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Conditional Format Type</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AboveAverage">
      <MemberSignature Language="C#" Value="AboveAverage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues AboveAverage = int32(17)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.AboveAverage" />
      <MemberSignature Language="VB.NET" Value="AboveAverage" />
      <MemberSignature Language="F#" Value="AboveAverage = 17" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.AboveAverage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("aboveAverage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary>Above or Below Average.             When the item is serialized out as xml, its value is "aboveAverage".</summary>
      </Docs>
    </Member>
    <Member MemberName="BeginsWith">
      <MemberSignature Language="C#" Value="BeginsWith" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues BeginsWith = int32(10)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.BeginsWith" />
      <MemberSignature Language="VB.NET" Value="BeginsWith" />
      <MemberSignature Language="F#" Value="BeginsWith = 10" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.BeginsWith" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("beginsWith")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>Begins With.             When the item is serialized out as xml, its value is "beginsWith".</summary>
      </Docs>
    </Member>
    <Member MemberName="CellIs">
      <MemberSignature Language="C#" Value="CellIs" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues CellIs = int32(1)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.CellIs" />
      <MemberSignature Language="VB.NET" Value="CellIs" />
      <MemberSignature Language="F#" Value="CellIs = 1" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.CellIs" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("cellIs")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Cell Is.             When the item is serialized out as xml, its value is "cellIs".</summary>
      </Docs>
    </Member>
    <Member MemberName="ColorScale">
      <MemberSignature Language="C#" Value="ColorScale" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues ColorScale = int32(2)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ColorScale" />
      <MemberSignature Language="VB.NET" Value="ColorScale" />
      <MemberSignature Language="F#" Value="ColorScale = 2" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ColorScale" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("colorScale")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Color Scale.             When the item is serialized out as xml, its value is "colorScale".</summary>
      </Docs>
    </Member>
    <Member MemberName="ContainsBlanks">
      <MemberSignature Language="C#" Value="ContainsBlanks" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues ContainsBlanks = int32(12)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ContainsBlanks" />
      <MemberSignature Language="VB.NET" Value="ContainsBlanks" />
      <MemberSignature Language="F#" Value="ContainsBlanks = 12" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ContainsBlanks" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("containsBlanks")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary>Contains Blanks.             When the item is serialized out as xml, its value is "containsBlanks".</summary>
      </Docs>
    </Member>
    <Member MemberName="ContainsErrors">
      <MemberSignature Language="C#" Value="ContainsErrors" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues ContainsErrors = int32(14)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ContainsErrors" />
      <MemberSignature Language="VB.NET" Value="ContainsErrors" />
      <MemberSignature Language="F#" Value="ContainsErrors = 14" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ContainsErrors" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("containsErrors")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary>Contains Errors.             When the item is serialized out as xml, its value is "containsErrors".</summary>
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="ContainsText" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues ContainsText = int32(8)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ContainsText" />
      <MemberSignature Language="VB.NET" Value="ContainsText" />
      <MemberSignature Language="F#" Value="ContainsText = 8" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.ContainsText" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("containsText")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Contains Text.             When the item is serialized out as xml, its value is "containsText".</summary>
      </Docs>
    </Member>
    <Member MemberName="DataBar">
      <MemberSignature Language="C#" Value="DataBar" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues DataBar = int32(3)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.DataBar" />
      <MemberSignature Language="VB.NET" Value="DataBar" />
      <MemberSignature Language="F#" Value="DataBar = 3" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.DataBar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("dataBar")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Data Bar.             When the item is serialized out as xml, its value is "dataBar".</summary>
      </Docs>
    </Member>
    <Member MemberName="DuplicateValues">
      <MemberSignature Language="C#" Value="DuplicateValues" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues DuplicateValues = int32(7)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.DuplicateValues" />
      <MemberSignature Language="VB.NET" Value="DuplicateValues" />
      <MemberSignature Language="F#" Value="DuplicateValues = 7" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.DuplicateValues" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("duplicateValues")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>Duplicate Values.             When the item is serialized out as xml, its value is "duplicateValues".</summary>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="EndsWith" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues EndsWith = int32(11)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.EndsWith" />
      <MemberSignature Language="VB.NET" Value="EndsWith" />
      <MemberSignature Language="F#" Value="EndsWith = 11" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.EndsWith" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("endsWith")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>Ends With.             When the item is serialized out as xml, its value is "endsWith".</summary>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="Expression" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues Expression = int32(0)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.Expression" />
      <MemberSignature Language="VB.NET" Value="Expression" />
      <MemberSignature Language="F#" Value="Expression = 0" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.Expression" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("expression")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Expression.             When the item is serialized out as xml, its value is "expression".</summary>
      </Docs>
    </Member>
    <Member MemberName="IconSet">
      <MemberSignature Language="C#" Value="IconSet" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues IconSet = int32(4)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.IconSet" />
      <MemberSignature Language="VB.NET" Value="IconSet" />
      <MemberSignature Language="F#" Value="IconSet = 4" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.IconSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("iconSet")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Icon Set.             When the item is serialized out as xml, its value is "iconSet".</summary>
      </Docs>
    </Member>
    <Member MemberName="NotContainsBlanks">
      <MemberSignature Language="C#" Value="NotContainsBlanks" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues NotContainsBlanks = int32(13)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.NotContainsBlanks" />
      <MemberSignature Language="VB.NET" Value="NotContainsBlanks" />
      <MemberSignature Language="F#" Value="NotContainsBlanks = 13" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.NotContainsBlanks" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("notContainsBlanks")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary>Contains No Blanks.             When the item is serialized out as xml, its value is "notContainsBlanks".</summary>
      </Docs>
    </Member>
    <Member MemberName="NotContainsErrors">
      <MemberSignature Language="C#" Value="NotContainsErrors" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues NotContainsErrors = int32(15)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.NotContainsErrors" />
      <MemberSignature Language="VB.NET" Value="NotContainsErrors" />
      <MemberSignature Language="F#" Value="NotContainsErrors = 15" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.NotContainsErrors" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("notContainsErrors")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary>Contains No Errors.             When the item is serialized out as xml, its value is "notContainsErrors".</summary>
      </Docs>
    </Member>
    <Member MemberName="NotContainsText">
      <MemberSignature Language="C#" Value="NotContainsText" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues NotContainsText = int32(9)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.NotContainsText" />
      <MemberSignature Language="VB.NET" Value="NotContainsText" />
      <MemberSignature Language="F#" Value="NotContainsText = 9" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.NotContainsText" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("notContainsText")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>Does Not Contain Text.             When the item is serialized out as xml, its value is "notContainsText".</summary>
      </Docs>
    </Member>
    <Member MemberName="TimePeriod">
      <MemberSignature Language="C#" Value="TimePeriod" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues TimePeriod = int32(16)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.TimePeriod" />
      <MemberSignature Language="VB.NET" Value="TimePeriod" />
      <MemberSignature Language="F#" Value="TimePeriod = 16" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.TimePeriod" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("timePeriod")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Time Period.             When the item is serialized out as xml, its value is "timePeriod".</summary>
      </Docs>
    </Member>
    <Member MemberName="Top10">
      <MemberSignature Language="C#" Value="Top10" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues Top10 = int32(5)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.Top10" />
      <MemberSignature Language="VB.NET" Value="Top10" />
      <MemberSignature Language="F#" Value="Top10 = 5" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.Top10" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("top10")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Top 10.             When the item is serialized out as xml, its value is "top10".</summary>
      </Docs>
    </Member>
    <Member MemberName="UniqueValues">
      <MemberSignature Language="C#" Value="UniqueValues" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues UniqueValues = int32(6)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.UniqueValues" />
      <MemberSignature Language="VB.NET" Value="UniqueValues" />
      <MemberSignature Language="F#" Value="UniqueValues = 6" Usage="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues.UniqueValues" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("uniqueValues")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatValues</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>Unique Values.             When the item is serialized out as xml, its value is "uniqueValues".</summary>
      </Docs>
    </Member>
  </Members>
</Type>