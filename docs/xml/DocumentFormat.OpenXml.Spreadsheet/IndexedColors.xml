<Type Name="IndexedColors" FullName="DocumentFormat.OpenXml.Spreadsheet.IndexedColors">
  <TypeSignature Language="C#" Value="public class IndexedColors : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IndexedColors extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Spreadsheet.IndexedColors" />
  <TypeSignature Language="VB.NET" Value="Public Class IndexedColors&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type IndexedColors = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.RgbColor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Color Indexes. When the object is serialized out as xml, its qualified name is x:indexedColors.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **indexedColors (Color Indexes)**  
  
 A legacy indexing scheme for colors that is still required for some records, and for backwards compatibility with legacy formats.  
  
 This element contains a sequence of  color values that correspond to color indexes (zero-based). When using the default indexed color palette, the values are not written out, but instead are implied. When the color palette has been modified from default, then the entire color palette is written out.  
  
 Here is the table of default mappings from indexed color value to ARGB value. Note that 0-7 are redundant of 8-15 to preserve backwards compatibility.  
  
 **Color Index**  
  
 **ARGB Value**  
  
 **[** *Example* **:**  
  
 indexed="0"  
  
 00000000  
  
 indexed="1"  
  
 00FFFFFF  
  
 indexed="2"  
  
 00FF0000  
  
 indexed="3"  
  
 0000FF00  
  
 indexed="4"  
  
 000000FF  
  
 indexed="5"  
  
 00FFFF00  
  
 indexed="6"  
  
 00FF00FF  
  
 indexed="7"  
  
 0000FFFF  
  
 (none)  
  
 (none)  
  
 indexed="8"  
  
 00000000  
  
 indexed="9"  
  
 00FFFFFF  
  
 indexed="10"  
  
 00FF0000  
  
 indexed="11"  
  
 0000FF00  
  
 indexed="12"  
  
 000000FF  
  
 indexed="13"  
  
 00FFFF00  
  
 indexed="14"  
  
 00FF00FF  
  
 indexed="15"  
  
 0000FFFF  
  
 indexed="16"  
  
 00800000  
  
 indexed="17"  
  
 00008000  
  
 indexed="18"  
  
 00000080  
  
 indexed="19"  
  
 00808000  
  
 indexed="20"  
  
 00800080  
  
 indexed="21"  
  
 00008080  
  
 indexed="22"  
  
 00C0C0C0  
  
 indexed="23"  
  
 00808080  
  
 indexed="24"  
  
 009999FF  
  
 indexed="25"  
  
 00993366  
  
 indexed="26"  
  
 00FFFFCC  
  
 indexed="27"  
  
 00CCFFFF  
  
 indexed="28"  
  
 00660066  
  
 indexed="29"  
  
 00FF8080  
  
 indexed="30"  
  
 000066CC  
  
 indexed="31"  
  
 00CCCCFF  
  
 indexed="32"  
  
 00000080  
  
 indexed="33"  
  
 00FF00FF  
  
 indexed="34"  
  
 00FFFF00  
  
 indexed="35"  
  
 0000FFFF  
  
 indexed="36"  
  
 00800080  
  
 indexed="37"  
  
 00800000  
  
 indexed="38"  
  
 00008080  
  
 indexed="39"  
  
 000000FF  
  
 indexed="40"  
  
 0000CCFF  
  
 indexed="41"  
  
 00CCFFFF  
  
 indexed="42"  
  
 00CCFFCC  
  
 indexed="43"  
  
 00FFFF99  
  
 indexed="44"  
  
 0099CCFF  
  
 indexed="45"  
  
 00FF99CC  
  
 indexed="46"  
  
 00CC99FF  
  
 indexed="47"  
  
 00FFCC99  
  
 indexed="48"  
  
 003366FF  
  
 indexed="49"  
  
 0033CCCC  
  
 indexed="50"  
  
 0099CC00  
  
 indexed="51"  
  
 00FFCC00  
  
 indexed="52"  
  
 00FF9900  
  
 indexed="53"  
  
 00FF6600  
  
 indexed="54"  
  
 00666699  
  
 indexed="55"  
  
 00969696  
  
 indexed="56"  
  
 00003366  
  
 indexed="57"  
  
 00339966  
  
 indexed="58"  
  
 00003300  
  
 indexed="59"  
  
 00333300  
  
 indexed="60"  
  
 00993300  
  
 indexed="61"  
  
 00993366  
  
 indexed="62"  
  
 00333399  
  
 indexed="63"  
  
 00333333  
  
 indexed="64"  
  
 System Foreground  
  
 n/a  
  
 indexed="65"  
  
 System Background  
  
 n/a  
  
|Parent Elements|  
|---------------------|  
|colors (§18.8.11)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|rgbColor (RGB Color)|§18.8.34|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_IndexedColors) is located in §A.2. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexedColors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.IndexedColors.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the IndexedColors class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexedColors (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.IndexedColors.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Spreadsheet.IndexedColors : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Spreadsheet.IndexedColors" Usage="new DocumentFormat.OpenXml.Spreadsheet.IndexedColors childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the IndexedColors class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexedColors (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.IndexedColors.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Spreadsheet.IndexedColors : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Spreadsheet.IndexedColors" Usage="new DocumentFormat.OpenXml.Spreadsheet.IndexedColors childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the IndexedColors class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexedColors (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.IndexedColors.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Spreadsheet.IndexedColors : string -&gt; DocumentFormat.OpenXml.Spreadsheet.IndexedColors" Usage="new DocumentFormat.OpenXml.Spreadsheet.IndexedColors outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the IndexedColors class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.IndexedColors.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="indexedColors.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.IndexedColors.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Spreadsheet.IndexedColors.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>