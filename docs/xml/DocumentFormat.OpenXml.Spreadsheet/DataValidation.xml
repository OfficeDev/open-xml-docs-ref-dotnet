<Type Name="DataValidation" FullName="DocumentFormat.OpenXml.Spreadsheet.DataValidation">
  <TypeSignature Language="C#" Value="public class DataValidation : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataValidation extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Spreadsheet.DataValidation" />
  <TypeSignature Language="VB.NET" Value="Public Class DataValidation&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type DataValidation = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office2010.ExcelAc.List), DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.Formula1))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.Formula2))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Data Validation. When the object is serialized out as xml, its qualified name is x:dataValidation.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **dataValidation (Data Validation)**  
  
 A single item of data validation defined on a range of the worksheet.  
  
|Parent Elements|  
|---------------------|  
|dataValidations (§18.3.1.33)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|formula1 (Formula 1)|§18.3.1.44|  
|formula2 (Formula 2)|§18.3.1.45|  
  
|Attributes|Description|  
|----------------|-----------------|  
|allowBlank (Allow Blank)|A boolean value indicating whether the data validation allows the use of empty or blank entries. '1' means empty entries are OK and do not violate the validation constraints.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|error (Error Message)|Message text of error alert.<br /><br /> The possible values for this attribute are defined by the *ST_Xstring* simple type (§22.9.2.19).|  
|errorStyle (Data Validation Error Style)|The style of error alert used for this data validation.<br /><br /> The possible values for this attribute are defined by the *ST_DataValidationErrorStyle* simple type (§18.18.18).|  
|errorTitle (Error Alert Text)|Title bar text of error alert.<br /><br /> The possible values for this attribute are defined by the *ST_Xstring* simple type (§22.9.2.19).|  
|imeMode (IME Mode Enforced)|The IME (input method editor) mode enforced by this data validation. Only applies for these languages:<br /><br /> -   Chinese Simplified<br />-   Chinese Traditional<br />-   Japanese<br />-   Korean<br />-   When imeMode is set, the input for the cell can be restricted to specific sets of characters, as specified by the value of imeMode. See the simple type referenced below for additional details.<br /><br /> When imeMode is set but the application's language is not one of the languages listed above, then the default value is *noControl*.<br /><br /> The possible values for this attribute are defined by the *ST_DataValidationImeMode* simple type (§18.18.19).|  
|operator (Operator)|The relational operator used with this data validation.<br /><br /> The possible values for this attribute are defined by the *ST_DataValidationOperator* simple type (§18.18.20).|  
|prompt (Input Prompt)|Message text of input prompt.<br /><br /> The possible values for this attribute are defined by the *ST_Xstring* simple type (§22.9.2.19).|  
|promptTitle (Prompt Title)|Title bar text of input prompt.<br /><br /> The possible values for this attribute are defined by the *ST_Xstring* simple type (§22.9.2.19).|  
|showDropDown (Show Drop Down)|A boolean value indicating whether to display a dropdown combo box for a list type data validation.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|showErrorMessage (Show Error Message)|A boolean value indicating whether to display the error alert message when an invalid value has been entered, according to the criteria specified.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|showInputMessage (Show Input Message)|A boolean value indicating whether to display the input prompt message.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|sqref (Sequence of References)|Range over which data validation is applied.<br /><br /> The possible values for this attribute are defined by the *ST_Sqref* simple type (§18.18.76).|  
|type (Data Validation Type)|The type of data validation.<br /><br /> The possible values for this attribute are defined by the *ST_DataValidationType* simple type (§18.18.21).|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_DataValidation) is located in §A.2. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataValidation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.DataValidation.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the DataValidation class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataValidation (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.DataValidation.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Spreadsheet.DataValidation : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Spreadsheet.DataValidation" Usage="new DocumentFormat.OpenXml.Spreadsheet.DataValidation childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the DataValidation class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataValidation (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.DataValidation.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Spreadsheet.DataValidation : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Spreadsheet.DataValidation" Usage="new DocumentFormat.OpenXml.Spreadsheet.DataValidation childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the DataValidation class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataValidation (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.DataValidation.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Spreadsheet.DataValidation : string -&gt; DocumentFormat.OpenXml.Spreadsheet.DataValidation" Usage="new DocumentFormat.OpenXml.Spreadsheet.DataValidation outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the DataValidation class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowBlank">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue AllowBlank { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue AllowBlank" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.DataValidation.AllowBlank" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowBlank As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.AllowBlank : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.DataValidation.AllowBlank" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "allowBlank")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>allowBlank.Represents the following attribute in the schema: allowBlank</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.DataValidation.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="dataValidation.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue Error { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue Error" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.DataValidation.Error" />
      <MemberSignature Language="VB.NET" Value="Public Property Error As StringValue" />
      <MemberSignature Language="F#" Value="member this.Error : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.DataValidation.Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "error")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>error.Represents the following attribute in the schema: error</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorStyle">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.DataValidationErrorStyleValues&gt; ErrorStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Spreadsheet.DataValidationErrorStyleValues&gt; ErrorStyle" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.DataValidation.ErrorStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorStyle As EnumValue(Of DataValidationErrorStyleValues)" />
      <MemberSignature Language="F#" Value="member this.ErrorStyle : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.DataValidationErrorStyleValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.DataValidation.ErrorStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "errorStyle")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.DataValidationErrorStyleValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>errorStyle.Represents the following attribute in the schema: errorStyle</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorTitle">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue ErrorTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue ErrorTitle" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.DataValidation.ErrorTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorTitle As StringValue" />
      <MemberSignature Language="F#" Value="member this.ErrorTitle : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.DataValidation.ErrorTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "errorTitle")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>errorTitle.Represents the following attribute in the schema: errorTitle</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula1">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.Formula1 Formula1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.Formula1 Formula1" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.DataValidation.Formula1" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula1 As Formula1" />
      <MemberSignature Language="F#" Value="member this.Formula1 : DocumentFormat.OpenXml.Spreadsheet.Formula1 with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.DataValidation.Formula1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.Formula1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Formula1. Represents the following element tag in the schema: x:formula1</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Spreadsheet.Formula1" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="Formula2">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.Formula2 Formula2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.Formula2 Formula2" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.DataValidation.Formula2" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula2 As Formula2" />
      <MemberSignature Language="F#" Value="member this.Formula2 : DocumentFormat.OpenXml.Spreadsheet.Formula2 with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.DataValidation.Formula2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.Formula2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Formula2. Represents the following element tag in the schema: x:formula2</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Spreadsheet.Formula2" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="ImeMode">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.DataValidationImeModeValues&gt; ImeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Spreadsheet.DataValidationImeModeValues&gt; ImeMode" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.DataValidation.ImeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ImeMode As EnumValue(Of DataValidationImeModeValues)" />
      <MemberSignature Language="F#" Value="member this.ImeMode : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.DataValidationImeModeValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.DataValidation.ImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "imeMode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.DataValidationImeModeValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>imeMode.Represents the following attribute in the schema: imeMode</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Office2010.ExcelAc.List List { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Office2010.ExcelAc.List List" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.DataValidation.List" />
      <MemberSignature Language="VB.NET" Value="Public Property List As List" />
      <MemberSignature Language="F#" Value="member this.List : DocumentFormat.OpenXml.Office2010.ExcelAc.List with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.DataValidation.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.OfficeAvailability(DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Office2010.ExcelAc.List</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>List, this property is only available in Office2013. Represents the following element tag in the schema: x12ac:list</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x12ac = http://schemas.microsoft.com/office/spreadsheetml/2011/1/ac
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.DataValidation.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Spreadsheet.DataValidation.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.DataValidationOperatorValues&gt; Operator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Spreadsheet.DataValidationOperatorValues&gt; Operator" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.DataValidation.Operator" />
      <MemberSignature Language="VB.NET" Value="Public Property Operator As EnumValue(Of DataValidationOperatorValues)" />
      <MemberSignature Language="F#" Value="member this.Operator : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.DataValidationOperatorValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.DataValidation.Operator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "operator")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.DataValidationOperatorValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>operator.Represents the following attribute in the schema: operator</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The IME (input method editor) mode enforced by this data validation. Only applies for these languages:  
  
-   Chinese Simplified  
  
-   Chinese Traditional  
  
-   Japanese  
  
-   Korean  
  
 When `imeMode` is set, the input for the cell can be restricted to specific sets of characters, as specified by the value of `imeMode`. See the simple type referenced below for additional details.  
  
 When `imeMode` is set but the application's language is not one of the languages listed above, then the default value is `noControl`.  
  
 The possible values for this attribute are defined by the `ST_DataValidationImeMode` simple type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prompt">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue Prompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue Prompt" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.DataValidation.Prompt" />
      <MemberSignature Language="VB.NET" Value="Public Property Prompt As StringValue" />
      <MemberSignature Language="F#" Value="member this.Prompt : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.DataValidation.Prompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "prompt")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>prompt.Represents the following attribute in the schema: prompt</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PromptTitle">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue PromptTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue PromptTitle" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.DataValidation.PromptTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property PromptTitle As StringValue" />
      <MemberSignature Language="F#" Value="member this.PromptTitle : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.DataValidation.PromptTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "promptTitle")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>promptTitle.Represents the following attribute in the schema: promptTitle</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceOfReferences">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.ListValue&lt;DocumentFormat.OpenXml.StringValue&gt; SequenceOfReferences { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.ListValue`1&lt;class DocumentFormat.OpenXml.StringValue&gt; SequenceOfReferences" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.DataValidation.SequenceOfReferences" />
      <MemberSignature Language="VB.NET" Value="Public Property SequenceOfReferences As ListValue(Of StringValue)" />
      <MemberSignature Language="F#" Value="member this.SequenceOfReferences : DocumentFormat.OpenXml.ListValue&lt;DocumentFormat.OpenXml.StringValue&gt; with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.DataValidation.SequenceOfReferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "sqref")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.ListValue&lt;DocumentFormat.OpenXml.StringValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>sqref.Represents the following attribute in the schema: sqref</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.ListValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDropDown">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue ShowDropDown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue ShowDropDown" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.DataValidation.ShowDropDown" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDropDown As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.ShowDropDown : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.DataValidation.ShowDropDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "showDropDown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>showDropDown.Represents the following attribute in the schema: showDropDown</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowErrorMessage">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue ShowErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue ShowErrorMessage" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.DataValidation.ShowErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowErrorMessage As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.ShowErrorMessage : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.DataValidation.ShowErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "showErrorMessage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>showErrorMessage.Represents the following attribute in the schema: showErrorMessage</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInputMessage">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue ShowInputMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue ShowInputMessage" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.DataValidation.ShowInputMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowInputMessage As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.ShowInputMessage : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.DataValidation.ShowInputMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "showInputMessage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>showInputMessage.Represents the following attribute in the schema: showInputMessage</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.DataValidationValues&gt; Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Spreadsheet.DataValidationValues&gt; Type" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.DataValidation.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As EnumValue(Of DataValidationValues)" />
      <MemberSignature Language="F#" Value="member this.Type : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.DataValidationValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.DataValidation.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "type")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Spreadsheet.DataValidationValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>type.Represents the following attribute in the schema: type</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>