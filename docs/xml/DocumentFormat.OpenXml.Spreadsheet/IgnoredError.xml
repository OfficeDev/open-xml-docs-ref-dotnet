<Type Name="IgnoredError" FullName="DocumentFormat.OpenXml.Spreadsheet.IgnoredError">
  <TypeSignature Language="C#" Value="public class IgnoredError : DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IgnoredError extends DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Spreadsheet.IgnoredError" />
  <TypeSignature Language="VB.NET" Value="Public Class IgnoredError&#xA;Inherits OpenXmlLeafElement" />
  <TypeSignature Language="F#" Value="type IgnoredError = class&#xA;    inherit OpenXmlLeafElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlLeafElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ignored Error. When the object is serialized out as xml, its qualified name is x:ignoredError.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **ignoredError (Ignored Error)**  
  
 A single ignored error for a range of cells.  
  
 A cell is considered to have an error condition when it meets one of the conditions specified in the attribute descriptions below. [*Example*: If a cell is formatted as text but contains a numeric value, this is considered to be a potential error because the number won't be treated as a number, for example, in calculations. *end example*]  
  
 This is simply a guess by the implementing application, and a recommendation to the user. Cells with the errors specified below  might be deliberately defined as such. [*Example*: A cell formatted as text which contains numeric Postal Codes or Order numbers. It is useful to format these cells as text so that leading zeros remain as part of the value instead of being removed. *end example*]  
  
 An *\<ignoreError>* element is not written in the file unless the user has specifically reviewed the error and decided to keep the cell state as it is, and no longer wishes to be alerted about it for this cell. This can be helpful for the application to decide which errors should be surfaced to the user vs kept quiet because the user doesn't want these to be surfaced (e.g., because they are legitimate cell states).  
  
 [*Example*:This example shows that cells A1 and B2 both contain numbers stored as text, and this error has been reviewed and specifically flagged to be no longer surfaced as an error to the user.  
  
```xml  
<ignoredErrors>  
  <ignoredError sqref="A1 B2" numberStoredAsText="1"/>  
</ignoredErrors>  
```  
  
 *end example*]  
  
 More than one kind of error can exist on a cell. These flags are not mutually exclusive.  
  
|Parent Elements|  
|---------------------|  
|ignoredErrors (§18.3.1.51)|  
  
|Attributes|Description|  
|----------------|-----------------|  
|calculatedColumn (Calculated Column)|Ignore errors when cells contain a value different from a calculated column formula. In other words, for a calculated column, a cell in that column is considered to have an error if its formula is different from the calculated column formula, or doesn't contain a formula at all.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|emptyCellReference (Empty Cell Reference)|Ignore errors when formulas refer to empty cells.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|evalError (Evaluation Error)|Ignore errors when cells contain formulas that result in an error.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|formula (Formula)|Ignore errors when a formula in a region of your worksheet differs from other formulas in the same region.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|formulaRange (Formula Range)|Ignore errors when formulas omit certain cells in a region.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|listDataValidation (List Data Validation)|Ignore errors when a cell's value in a Table does not comply with the Data Validation rules specified.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|numberStoredAsText (Number Stored As Text)|Ignore errors when numbers are formatted as text or are preceded by an apostrophe.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|sqref (Sequence of References)|Reference to a range of cells that have this ignored error.<br /><br /> The possible values for this attribute are defined by the *ST_Sqref* simple type (§18.18.76).|  
|twoDigitTextYear (Two Digit Text Year)|Ignore errors when formulas contain text formatted cells with years represented as 2 digits.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|unlockedFormula (Unlocked Formula)|Ignore errors when unlocked cells contain formulas.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_IgnoredError) is located in §A.2. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IgnoredError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.IgnoredError.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the IgnoredError class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculatedColumn">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue CalculatedColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue CalculatedColumn" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.IgnoredError.CalculatedColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculatedColumn As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.CalculatedColumn : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.IgnoredError.CalculatedColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "calculatedColumn")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Calculated Column.Represents the following attribute in the schema: calculatedColumn</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.IgnoredError.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="ignoredError.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyCellReference">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue EmptyCellReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue EmptyCellReference" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.IgnoredError.EmptyCellReference" />
      <MemberSignature Language="VB.NET" Value="Public Property EmptyCellReference As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.EmptyCellReference : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.IgnoredError.EmptyCellReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "emptyCellReference")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Empty Cell Reference.Represents the following attribute in the schema: emptyCellReference</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvalError">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue EvalError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue EvalError" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.IgnoredError.EvalError" />
      <MemberSignature Language="VB.NET" Value="Public Property EvalError As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.EvalError : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.IgnoredError.EvalError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "evalError")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Evaluation Error.Represents the following attribute in the schema: evalError</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue Formula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue Formula" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.IgnoredError.Formula" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.Formula : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.IgnoredError.Formula" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "formula")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Formula.Represents the following attribute in the schema: formula</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaRange">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue FormulaRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue FormulaRange" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.IgnoredError.FormulaRange" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaRange As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.FormulaRange : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.IgnoredError.FormulaRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "formulaRange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Formula Range.Represents the following attribute in the schema: formulaRange</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListDataValidation">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue ListDataValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue ListDataValidation" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.IgnoredError.ListDataValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property ListDataValidation As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.ListDataValidation : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.IgnoredError.ListDataValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "listDataValidation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>List Data Validation.Represents the following attribute in the schema: listDataValidation</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.IgnoredError.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Spreadsheet.IgnoredError.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberStoredAsText">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue NumberStoredAsText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue NumberStoredAsText" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.IgnoredError.NumberStoredAsText" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberStoredAsText As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.NumberStoredAsText : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.IgnoredError.NumberStoredAsText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "numberStoredAsText")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Number Stored As Text.Represents the following attribute in the schema: numberStoredAsText</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceOfReferences">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.ListValue&lt;DocumentFormat.OpenXml.StringValue&gt; SequenceOfReferences { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.ListValue`1&lt;class DocumentFormat.OpenXml.StringValue&gt; SequenceOfReferences" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.IgnoredError.SequenceOfReferences" />
      <MemberSignature Language="VB.NET" Value="Public Property SequenceOfReferences As ListValue(Of StringValue)" />
      <MemberSignature Language="F#" Value="member this.SequenceOfReferences : DocumentFormat.OpenXml.ListValue&lt;DocumentFormat.OpenXml.StringValue&gt; with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.IgnoredError.SequenceOfReferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "sqref")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.ListValue&lt;DocumentFormat.OpenXml.StringValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sequence of References.Represents the following attribute in the schema: sqref</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.ListValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TwoDigitTextYear">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue TwoDigitTextYear { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue TwoDigitTextYear" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.IgnoredError.TwoDigitTextYear" />
      <MemberSignature Language="VB.NET" Value="Public Property TwoDigitTextYear As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.TwoDigitTextYear : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.IgnoredError.TwoDigitTextYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "twoDigitTextYear")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Two Digit Text Year.Represents the following attribute in the schema: twoDigitTextYear</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockedFormula">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue UnlockedFormula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue UnlockedFormula" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.IgnoredError.UnlockedFormula" />
      <MemberSignature Language="VB.NET" Value="Public Property UnlockedFormula As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.UnlockedFormula : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.IgnoredError.UnlockedFormula" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "unlockedFormula")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Unlocked Formula.Represents the following attribute in the schema: unlockedFormula</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>