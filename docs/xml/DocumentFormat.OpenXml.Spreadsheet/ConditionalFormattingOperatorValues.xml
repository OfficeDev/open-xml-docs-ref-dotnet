<Type Name="ConditionalFormattingOperatorValues" FullName="DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues">
  <TypeSignature Language="C#" Value="public enum ConditionalFormattingOperatorValues" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConditionalFormattingOperatorValues extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues" />
  <TypeSignature Language="VB.NET" Value="Public Enum ConditionalFormattingOperatorValues" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Conditional Format Operators 
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginsWith">
      <MemberSignature Language="C#" Value="BeginsWith" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues BeginsWith = int32(10)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues.BeginsWith" />
      <MemberSignature Language="VB.NET" Value="BeginsWith" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("beginsWith")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>
            Begins With.
            <para>When the item is serialized out as xml, its value is "beginsWith".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="Between">
      <MemberSignature Language="C#" Value="Between" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues Between = int32(6)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues.Between" />
      <MemberSignature Language="VB.NET" Value="Between" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("between")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
            Between.
            <para>When the item is serialized out as xml, its value is "between".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="ContainsText" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues ContainsText = int32(8)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues.ContainsText" />
      <MemberSignature Language="VB.NET" Value="ContainsText" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("containsText")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
            Contains.
            <para>When the item is serialized out as xml, its value is "containsText".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="EndsWith" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues EndsWith = int32(11)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues.EndsWith" />
      <MemberSignature Language="VB.NET" Value="EndsWith" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("endsWith")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>
            Ends With.
            <para>When the item is serialized out as xml, its value is "endsWith".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="Equal" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues Equal = int32(2)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues.Equal" />
      <MemberSignature Language="VB.NET" Value="Equal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("equal")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
            Equal.
            <para>When the item is serialized out as xml, its value is "equal".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="GreaterThan" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues GreaterThan = int32(5)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues.GreaterThan" />
      <MemberSignature Language="VB.NET" Value="GreaterThan" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("greaterThan")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
            Greater Than.
            <para>When the item is serialized out as xml, its value is "greaterThan".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="GreaterThanOrEqual" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues GreaterThanOrEqual = int32(4)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues.GreaterThanOrEqual" />
      <MemberSignature Language="VB.NET" Value="GreaterThanOrEqual" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("greaterThanOrEqual")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
            Greater Than Or Equal.
            <para>When the item is serialized out as xml, its value is "greaterThanOrEqual".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="LessThan" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues LessThan = int32(0)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues.LessThan" />
      <MemberSignature Language="VB.NET" Value="LessThan" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("lessThan")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
            Less Than.
            <para>When the item is serialized out as xml, its value is "lessThan".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="LessThanOrEqual" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues LessThanOrEqual = int32(1)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues.LessThanOrEqual" />
      <MemberSignature Language="VB.NET" Value="LessThanOrEqual" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("lessThanOrEqual")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
            Less Than Or Equal.
            <para>When the item is serialized out as xml, its value is "lessThanOrEqual".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="NotBetween">
      <MemberSignature Language="C#" Value="NotBetween" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues NotBetween = int32(7)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues.NotBetween" />
      <MemberSignature Language="VB.NET" Value="NotBetween" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("notBetween")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
            Not Between.
            <para>When the item is serialized out as xml, its value is "notBetween".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="NotContains">
      <MemberSignature Language="C#" Value="NotContains" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues NotContains = int32(9)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues.NotContains" />
      <MemberSignature Language="VB.NET" Value="NotContains" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("notContains")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>
            Does Not Contain.
            <para>When the item is serialized out as xml, its value is "notContains".</para></summary>
      </Docs>
    </Member>
    <Member MemberName="NotEqual">
      <MemberSignature Language="C#" Value="NotEqual" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues NotEqual = int32(3)" />
      <MemberSignature Language="DocId" Value="F:DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues.NotEqual" />
      <MemberSignature Language="VB.NET" Value="NotEqual" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.EnumString("notEqual")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingOperatorValues</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
            Not Equal.
            <para>When the item is serialized out as xml, its value is "notEqual".</para></summary>
      </Docs>
    </Member>
  </Members>
</Type>