<Type Name="FilterColumn" FullName="DocumentFormat.OpenXml.Spreadsheet.FilterColumn">
  <TypeSignature Language="C#" Value="public class FilterColumn : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FilterColumn extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Spreadsheet.FilterColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class FilterColumn&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type FilterColumn = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.Filters))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.Top10))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office2010.Excel.CustomFilters), DocumentFormat.OpenXml.FileFormatVersions.Office2010 | DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.CustomFilters))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.DynamicFilter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.ColorFilter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office2010.Excel.IconFilter), DocumentFormat.OpenXml.FileFormatVersions.Office2010 | DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.IconFilter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Spreadsheet.ExtensionList))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>AutoFilter Column. When the object is serialized out as xml, its qualified name is x:filterColumn.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **filterColumn (AutoFilter Column)**  
  
 The filterColumn collection identifies a particular column in the AutoFilter range and specifies filter information that has been applied to this column. If a column in the AutoFilter range has no criteria specified, then there is no corresponding filterColumn collection expressed for that column.  
  
|Parent Elements|  
|---------------------|  
|autoFilter (§18.3.1.2)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|colorFilter (Color Filter Criteria)|§18.3.2.1|  
|customFilters (Custom Filters)|§18.3.2.3|  
|dynamicFilter (Dynamic Filter)|§18.3.2.5|  
|extLst (Future Feature Data Storage Area)|§18.2.10|  
|filters (Filter Criteria)|§18.3.2.8|  
|iconFilter (Icon Filter)|§18.3.2.9|  
|top10 (Top 10)|§18.3.2.10|  
  
|Attributes|Description|  
|----------------|-----------------|  
|colId (Filter Column Data)|Zero-based index indicating the AutoFilter column to which this filter information applies.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *unsignedInt* datatype.|  
|hiddenButton (Hidden AutoFilter Button)|Flag indicating whether the AutoFilter button for this column is hidden.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
|showButton (Show Filter Button)|Flag indicating whether the filter button is visible. [*Example*: When the cell containing the filter button is merged with another cell, the filter button can be hidden, and not drawn. *end example*]<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_FilterColumn) is located in §A.2. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FilterColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.FilterColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the FilterColumn class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FilterColumn (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.FilterColumn.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Spreadsheet.FilterColumn : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Spreadsheet.FilterColumn" Usage="new DocumentFormat.OpenXml.Spreadsheet.FilterColumn childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the FilterColumn class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FilterColumn (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.FilterColumn.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Spreadsheet.FilterColumn : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Spreadsheet.FilterColumn" Usage="new DocumentFormat.OpenXml.Spreadsheet.FilterColumn childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the FilterColumn class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FilterColumn (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.FilterColumn.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Spreadsheet.FilterColumn : string -&gt; DocumentFormat.OpenXml.Spreadsheet.FilterColumn" Usage="new DocumentFormat.OpenXml.Spreadsheet.FilterColumn outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the FilterColumn class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Spreadsheet.FilterColumn.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="filterColumn.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorFilter">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.ColorFilter ColorFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.ColorFilter ColorFilter" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.FilterColumn.ColorFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property ColorFilter As ColorFilter" />
      <MemberSignature Language="F#" Value="member this.ColorFilter : DocumentFormat.OpenXml.Spreadsheet.ColorFilter with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.FilterColumn.ColorFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ColorFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Color Filter Criteria. Represents the following element tag in the schema: x:colorFilter</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Spreadsheet.ColorFilter" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="ColumnId">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.UInt32Value ColumnId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.UInt32Value ColumnId" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.FilterColumn.ColumnId" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnId As UInt32Value" />
      <MemberSignature Language="F#" Value="member this.ColumnId : DocumentFormat.OpenXml.UInt32Value with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.FilterColumn.ColumnId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "colId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.UInt32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Filter Column Data.Represents the following attribute in the schema: colId</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.UInt32Value" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomFilters">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.CustomFilters CustomFilters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.CustomFilters CustomFilters" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.FilterColumn.CustomFilters" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomFilters As CustomFilters" />
      <MemberSignature Language="F#" Value="member this.CustomFilters : DocumentFormat.OpenXml.Spreadsheet.CustomFilters with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.FilterColumn.CustomFilters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.CustomFilters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Custom Filters. Represents the following element tag in the schema: x:customFilters</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Spreadsheet.CustomFilters" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="CustomFilters14">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Office2010.Excel.CustomFilters CustomFilters14 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Office2010.Excel.CustomFilters CustomFilters14" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.FilterColumn.CustomFilters14" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomFilters14 As CustomFilters" />
      <MemberSignature Language="F#" Value="member this.CustomFilters14 : DocumentFormat.OpenXml.Office2010.Excel.CustomFilters with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.FilterColumn.CustomFilters14" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Office2010.Excel.CustomFilters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>CustomFilters14. Represents the following element tag in the schema: x14:customFilters</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="DynamicFilter">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.DynamicFilter DynamicFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.DynamicFilter DynamicFilter" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.FilterColumn.DynamicFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicFilter As DynamicFilter" />
      <MemberSignature Language="F#" Value="member this.DynamicFilter : DocumentFormat.OpenXml.Spreadsheet.DynamicFilter with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.FilterColumn.DynamicFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.DynamicFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Dynamic Filter. Represents the following element tag in the schema: x:dynamicFilter</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Spreadsheet.DynamicFilter" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="ExtensionList">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.ExtensionList ExtensionList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.ExtensionList ExtensionList" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.FilterColumn.ExtensionList" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtensionList As ExtensionList" />
      <MemberSignature Language="F#" Value="member this.ExtensionList : DocumentFormat.OpenXml.Spreadsheet.ExtensionList with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.FilterColumn.ExtensionList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.ExtensionList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ExtensionList. Represents the following element tag in the schema: x:extLst</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Spreadsheet.ExtensionList" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="Filters">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.Filters Filters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.Filters Filters" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.FilterColumn.Filters" />
      <MemberSignature Language="VB.NET" Value="Public Property Filters As Filters" />
      <MemberSignature Language="F#" Value="member this.Filters : DocumentFormat.OpenXml.Spreadsheet.Filters with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.FilterColumn.Filters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.Filters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Filter Criteria. Represents the following element tag in the schema: x:filters</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Spreadsheet.Filters" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="HiddenButton">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue HiddenButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue HiddenButton" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.FilterColumn.HiddenButton" />
      <MemberSignature Language="VB.NET" Value="Public Property HiddenButton As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.HiddenButton : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.FilterColumn.HiddenButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "hiddenButton")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Hidden AutoFilter Button.Represents the following attribute in the schema: hiddenButton</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconFilter">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.IconFilter IconFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.IconFilter IconFilter" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.FilterColumn.IconFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property IconFilter As IconFilter" />
      <MemberSignature Language="F#" Value="member this.IconFilter : DocumentFormat.OpenXml.Spreadsheet.IconFilter with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.FilterColumn.IconFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.IconFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Icon Filter. Represents the following element tag in the schema: x:iconFilter</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Spreadsheet.IconFilter" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="IconFilter14">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Office2010.Excel.IconFilter IconFilter14 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Office2010.Excel.IconFilter IconFilter14" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.FilterColumn.IconFilter14" />
      <MemberSignature Language="VB.NET" Value="Public Property IconFilter14 As IconFilter" />
      <MemberSignature Language="F#" Value="member this.IconFilter14 : DocumentFormat.OpenXml.Office2010.Excel.IconFilter with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.FilterColumn.IconFilter14" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Office2010.Excel.IconFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>IconFilter14. Represents the following element tag in the schema: x14:iconFilter</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.FilterColumn.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Spreadsheet.FilterColumn.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowButton">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue ShowButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue ShowButton" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.FilterColumn.ShowButton" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowButton As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.ShowButton : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.FilterColumn.ShowButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "showButton")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Show Filter Button.Represents the following attribute in the schema: showButton</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top10">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Spreadsheet.Top10 Top10 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Spreadsheet.Top10 Top10" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Spreadsheet.FilterColumn.Top10" />
      <MemberSignature Language="VB.NET" Value="Public Property Top10 As Top10" />
      <MemberSignature Language="F#" Value="member this.Top10 : DocumentFormat.OpenXml.Spreadsheet.Top10 with get, set" Usage="DocumentFormat.OpenXml.Spreadsheet.FilterColumn.Top10" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Spreadsheet.Top10</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Top 10. Represents the following element tag in the schema: x:top10</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Spreadsheet.Top10" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x = http://schemas.openxmlformats.org/spreadsheetml/2006/main
            </remark>
      </Docs>
    </Member>
  </Members>
</Type>