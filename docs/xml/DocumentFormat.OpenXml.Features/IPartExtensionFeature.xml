<Type Name="IPartExtensionFeature" FullName="DocumentFormat.OpenXml.Features.IPartExtensionFeature">
  <TypeSignature Language="C#" Value="public interface IPartExtensionFeature" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPartExtensionFeature" FrameworkAlternate="openxml-3.0.0" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Features.IPartExtensionFeature" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPartExtensionFeature" />
  <TypeSignature Language="F#" Value="type IPartExtensionFeature = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IPartExtensionFeature" FrameworkAlternate="openxml-3.0.1" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            A feature that defines what extensions are used for a given part content type
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register (string contentType, string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Register(string contentType, string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Features.IPartExtensionFeature.Register(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register (contentType As String, extension As String)" />
      <MemberSignature Language="F#" Value="abstract member Register : string * string -&gt; unit" Usage="iPartExtensionFeature.Register (contentType, extension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentType">Conent type to register extension for.</param>
        <param name="extension">Extension to register.</param>
        <summary>
            Registers a extension to be used for a content type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetExtension">
      <MemberSignature Language="C#" Value="public bool TryGetExtension (string contentType, out string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetExtension(string contentType, [out] string&amp; extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Features.IPartExtensionFeature.TryGetExtension(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetExtension (contentType As String, ByRef extension As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetExtension : string * string -&gt; bool" Usage="iPartExtensionFeature.TryGetExtension (contentType, extension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="extension" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="contentType">Content type to find extension for.</param>
        <param name="extension">Registered extension.</param>
        <summary>
            Attempts to retrieve a registered extension for the content type.
            </summary>
        <returns>Whether an extension was found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
