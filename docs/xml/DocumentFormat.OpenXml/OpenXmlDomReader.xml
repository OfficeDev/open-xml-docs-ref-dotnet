<Type Name="OpenXmlDomReader" FullName="DocumentFormat.OpenXml.OpenXmlDomReader">
  <TypeSignature Language="C#" Value="public class OpenXmlDomReader : DocumentFormat.OpenXml.OpenXmlReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OpenXmlDomReader extends DocumentFormat.OpenXml.OpenXmlReader" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.OpenXmlDomReader" />
  <TypeSignature Language="VB.NET" Value="Public Class OpenXmlDomReader&#xA;Inherits OpenXmlReader" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents the Open XML document reader class.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenXmlDomReader (DocumentFormat.OpenXml.OpenXmlElement openXmlElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement openXmlElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.OpenXmlDomReader.#ctor(DocumentFormat.OpenXml.OpenXmlElement)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="openXmlElement" Type="DocumentFormat.OpenXml.OpenXmlElement" />
      </Parameters>
      <Docs>
        <param name="openXmlElement">The OpenXmlElement to read.</param>
        <summary>
            Initializes a new instance of the OpenXmlDomReader class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenXmlDomReader (DocumentFormat.OpenXml.OpenXmlElement openXmlElement, bool readMiscNodes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement openXmlElement, bool readMiscNodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.OpenXmlDomReader.#ctor(DocumentFormat.OpenXml.OpenXmlElement,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="openXmlElement" Type="DocumentFormat.OpenXml.OpenXmlElement" />
        <Parameter Name="readMiscNodes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="openXmlElement">The OpenXmlElement to read.</param>
        <param name="readMiscNodes">Specify false to indicate to the reader to skip all miscellaneous nodes. The default value is false.</param>
        <summary>
            Initializes a new instance of the OpenXmlDomReader class using the supplied OpenXmlElement and Boolean values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;DocumentFormat.OpenXml.OpenXmlAttribute&gt; Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype DocumentFormat.OpenXml.OpenXmlAttribute&gt; Attributes" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlDomReader.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As ReadOnlyCollection(Of OpenXmlAttribute)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;DocumentFormat.OpenXml.OpenXmlAttribute&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the list of attributes of the current element.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.OpenXmlDomReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Closes the reader.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlDomReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the depth of the current node in the XML document. The depth of the root element is 0.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementType">
      <MemberSignature Language="C#" Value="public override Type ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ElementType" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlDomReader.ElementType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ElementType As Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type of the corresponding strong typed class of the current element.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public override bool EOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EOF" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlDomReader.EOF" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EOF As Boolean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value that indicates whether the reader is positioned at the end of the stream. 
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public override string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.OpenXmlDomReader.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetText () As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the text of the element if the element is an OpenXmlLeafTextElement. Returns String.Empty for other elements.
            </summary>
        <returns>
            The text of the element if the element is an OpenXmlLeafTextElement. Returns String.Empty for other elements.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEndElement">
      <MemberSignature Language="C#" Value="public override bool IsEndElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEndElement" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlDomReader.IsEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEndElement As Boolean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value that indicates whether the current node is an element end. 
            </summary>
        <value>To be added.</value>
        <remarks>IsStartElement and IsEndElement will be false when IsMiscNode==true.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMiscNode">
      <MemberSignature Language="C#" Value="public override bool IsMiscNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMiscNode" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlDomReader.IsMiscNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMiscNode As Boolean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value that indicates whether the current node is a miscellaneous XML node (non element). 
            </summary>
        <value>To be added.</value>
        <remarks>IsStartElement and IsEndElement will be false when IsMiscNode==true.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStartElement">
      <MemberSignature Language="C#" Value="public override bool IsStartElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStartElement" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlDomReader.IsStartElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsStartElement As Boolean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value that indicates whether the current node is an element start. 
            </summary>
        <value>To be added.</value>
        <remarks>IsStartElement and IsEndElement will be false when IsMiscNode==true.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCurrentElement">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement LoadCurrentElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement LoadCurrentElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.OpenXmlDomReader.LoadCurrentElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LoadCurrentElement () As OpenXmlElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Loads the element at the current cursor.
            </summary>
        <returns>The OpenXmlElement object.</returns>
        <remarks>The new current element is the end of the element after LoadCurrentElement().</remarks>
        <exception cref="T:System.InvalidOperationException">Thrown when the current element is element end.</exception>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlDomReader.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the local name of the current node. 
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceDeclarations">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; NamespaceDeclarations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; NamespaceDeclarations" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlDomReader.NamespaceDeclarations" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceDeclarations As IEnumerable(Of KeyValuePair(Of String, String))" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the namespace declarations of the current element.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceUri">
      <MemberSignature Language="C#" Value="public override string NamespaceUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceUri" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlDomReader.NamespaceUri" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceUri As String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned. 
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlDomReader.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Prefix As String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the namespace prefix associated with the current node. 
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.OpenXmlDomReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Moves to read the next element.
            </summary>
        <returns>Returns true if the next element was read successfully; false if there are no more elements to read. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFirstChild">
      <MemberSignature Language="C#" Value="public override bool ReadFirstChild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ReadFirstChild() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.OpenXmlDomReader.ReadFirstChild" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadFirstChild () As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Moves to read the first child element.
            </summary>
        <returns>Returns true if the first child element was read successfully; false if there are no child elements to read. </returns>
        <remarks>This method can only be called on element start. At the current node, the reader will move to the end tag if there is no child element.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadNextSibling">
      <MemberSignature Language="C#" Value="public override bool ReadNextSibling ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ReadNextSibling() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.OpenXmlDomReader.ReadNextSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadNextSibling () As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Moves to read the next sibling element.
            </summary>
        <returns>Returns true if the next sibling element was read successfully; false if there are no more sibling elements to read. </returns>
        <remarks>At the current node, the reader will move to the end tag of the parent if there are no more sibling elements.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public override void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.OpenXmlDomReader.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Skip ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Skips the children of the current node. 
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>