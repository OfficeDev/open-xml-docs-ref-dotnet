<Type Name="AlternateContent" FullName="DocumentFormat.OpenXml.AlternateContent">
  <TypeSignature Language="C#" Value="public class AlternateContent : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AlternateContent extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.AlternateContent" />
  <TypeSignature Language="VB.NET" Value="Public Class AlternateContent&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type AlternateContent = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the mc:AlternateContent element of markup              compatibility.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AlternateContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.AlternateContent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the AlternateContent              class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AlternateContent (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.AlternateContent.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.AlternateContent : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.AlternateContent" Usage="new DocumentFormat.OpenXml.AlternateContent childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">All child elements</param>
        <summary>Initializes a new instance of the AlternateContent               class by using the supplied OpenXmlElement elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AlternateContent (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.AlternateContent.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.AlternateContent : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.AlternateContent" Usage="new DocumentFormat.OpenXml.AlternateContent childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">All child elements</param>
        <summary>Initializes a new instance of the AlternateContent               class by using the supplied IEnumerable elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AlternateContent (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.AlternateContent.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.AlternateContent : string -&gt; DocumentFormat.OpenXml.AlternateContent" Usage="new DocumentFormat.OpenXml.AlternateContent outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">The outer XML of the element.</param>
        <summary>Initializes a new instance of the AlternateContent               class by using the supplied string.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendNewAlternateContentChoice">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.AlternateContentChoice AppendNewAlternateContentChoice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.AlternateContentChoice AppendNewAlternateContentChoice() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.AlternateContent.AppendNewAlternateContentChoice" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendNewAlternateContentChoice () As AlternateContentChoice" />
      <MemberSignature Language="F#" Value="member this.AppendNewAlternateContentChoice : unit -&gt; DocumentFormat.OpenXml.AlternateContentChoice" Usage="alternateContent.AppendNewAlternateContentChoice " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.AlternateContentChoice</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Appends a new child of type T:DocumentFormat.OpenXml.AlternateContentChoice              to the current element.</summary>
        <returns>Returns <see cref="T:DocumentFormat.OpenXml.AlternateContentChoice" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendNewAlternateContentFallback">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.AlternateContentFallback AppendNewAlternateContentFallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.AlternateContentFallback AppendNewAlternateContentFallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.AlternateContent.AppendNewAlternateContentFallback" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendNewAlternateContentFallback () As AlternateContentFallback" />
      <MemberSignature Language="F#" Value="member this.AppendNewAlternateContentFallback : unit -&gt; DocumentFormat.OpenXml.AlternateContentFallback" Usage="alternateContent.AppendNewAlternateContentFallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.AlternateContentFallback</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Appends a new child of type T:DocumentFormat.OpenXml.AlternateContentFallback              to the current element.</summary>
        <returns>Returns <see cref="T:DocumentFormat.OpenXml.AlternateContentFallback" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.AlternateContent.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="alternateContent.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>When a node is overridden in a derived class,              CloneNode creates a duplicate of the node.</summary>
        <returns>The cloned node.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.AlternateContent.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.AlternateContent.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that represents the local name of the              AlternateContent element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="MarkupCompatibilityNamespace">
      <MemberSignature Language="C#" Value="public static string MarkupCompatibilityNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string MarkupCompatibilityNamespace" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.AlternateContent.MarkupCompatibilityNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MarkupCompatibilityNamespace As String" />
      <MemberSignature Language="F#" Value="member this.MarkupCompatibilityNamespace : string" Usage="DocumentFormat.OpenXml.AlternateContent.MarkupCompatibilityNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that represents the markup compatibility              namespace.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkupCompatibilityNamespaceId">
      <MemberSignature Language="C#" Value="public static byte MarkupCompatibilityNamespaceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property unsigned int8 MarkupCompatibilityNamespaceId" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.AlternateContent.MarkupCompatibilityNamespaceId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MarkupCompatibilityNamespaceId As Byte" />
      <MemberSignature Language="F#" Value="member this.MarkupCompatibilityNamespaceId : byte" Usage="DocumentFormat.OpenXml.AlternateContent.MarkupCompatibilityNamespaceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that represents the markup compatibility              namespace ID.</summary>
        <value>Returns <see cref="T:System.Byte" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="public static string TagName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string TagName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.AlternateContent.TagName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TagName As String" />
      <MemberSignature Language="F#" Value="member this.TagName : string" Usage="DocumentFormat.OpenXml.AlternateContent.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that represents the tag name of the              AlternateContent element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>