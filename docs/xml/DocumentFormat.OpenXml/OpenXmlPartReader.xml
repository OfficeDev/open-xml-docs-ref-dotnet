<Type Name="OpenXmlPartReader" FullName="DocumentFormat.OpenXml.OpenXmlPartReader">
  <TypeSignature Language="C#" Value="public class OpenXmlPartReader : DocumentFormat.OpenXml.OpenXmlReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OpenXmlPartReader extends DocumentFormat.OpenXml.OpenXmlReader" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.OpenXmlPartReader" />
  <TypeSignature Language="VB.NET" Value="Public Class OpenXmlPartReader&#xA;Inherits OpenXmlReader" />
  <TypeSignature Language="F#" Value="type OpenXmlPartReader = class&#xA;    inherit OpenXmlReader" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the Open XML part reader class.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenXmlPartReader (DocumentFormat.OpenXml.Packaging.OpenXmlPart openXmlPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.Packaging.OpenXmlPart openXmlPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.OpenXmlPartReader.#ctor(DocumentFormat.OpenXml.Packaging.OpenXmlPart)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.OpenXmlPartReader : DocumentFormat.OpenXml.Packaging.OpenXmlPart -&gt; DocumentFormat.OpenXml.OpenXmlPartReader" Usage="new DocumentFormat.OpenXml.OpenXmlPartReader openXmlPart" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="openXmlPart" Type="DocumentFormat.OpenXml.Packaging.OpenXmlPart" />
      </Parameters>
      <Docs>
        <param name="openXmlPart">The OpenXmlPart to be read.</param>
        <summary>Initializes a new instance of the OpenXmlPartReader class using the supplied OpenXmlPart class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenXmlPartReader (System.IO.Stream partStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream partStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.OpenXmlPartReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (partStream As Stream)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.OpenXmlPartReader : System.IO.Stream -&gt; DocumentFormat.OpenXml.OpenXmlPartReader" Usage="new DocumentFormat.OpenXml.OpenXmlPartReader partStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="partStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="partStream">the part stream</param>
        <summary>Initializes a new instance of the OpenXmlPartReader class using the supplied stream.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenXmlPartReader (DocumentFormat.OpenXml.Packaging.OpenXmlPart openXmlPart, bool readMiscNodes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.Packaging.OpenXmlPart openXmlPart, bool readMiscNodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.OpenXmlPartReader.#ctor(DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.Boolean)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.OpenXmlPartReader : DocumentFormat.OpenXml.Packaging.OpenXmlPart * bool -&gt; DocumentFormat.OpenXml.OpenXmlPartReader" Usage="new DocumentFormat.OpenXml.OpenXmlPartReader (openXmlPart, readMiscNodes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="openXmlPart" Type="DocumentFormat.OpenXml.Packaging.OpenXmlPart" />
        <Parameter Name="readMiscNodes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="openXmlPart">The OpenXmlPart to be read.</param>
        <param name="readMiscNodes">Setting it to ‘false’ will define the reader’s behavior to skip all miscellaneous nodes. The default value is ‘false’.</param>
        <summary>Initializes a new instance of the OpenXmlPartReader class using the supplied OpenXmlPart and Boolean values.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenXmlPartReader (System.IO.Stream partStream, bool readMiscNodes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream partStream, bool readMiscNodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.OpenXmlPartReader.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (partStream As Stream, readMiscNodes As Boolean)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.OpenXmlPartReader : System.IO.Stream * bool -&gt; DocumentFormat.OpenXml.OpenXmlPartReader" Usage="new DocumentFormat.OpenXml.OpenXmlPartReader (partStream, readMiscNodes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="partStream" Type="System.IO.Stream" />
        <Parameter Name="readMiscNodes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="partStream">the part stream</param>
        <param name="readMiscNodes">Setting it to ‘false’ will define the reader’s behavior to skip all miscellaneous nodes. The default value is ‘false’.</param>
        <summary>Initializes a new instance of the OpenXmlPartReader class using the supplied stream and Boolean values.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;DocumentFormat.OpenXml.OpenXmlAttribute&gt; Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype DocumentFormat.OpenXml.OpenXmlAttribute&gt; Attributes" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlPartReader.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As ReadOnlyCollection(Of OpenXmlAttribute)" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.ObjectModel.ReadOnlyCollection&lt;DocumentFormat.OpenXml.OpenXmlAttribute&gt;" Usage="DocumentFormat.OpenXml.OpenXmlPartReader.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;DocumentFormat.OpenXml.OpenXmlAttribute&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the list of attributes of the current element.</summary>
        <value>Returns <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.OpenXmlPartReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="openXmlPartReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the reader.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlPartReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="DocumentFormat.OpenXml.OpenXmlPartReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the depth of the current node in the XML document. The depth of the root element is 0.</summary>
        <value>Returns <see cref="T:System.Int32" />.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ElementType">
      <MemberSignature Language="C#" Value="public override Type ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ElementType" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlPartReader.ElementType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ElementType As Type" />
      <MemberSignature Language="F#" Value="member this.ElementType : Type" Usage="DocumentFormat.OpenXml.OpenXmlPartReader.ElementType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type of the corresponding strong typed class of the current element.</summary>
        <value>Returns <see cref="T:System.Type" />.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override string Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlPartReader.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As String" />
      <MemberSignature Language="F#" Value="member this.Encoding : string" Usage="DocumentFormat.OpenXml.OpenXmlPartReader.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the encoding of the XML file.</summary>
        <value>Returns <see cref="T:System.Text.Encoding" />.</value>
        <remarks>
            Returns null if encoding is not specified in the XML file.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public override bool EOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EOF" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlPartReader.EOF" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EOF As Boolean" />
      <MemberSignature Language="F#" Value="member this.EOF : bool" Usage="DocumentFormat.OpenXml.OpenXmlPartReader.EOF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the reader is positioned at the end of the stream.</summary>
        <value>Returns <see cref="T:System.Boolean" />.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public override string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.OpenXmlPartReader.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetText () As String" />
      <MemberSignature Language="F#" Value="override this.GetText : unit -&gt; string" Usage="openXmlPartReader.GetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the text of the element if the element is an OpenXmlLeafTextElement. Returns String.Empty for other elements.</summary>
        <returns>The text of the element if the element is an OpenXmlLeafTextElement. Returns String.Empty for other elements.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsEndElement">
      <MemberSignature Language="C#" Value="public override bool IsEndElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEndElement" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlPartReader.IsEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEndElement As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsEndElement : bool" Usage="DocumentFormat.OpenXml.OpenXmlPartReader.IsEndElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the current node is an element end.</summary>
        <value>Returns <see cref="T:System.Boolean" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 IsStartElement and IsEndElement will be false when IsMiscNode==true.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMiscNode">
      <MemberSignature Language="C#" Value="public override bool IsMiscNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMiscNode" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlPartReader.IsMiscNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMiscNode As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsMiscNode : bool" Usage="DocumentFormat.OpenXml.OpenXmlPartReader.IsMiscNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the current node is a miscellaneous XML node (non element).</summary>
        <value>Returns <see cref="T:System.Boolean" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 IsStartElement and IsEndElement will be false when IsMiscNode==true.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStartElement">
      <MemberSignature Language="C#" Value="public override bool IsStartElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStartElement" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlPartReader.IsStartElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsStartElement As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsStartElement : bool" Usage="DocumentFormat.OpenXml.OpenXmlPartReader.IsStartElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the current node is an element start.</summary>
        <value>Returns <see cref="T:System.Boolean" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 IsStartElement and IsEndElement will be false when IsMiscNode==true.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCurrentElement">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement LoadCurrentElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement LoadCurrentElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.OpenXmlPartReader.LoadCurrentElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LoadCurrentElement () As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.LoadCurrentElement : unit -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="openXmlPartReader.LoadCurrentElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Loads the element at the current cursor.</summary>
        <returns>The OpenXmlElement object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The new current element is the end of the element after LoadCurrentElement().  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Thrown when the current element is element end.</exception>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlPartReader.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.OpenXmlPartReader.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the current node.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="NamespaceDeclarations">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; NamespaceDeclarations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; NamespaceDeclarations" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlPartReader.NamespaceDeclarations" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceDeclarations As IEnumerable(Of KeyValuePair(Of String, String))" />
      <MemberSignature Language="F#" Value="member this.NamespaceDeclarations : seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt;" Usage="DocumentFormat.OpenXml.OpenXmlPartReader.NamespaceDeclarations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the namespace declarations of the current element.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceUri">
      <MemberSignature Language="C#" Value="public override string NamespaceUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceUri" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlPartReader.NamespaceUri" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceUri As String" />
      <MemberSignature Language="F#" Value="member this.NamespaceUri : string" Usage="DocumentFormat.OpenXml.OpenXmlPartReader.NamespaceUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlPartReader.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Prefix As String" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="DocumentFormat.OpenXml.OpenXmlPartReader.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the namespace prefix associated with the current node.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.OpenXmlPartReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="openXmlPartReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Moves to read the next element.</summary>
        <returns>Returns true if the next element was read successfully; false if there are no more elements to read.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ReadFirstChild">
      <MemberSignature Language="C#" Value="public override bool ReadFirstChild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ReadFirstChild() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.OpenXmlPartReader.ReadFirstChild" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadFirstChild () As Boolean" />
      <MemberSignature Language="F#" Value="override this.ReadFirstChild : unit -&gt; bool" Usage="openXmlPartReader.ReadFirstChild " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Moves to read the first child element.</summary>
        <returns>Returns true if the first child element was read successfully; false if there are no child elements to read.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Only can be called on element start. Current will move to the end tag if no child element.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadNextSibling">
      <MemberSignature Language="C#" Value="public override bool ReadNextSibling ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ReadNextSibling() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.OpenXmlPartReader.ReadNextSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadNextSibling () As Boolean" />
      <MemberSignature Language="F#" Value="override this.ReadNextSibling : unit -&gt; bool" Usage="openXmlPartReader.ReadNextSibling " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Moves to read the next sibling element.</summary>
        <returns>Returns true if the next sibling element was read successfully; false if there are no more sibling elements to read.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Current will move to the end tag of the parent if no more sibling element.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public override void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.OpenXmlPartReader.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Skip ()" />
      <MemberSignature Language="F#" Value="override this.Skip : unit -&gt; unit" Usage="openXmlPartReader.Skip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Skips the child elements of the current node.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="StandaloneXml">
      <MemberSignature Language="C#" Value="public override Nullable&lt;bool&gt; StandaloneXml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; StandaloneXml" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.OpenXmlPartReader.StandaloneXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property StandaloneXml As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.StandaloneXml : Nullable&lt;bool&gt;" Usage="DocumentFormat.OpenXml.OpenXmlPartReader.StandaloneXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the standalone property of the XML file. Returns false if there is no "standalone" in the XML declaration stream.</summary>
        <value>Returns <see cref="T:System.Nullable`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>