<Type Name="RightMarginDiv" FullName="DocumentFormat.OpenXml.Wordprocessing.RightMarginDiv">
  <TypeSignature Language="C#" Value="public class RightMarginDiv : DocumentFormat.OpenXml.Wordprocessing.SignedTwipsMeasureType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RightMarginDiv extends DocumentFormat.OpenXml.Wordprocessing.SignedTwipsMeasureType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Wordprocessing.RightMarginDiv" />
  <TypeSignature Language="VB.NET" Value="Public Class RightMarginDiv&#xA;Inherits SignedTwipsMeasureType" />
  <TypeSignature Language="F#" Value="type RightMarginDiv = class&#xA;    inherit SignedTwipsMeasureType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Wordprocessing.SignedTwipsMeasureType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Right Margin for HTML div. When the object is serialized out as xml, its qualified name is w:marRight.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 `marRight (Right Margin for HTML div)`  
  
 This element specifies the margin which shall be displayed at the right of the boundaries of the current HTML *div* object.  
  
 If this element is omitted, then this HTML *div* object shall not have a right margin.  
  
 [*Example*: Consider a simple HTML document defined as follows:  
  
```xml  
<html>  
  <body>  
    <div style="margin-top:100px; margin-left:200px; margin-right:50px; margin-bottom:100px">  
      <p>paragraph of text</p>  
    </div>  
    <p>another paragraph of text</p>  
  </body>  
</html>  
```  
  
 This HTML would therefore normally appear as follows (image scaled appropriately):  
  
 fff0849c-1302-4c34-a673-62da86ba5a56  
  
 Now, when this document is saved in the WordprocessingML format, the information stored on the *div* elements is stored in the web setting part as follows:  
  
```xml  
<w:divs>  
  <w:div w:id="1785730240">  
    <w:marLeft w:val="3000" />  
    <w:marRight w:val="750" />  
    <w:marTop w:val="1500" />  
    <w:marBottom w:val="1500" />  
  </w:div>  
</w:divs>  
```  
  
 The marRight element specifies margin information about the right margin for the single HTML *div* structure in the document; in this case, a 37.5 point right margin. The initial 50 pixel margin was converted to 37.5 points using the following logic:  
  
 *end example*]  
  
|Parent Elements|  
|---------------------|  
|div (§17.15.2.6)|  
  
|Attributes|Description|  
|----------------|-----------------|  
|val (Positive or Negative Value in Twentieths of a Point)|Specifies a positive or negative measurement in twentieths of a point (equivalent to 1/1440th of an inch).<br /><br /> The contents of this measurement shall be interpreted based on the context of the parent XML element.<br /><br /> [*Example*: Consider an attribute value of -*720* whose type is ST_SignedTwipsMeasure. This attribute value specifies a value of negative one-half of an inch or -36 points (-*720* twentieths of a point = -36 points = ). *end example*]<br /><br /> The possible values for this attribute are defined by the *ST_SignedTwipsMeasure* simple type (§17.18.81).|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_SignedTwipsMeasure) is located in §A.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RightMarginDiv ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.RightMarginDiv.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the RightMarginDiv class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.RightMarginDiv.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="rightMarginDiv.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.RightMarginDiv.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Wordprocessing.RightMarginDiv.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>