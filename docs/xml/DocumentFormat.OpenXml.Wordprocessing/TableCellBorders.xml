<Type Name="TableCellBorders" FullName="DocumentFormat.OpenXml.Wordprocessing.TableCellBorders">
  <TypeSignature Language="C#" Value="public class TableCellBorders : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TableCellBorders extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Wordprocessing.TableCellBorders" />
  <TypeSignature Language="VB.NET" Value="Public Class TableCellBorders&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type TableCellBorders = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.TopBorder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.LeftBorder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.StartBorder), DocumentFormat.OpenXml.FileFormatVersions.Office2010)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.BottomBorder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.RightBorder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.EndBorder), DocumentFormat.OpenXml.FileFormatVersions.Office2010)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.InsideHorizontalBorder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.InsideVerticalBorder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.TopLeftToBottomRightCellBorder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.TopRightToBottomLeftCellBorder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the TableCellBorders Class. When the object is serialized out as xml, its qualified name is w:tcBorders.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **tcBorders (Table Cell Borders)**  
  
 This element specifies the set of borders for the edges of the current table cell, using the eight border types defined by its child elements.  
  
 If the cell spacing for any row is non-zero as specified using the tblCellSpacing element (§17.4.45; §17.4.44; §17.4.46), then there is never a border conflict (as the non-zero cell spacing is applied above and beyond each individual cell border's width) and all table, table-level exception, and table cell borders shall be displayed.  
  
 If the cell spacing is zero, then there can be a conflict between two adjacent cell borders [*Example*: Between the left border of all cells in the second column and the right border of all cells in the first column of the table. *end example*], which shall be resolved as follows:  
  
 *If either conflicting table cell border is nil or none (no border), then the opposing border shall be displayed.*  
  
 *If a cell border conflicts with a table border, the cell border always wins.*  
  
 *Each border shall then be assigned a weight using the following formula, and the border value using this calculation shall be displayed over the alternative border:*  
  
 *The border number shall be determined by this list:*  
  
 single  
  
 1  
  
 thick  
  
 2  
  
 double  
  
 3  
  
 dotted  
  
 4  
  
 dashed  
  
 5  
  
 dotDash  
  
 6  
  
 dotDotDash  
  
 7  
  
 triple  
  
 8  
  
 thinThickSmallGap  
  
 9  
  
 thickThinSmallGap  
  
 10  
  
 thinThickThinSmallGap  
  
 11  
  
 thinThickMediumGap  
  
 12  
  
 thickThinMediumGap  
  
 13  
  
 thinThickThinMediumGap  
  
 14  
  
 thinThickLargeGap  
  
 15  
  
 thickThinLargeGap  
  
 16  
  
 thinThickThinLargeGap  
  
 17  
  
 wave  
  
 18  
  
 doubleWave  
  
 19  
  
 dashSmallGap  
  
 20  
  
 dashDotStroked  
  
 21  
  
 threeDEmboss  
  
 22  
  
 threeDEngrave  
  
 23  
  
 outset  
  
 24  
  
 inset  
  
 25  
  
 *If the borders have an equal weight, than the higher of the two on this precedence list shall win:*  
  
 single  
  
 thick  
  
 double  
  
 dotted  
  
 dashed  
  
 dotDash  
  
 dotDotDash  
  
 triple  
  
 thinThickSmallGap  
  
 thickThinSmallGap  
  
 thinThickThinSmallGap  
  
 thinThickMediumGap  
  
 thickThinMediumGap  
  
 thinThickThinMediumGap  
  
 thinThickLargeGap  
  
 thickThinLargeGap  
  
 thinThickThinLargeGap  
  
 wave  
  
 doubleWave  
  
 dashSmallGap  
  
 dashDotStroked  
  
 threeDEmboss  
  
 threeDEngrave  
  
 outset  
  
 inset  
  
 *If the borders have an identical style, than each border color shall be assigned a brightness value as follows:The color with the smaller brightness value shall win.*  
  
 *If the borders have an identical brightness value above, than each border color shall be assigned a new brightness value as follows:The color with the smaller brightness value shall win.*  
  
 *If the borders have an identical brightness value above, than each border color shall be assigned a brightness value as follows:The color with the smaller brightness value shall win.*  
  
 *If the borders have an identical brightness value above, then they are functionally identical, and the first border in reading order should be displayed.*  
  
 [*Example*: Consider the following two cell table (with exaggerated table cell spacing for clarity):  
  
 If we collapse the cell spacing, there are conflicting borders at all edges. For each cell/table border conflict, rule #2 says that the cell border must win. For the conflict in the center between two cell borders, rule #3 gives us a larger border weight for the right cell's border, resulting in the following table:  
  
 *end example*]  
  
 If this element is omitted, then this table shall have the borders specified by the associated table style. If no borders are specified in the style hierarchy, then this table shall not have any table borders.  
  
 [*Example*: Consider a table whose first cell specifies cell-level borders consisting of a think double red line, as follows:  
  
 These cell borders are specified using the following WordprocessingML:  
  
```xml  
<w:tcPr>  
  <w:tcBorders>  
    <w:top w:val="double" w:sz="24" w:space="0" w:color="FF0000"/>  
    <w:left w:val="double" w:sz="24" w:space="0" w:color="FF0000"/>  
    <w:bottom w:val="double" w:sz="24" w:space="0" w:color="FF0000"/>  
    <w:right w:val="double" w:sz="24" w:space="0" w:color="FF0000"/>  
  </w:tcBorders>  
</w:tcPr>  
```  
  
 The tcBorders element specifies the set of borders applied to the first cell as a 3 point *double* border. *end example*]  
  
|Parent Elements|  
|---------------------|  
|tcPr (§17.7.6.8); tcPr (§17.7.6.9); tcPr (§17.4.70); tcPr (§17.4.71)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|bottom (Table Cell Bottom Border)|§17.4.3|  
|end (Table Cell Trailing Edge Border)|§17.4.12|  
|insideH (Table Cell Inside Horizontal Edges Border)|§17.4.24|  
|insideV (Table Cell Inside Vertical Edges Border)|§17.4.26|  
|start (Table Cell Leading Edge Border)|§17.4.34|  
|tl2br (Table Cell Top Left to Bottom Right Diagonal Border)|§17.4.74|  
|top (Table Cell Top Border)|§17.4.75|  
|tr2bl (Table Cell Top Right to Bottom Left Diagonal Border)|§17.4.80|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_TcBorders) is located in §A.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableCellBorders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the TableCellBorders class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableCellBorders (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Wordprocessing.TableCellBorders : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Wordprocessing.TableCellBorders" Usage="new DocumentFormat.OpenXml.Wordprocessing.TableCellBorders childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the TableCellBorders class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableCellBorders (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Wordprocessing.TableCellBorders : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Wordprocessing.TableCellBorders" Usage="new DocumentFormat.OpenXml.Wordprocessing.TableCellBorders childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the TableCellBorders class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableCellBorders (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Wordprocessing.TableCellBorders : string -&gt; DocumentFormat.OpenXml.Wordprocessing.TableCellBorders" Usage="new DocumentFormat.OpenXml.Wordprocessing.TableCellBorders outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the TableCellBorders class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomBorder">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.BottomBorder BottomBorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.BottomBorder BottomBorder" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.BottomBorder" />
      <MemberSignature Language="VB.NET" Value="Public Property BottomBorder As BottomBorder" />
      <MemberSignature Language="F#" Value="member this.BottomBorder : DocumentFormat.OpenXml.Wordprocessing.BottomBorder with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.BottomBorder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.BottomBorder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Table Cell Bottom Border. Represents the following element tag in the schema: w:bottom</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Wordprocessing.BottomBorder" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="tableCellBorders.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndBorder">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.EndBorder EndBorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.EndBorder EndBorder" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.EndBorder" />
      <MemberSignature Language="VB.NET" Value="Public Property EndBorder As EndBorder" />
      <MemberSignature Language="F#" Value="member this.EndBorder : DocumentFormat.OpenXml.Wordprocessing.EndBorder with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.EndBorder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.OfficeAvailability(DocumentFormat.OpenXml.FileFormatVersions.Office2010)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.EndBorder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>EndBorder, this property is only available in Office2010. Represents the following element tag in the schema: w:end</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="InsideHorizontalBorder">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.InsideHorizontalBorder InsideHorizontalBorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.InsideHorizontalBorder InsideHorizontalBorder" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.InsideHorizontalBorder" />
      <MemberSignature Language="VB.NET" Value="Public Property InsideHorizontalBorder As InsideHorizontalBorder" />
      <MemberSignature Language="F#" Value="member this.InsideHorizontalBorder : DocumentFormat.OpenXml.Wordprocessing.InsideHorizontalBorder with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.InsideHorizontalBorder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.InsideHorizontalBorder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Table Cell Inside Horizontal Edges Border. Represents the following element tag in the schema: w:insideH</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Wordprocessing.InsideHorizontalBorder" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="InsideVerticalBorder">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.InsideVerticalBorder InsideVerticalBorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.InsideVerticalBorder InsideVerticalBorder" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.InsideVerticalBorder" />
      <MemberSignature Language="VB.NET" Value="Public Property InsideVerticalBorder As InsideVerticalBorder" />
      <MemberSignature Language="F#" Value="member this.InsideVerticalBorder : DocumentFormat.OpenXml.Wordprocessing.InsideVerticalBorder with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.InsideVerticalBorder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.InsideVerticalBorder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Table Cell Inside Vertical Edges Border. Represents the following element tag in the schema: w:insideV</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Wordprocessing.InsideVerticalBorder" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LeftBorder">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.LeftBorder LeftBorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.LeftBorder LeftBorder" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.LeftBorder" />
      <MemberSignature Language="VB.NET" Value="Public Property LeftBorder As LeftBorder" />
      <MemberSignature Language="F#" Value="member this.LeftBorder : DocumentFormat.OpenXml.Wordprocessing.LeftBorder with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.LeftBorder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.LeftBorder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Table Cell Left Border. Represents the following element tag in the schema: w:left</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Wordprocessing.LeftBorder" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightBorder">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.RightBorder RightBorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.RightBorder RightBorder" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.RightBorder" />
      <MemberSignature Language="VB.NET" Value="Public Property RightBorder As RightBorder" />
      <MemberSignature Language="F#" Value="member this.RightBorder : DocumentFormat.OpenXml.Wordprocessing.RightBorder with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.RightBorder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.RightBorder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Table Cell Right Border. Represents the following element tag in the schema: w:right</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Wordprocessing.RightBorder" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="StartBorder">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.StartBorder StartBorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.StartBorder StartBorder" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.StartBorder" />
      <MemberSignature Language="VB.NET" Value="Public Property StartBorder As StartBorder" />
      <MemberSignature Language="F#" Value="member this.StartBorder : DocumentFormat.OpenXml.Wordprocessing.StartBorder with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.StartBorder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.OfficeAvailability(DocumentFormat.OpenXml.FileFormatVersions.Office2010)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.StartBorder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>StartBorder, this property is only available in Office2010. Represents the following element tag in the schema: w:start</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="TopBorder">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.TopBorder TopBorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.TopBorder TopBorder" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.TopBorder" />
      <MemberSignature Language="VB.NET" Value="Public Property TopBorder As TopBorder" />
      <MemberSignature Language="F#" Value="member this.TopBorder : DocumentFormat.OpenXml.Wordprocessing.TopBorder with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.TopBorder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.TopBorder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Table Cell Top Border. Represents the following element tag in the schema: w:top</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Wordprocessing.TopBorder" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="TopLeftToBottomRightCellBorder">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.TopLeftToBottomRightCellBorder TopLeftToBottomRightCellBorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.TopLeftToBottomRightCellBorder TopLeftToBottomRightCellBorder" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.TopLeftToBottomRightCellBorder" />
      <MemberSignature Language="VB.NET" Value="Public Property TopLeftToBottomRightCellBorder As TopLeftToBottomRightCellBorder" />
      <MemberSignature Language="F#" Value="member this.TopLeftToBottomRightCellBorder : DocumentFormat.OpenXml.Wordprocessing.TopLeftToBottomRightCellBorder with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.TopLeftToBottomRightCellBorder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.TopLeftToBottomRightCellBorder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Table Cell Top Left to Bottom Right Diagonal Border. Represents the following element tag in the schema: w:tl2br</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Wordprocessing.TopLeftToBottomRightCellBorder" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="TopRightToBottomLeftCellBorder">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.TopRightToBottomLeftCellBorder TopRightToBottomLeftCellBorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.TopRightToBottomLeftCellBorder TopRightToBottomLeftCellBorder" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.TopRightToBottomLeftCellBorder" />
      <MemberSignature Language="VB.NET" Value="Public Property TopRightToBottomLeftCellBorder As TopRightToBottomLeftCellBorder" />
      <MemberSignature Language="F#" Value="member this.TopRightToBottomLeftCellBorder : DocumentFormat.OpenXml.Wordprocessing.TopRightToBottomLeftCellBorder with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellBorders.TopRightToBottomLeftCellBorder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.TopRightToBottomLeftCellBorder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Table Cell Top Right to Bottom Left Diagonal Border. Represents the following element tag in the schema: w:tr2bl</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Wordprocessing.TopRightToBottomLeftCellBorder" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
  </Members>
</Type>