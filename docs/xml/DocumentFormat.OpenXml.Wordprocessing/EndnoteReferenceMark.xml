<Type Name="EndnoteReferenceMark" FullName="DocumentFormat.OpenXml.Wordprocessing.EndnoteReferenceMark">
  <TypeSignature Language="C#" Value="public class EndnoteReferenceMark : DocumentFormat.OpenXml.Wordprocessing.EmptyType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EndnoteReferenceMark extends DocumentFormat.OpenXml.Wordprocessing.EmptyType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Wordprocessing.EndnoteReferenceMark" />
  <TypeSignature Language="VB.NET" Value="Public Class EndnoteReferenceMark&#xA;Inherits EmptyType" />
  <TypeSignature Language="F#" Value="type EndnoteReferenceMark = class&#xA;    inherit EmptyType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Wordprocessing.EmptyType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Endnote Reference Mark. When the object is serialized out as xml, its qualified name is w:endnoteRef.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 `endnoteRef (Endnote Reference Mark)`  
  
 This element specifies the presence of an endnote reference mark. An *endnote reference mark* is a run of automatically numbered text which follows the numbering format set forth via the numFmt element (§17.11.17).  
  
 If an endnote reference mark is specified within a run which is not part of an endnote, then that endnote reference mark can be ignored.  
  
 [*Example*: Consider the following document where some text is referenced by an endnote at the end of the document:  
  
 70d40be4-903c-4786-8499-3298be2e8aa6  
  
 The endnote reference mark is the lower case roman numeral within the actual endnote itself in the diagram above. The contents of the endnote (including the endnote reference mark) are represented by the following WordprocessingML:  
  
```xml  
<w:endnote w:id="2">  
  <w:p>  
    <w:pPr>  
      <w:pStyle w:val="EndnoteText" />  
    </w:pPr>  
    <w:r>  
      <w:rPr>  
        <w:rStyle w:val="EndnoteReference" />  
      </w:rPr>  
      <w:endfootnoteRef />  
    </w:r>  
    <w:r>  
      <w:t>  
Cool reference</w:t>  
    </w:r>  
  </w:p>  
</w:endnote>  
```  
  
 The resulting endnote contains the literal endnote content of *Cool reference*, preceding by an automatically numbered endnote reference mark. Since this is the first endnote in the document, that automatically numbered reference mark uses the lower case roman numeral *i*. *end example*]  
  
|Parent Elements|  
|---------------------|  
|r (§22.1.2.87); r (§17.3.2.25)|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_Empty) is located in §A.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndnoteReferenceMark ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.EndnoteReferenceMark.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the EndnoteReferenceMark class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.EndnoteReferenceMark.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="endnoteReferenceMark.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.EndnoteReferenceMark.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Wordprocessing.EndnoteReferenceMark.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>