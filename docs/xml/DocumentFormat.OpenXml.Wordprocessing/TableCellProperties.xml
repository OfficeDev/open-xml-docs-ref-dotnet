<Type Name="TableCellProperties" FullName="DocumentFormat.OpenXml.Wordprocessing.TableCellProperties">
  <TypeSignature Language="C#" Value="public class TableCellProperties : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TableCellProperties extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Wordprocessing.TableCellProperties" />
  <TypeSignature Language="VB.NET" Value="Public Class TableCellProperties&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type TableCellProperties = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.ConditionalFormatStyle))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.TableCellWidth))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.GridSpan))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.HorizontalMerge))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.VerticalMerge))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.TableCellBorders))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.Shading))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.NoWrap))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.TableCellMargin))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.TextDirection))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.TableCellFitText))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.TableCellVerticalAlignment))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.HideMark))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.CellInsertion))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.CellDeletion))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.CellMerge))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.TableCellPropertiesChange))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Table Cell Properties. When the object is serialized out as xml, its qualified name is w:tcPr.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **tcPr (Table Cell Properties)**  
  
 This element specifies the set of properties which shall be applied a specific table cell. Each unique property is specified by a child element of this element. In any instance where there is a conflict between the table level, table-level exception, or row level properties with a corresponding table cell property, these properties shall overwrite the table or row wide properties.  
  
 [*Example*: Consider a table where the cell width overwrites the table width represented in the following WordprocessingML:  
  
```xml  
<w:tbl>  
  <w:tblPr>  
    <w:tblCellMar>  
      <w:left w:w="0" w:type="dxa"/>  
    </w:tblCellMar>  
  </w:tblPr>  
  …  <w:tr>  
    <w:tc>  
      <w:tcPr>  
        <w:tcMar>  
          <w:left w:w="720" w:type="dxa"/>  
        </w:tcMar>  
      </w:tcPr>  
      …    </w:tc>  
  </w:tr>  
</w:tbl>  
```  
  
 This table cell has a left cell margin of *720* twentieths of a point (one half inch) as specified in the tcMar element, which overwrites the table level setting of *0* left table cell margin. *end example*]  
  
|Parent Elements|  
|---------------------|  
|tc (§17.4.66)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|cellDel (Table Cell Deletion)|§17.13.5.1|  
|cellIns (Table Cell Insertion)|§17.13.5.2|  
|cellMerge (Vertically Merged/Split Table Cells)|§17.13.5.3|  
|cnfStyle (Table Cell Conditional Formatting)|§17.4.8|  
|gridSpan (Grid Columns Spanned by Current Table Cell)|§17.4.17|  
|headers (Header Cells Associated With Table Cell)|§17.4.19|  
|hideMark (Ignore End Of Cell Marker In Row Height Calculation)|§17.4.21|  
|hMerge (Horizontally Merged Cell)|§17.4.22|  
|noWrap (Don't Wrap Cell Content)|§17.4.30|  
|shd (Table Cell Shading)|§17.4.33|  
|tcBorders (Table Cell Borders)|§17.4.67|  
|tcFitText (Fit Text Within Cell)|§17.4.68|  
|tcMar (Single Table Cell Margins)|§17.4.69|  
|tcPrChange (Revision Information for Table Cell Properties)|§17.13.5.36|  
|tcW (Preferred Table Cell Width)|§17.4.72|  
|textDirection (Table Cell Text Flow Direction)|§17.4.73|  
|vAlign (Table Cell Vertical Alignment)|§17.4.84|  
|vMerge (Vertically Merged Cell)|§17.4.85|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_TcPr) is located in §A.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **tcPr (Table Style Conditional Formatting Table Cell Properties)**  
  
 This element specifies the set of table cell properties which shall be applied to all regions within a table which match the conditional formatting type specified on the parent tblStylePr element. These properties are applied in the order specified via the style hierarchy.  
  
 [*Example*: Consider a table style which contains conditional formatting for its *firstRow*, defined as follows:  
  
```xml  
<w:style w:type="table" w:styleId="exampleTableStyle">  
  …  <w:tblStylePr w:type="firstRow">  
    <w:tcPr>  
      <w:tcBorders>  
        <w:top w:val="nil" />  
        <w:left w:val="nil" />  
        <w:bottom w:val="nil" />  
        <w:right w:val="nil" />  
        <w:insideH w:val="nil" />  
        <w:insideV w:val="nil" />  
      </w:tcBorders>  
    </w:tcPr>  
    …  </w:tblStylePr>  
</w:style>  
```  
  
 The tcPr element specified within the tblStylePr element specifies the set of table cell properties which must be applied to all parts of the table which meet the criteria specified by the type value of *firstRow* - all of the header rows of the table. In this example, the single table cell property applied is a set of table cell borders via the tcBorders element (§17.4.67). In this case, these cell borders simply reset any previous cell borders to *nil*. *end example*]  
  
|Parent Elements|  
|---------------------|  
|tblStylePr (§17.7.6.6)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|cellDel (Table Cell Deletion)|§17.13.5.1|  
|cellIns (Table Cell Insertion)|§17.13.5.2|  
|cellMerge (Vertically Merged/Split Table Cells)|§17.13.5.3|  
|cnfStyle (Table Cell Conditional Formatting)|§17.4.8|  
|gridSpan (Grid Columns Spanned by Current Table Cell)|§17.4.17|  
|headers (Header Cells Associated With Table Cell)|§17.4.19|  
|hideMark (Ignore End Of Cell Marker In Row Height Calculation)|§17.4.21|  
|hMerge (Horizontally Merged Cell)|§17.4.22|  
|noWrap (Don't Wrap Cell Content)|§17.4.30|  
|shd (Table Cell Shading)|§17.4.33|  
|tcBorders (Table Cell Borders)|§17.4.67|  
|tcFitText (Fit Text Within Cell)|§17.4.68|  
|tcMar (Single Table Cell Margins)|§17.4.69|  
|tcPrChange (Revision Information for Table Cell Properties)|§17.13.5.36|  
|tcW (Preferred Table Cell Width)|§17.4.72|  
|textDirection (Table Cell Text Flow Direction)|§17.4.73|  
|vAlign (Table Cell Vertical Alignment)|§17.4.84|  
|vMerge (Vertically Merged Cell)|§17.4.85|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_TcPr) is located in §A.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **tcPr (Style Table Cell Properties)**  
  
 This element specifies the set of table cell properties which shall be applied to the table. These properties are not conditional and shall always be applied (although they are applied before all conditional formatting properties).  
  
 [*Example*: Consider a table style defined as follows:  
  
```xml  
<w:style w:type="table" w:styleId="exampleTableStyle">  
  <w:tcPr>  
    <w:tcFitText/>  
  </w:tcPr>  
</w:style>  
```  
  
 The tcPr element specified within the style element specifies the set of table cell properties which must be applied to all parts of the table. In this example, the single table cell property applied is the fit text setting via the tcFitText element (§17.4.68). *end example*]  
  
|Parent Elements|  
|---------------------|  
|style (§17.7.4.17)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|cellDel (Table Cell Deletion)|§17.13.5.1|  
|cellIns (Table Cell Insertion)|§17.13.5.2|  
|cellMerge (Vertically Merged/Split Table Cells)|§17.13.5.3|  
|cnfStyle (Table Cell Conditional Formatting)|§17.4.8|  
|gridSpan (Grid Columns Spanned by Current Table Cell)|§17.4.17|  
|headers (Header Cells Associated With Table Cell)|§17.4.19|  
|hideMark (Ignore End Of Cell Marker In Row Height Calculation)|§17.4.21|  
|hMerge (Horizontally Merged Cell)|§17.4.22|  
|noWrap (Don't Wrap Cell Content)|§17.4.30|  
|shd (Table Cell Shading)|§17.4.33|  
|tcBorders (Table Cell Borders)|§17.4.67|  
|tcFitText (Fit Text Within Cell)|§17.4.68|  
|tcMar (Single Table Cell Margins)|§17.4.69|  
|tcPrChange (Revision Information for Table Cell Properties)|§17.13.5.36|  
|tcW (Preferred Table Cell Width)|§17.4.72|  
|textDirection (Table Cell Text Flow Direction)|§17.4.73|  
|vAlign (Table Cell Vertical Alignment)|§17.4.84|  
|vMerge (Vertically Merged Cell)|§17.4.85|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_TcPr) is located in §A.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
   
  
## Examples  
 The following example creates a table into a word-processing document, and uses the `TableCellProperties` class to specify the width of the table cell.  
  
```csharp  
using System;  
using DocumentFormat.OpenXml;  
using DocumentFormat.OpenXml.Packaging;  
using DocumentFormat.OpenXml.Wordprocessing;  
  
namespace TableCellPropertiesEx  
{  
    class Program  
    {  
         // Insert a table into an existing word processing document.  
        static void Main(string[] args)  
        {  
            string fileName = @"C:\users\public\documents\TableCellPropertiesEx.docx";  
            using (WordprocessingDocument document  
                = WordprocessingDocument.Open(fileName, true))  
            {  
                // Create an empty table.  
                Table table = new Table();  
  
                // Create a TableProperties object and specify its border information.  
                TableProperties tblProp = new TableProperties(  
                    new TableBorders(new TopBorder()  
                        { Val = new EnumValue<BorderValues>(BorderValues.Sawtooth), Size = 24 },  
                        new BottomBorder()  
                        { Val = new EnumValue<BorderValues>(BorderValues.Sawtooth), Size = 24 },  
                        new LeftBorder()  
                        { Val = new EnumValue<BorderValues>(BorderValues.Sawtooth), Size = 24 },  
                        new RightBorder()  
                        { Val = new EnumValue<BorderValues>(BorderValues.Sawtooth), Size = 24 },  
                        new InsideHorizontalBorder()  
                        { Val = new EnumValue<BorderValues>(BorderValues.Sawtooth), Size = 24 },  
                        new InsideVerticalBorder()  
                        { Val = new EnumValue<BorderValues>(BorderValues.Sawtooth), Size = 24 } )  
                );  
  
                // Append the TableProperties object to the empty table.  
                table.AppendChild<TableProperties>(tblProp);  
  
                // Create a row and a cell.  
                TableRow tableRow = new TableRow();  
                TableCell tableCell1 = new TableCell();  
  
                // Specify the width property of the table cell.  
                tableCell1.Append(new TableCellProperties(  
                    new TableCellWidth() { Type = TableWidthUnitValues.Dxa, Width = "2400" }));  
  
                // Write some text in the cell.  
                tableCell1.Append(new Paragraph(new Run(new Text("Some cell text."))));  
  
                // Append the cell to the row.  
                tableRow.Append(tableCell1);  
  
                // Create a second table cell by copying the OuterXml value of the first table cell.  
                TableCell tableCell2 = new TableCell(tableCell1.OuterXml);  
  
                // Append the cell to the row.  
                tableRow.Append(tableCell2);  
  
                // Append the table row to the table.  
                table.Append(tableRow);  
  
                // Append the table to the document.  
                document.MainDocumentPart.Document.Body.Append(table);  
            }  
        }  
    }  
}  
  
```  
  
```vb  
Imports DocumentFormat.OpenXml  
Imports DocumentFormat.OpenXml.Packaging  
Imports DocumentFormat.OpenXml.Wordprocessing  
  
Module Module1  
    ' Insert a table into an existing word processing document.  
    Sub Main(ByVal args As String())  
        Dim fileName As String = "C:\users\public\documents\TableCellPropertiesEx.docx"  
        Using document As WordprocessingDocument = WordprocessingDocument.Open(fileName, True)  
            ' Create an empty table.  
            Dim table As New Table()  
  
            ' Create a TableProperties object and specify its border information.  
            Dim tblProp As New TableProperties(New TableBorders(New TopBorder() With { _  
             .Val = New EnumValue(Of BorderValues)(BorderValues.Sawtooth), _  
             .Size = 24 _  
            }, New BottomBorder() With { _  
             .Val = New EnumValue(Of BorderValues)(BorderValues.Sawtooth), _  
             .Size = 24 _  
            }, New LeftBorder() With { _  
             .Val = New EnumValue(Of BorderValues)(BorderValues.Sawtooth), _  
             .Size = 24 _  
            }, New RightBorder() With { _  
             .Val = New EnumValue(Of BorderValues)(BorderValues.Sawtooth), _  
             .Size = 24 _  
            }, New InsideHorizontalBorder() With { _  
             .Val = New EnumValue(Of BorderValues)(BorderValues.Sawtooth), _  
             .Size = 24 _  
            }, New InsideVerticalBorder() With { _  
             .Val = New EnumValue(Of BorderValues)(BorderValues.Sawtooth), _  
             .Size = 24 _  
            }))  
  
            ' Append the TableProperties object to the empty table.  
            table.AppendChild(Of TableProperties)(tblProp)  
  
            ' Create a row and a cell.  
            Dim tableRow As New TableRow()  
            Dim tableCell1 As New TableCell()  
  
            ' Specify the width property of the table cell.  
            tableCell1.Append(New TableCellProperties(New TableCellWidth() With { _  
             .Type = TableWidthUnitValues.Dxa, _  
             .Width = "2400" _  
            }))  
  
            ' Write some text in the cell.  
            tableCell1.Append(New Paragraph(New Run(New Text("Some cell text."))))  
  
            ' Append the cell to the row.  
            tableRow.Append(tableCell1)  
  
            ' Create a second table cell by copying the OuterXml value of the first table cell.  
            Dim tableCell2 As New TableCell(tableCell1.OuterXml)  
  
            ' Append the cell to the row.  
            tableRow.Append(tableCell2)  
  
            ' Append the table row to the table.  
            table.Append(tableRow)  
  
            ' Append the table to the document.  
            document.MainDocumentPart.Document.Body.Append(table)  
        End Using  
    End Sub  
End Module  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableCellProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the TableCellProperties class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableCellProperties (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Wordprocessing.TableCellProperties : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Wordprocessing.TableCellProperties" Usage="new DocumentFormat.OpenXml.Wordprocessing.TableCellProperties childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the TableCellProperties class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableCellProperties (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Wordprocessing.TableCellProperties : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Wordprocessing.TableCellProperties" Usage="new DocumentFormat.OpenXml.Wordprocessing.TableCellProperties childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the TableCellProperties class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableCellProperties (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Wordprocessing.TableCellProperties : string -&gt; DocumentFormat.OpenXml.Wordprocessing.TableCellProperties" Usage="new DocumentFormat.OpenXml.Wordprocessing.TableCellProperties outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the TableCellProperties class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="tableCellProperties.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalFormatStyle">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.ConditionalFormatStyle ConditionalFormatStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.ConditionalFormatStyle ConditionalFormatStyle" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.ConditionalFormatStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ConditionalFormatStyle As ConditionalFormatStyle" />
      <MemberSignature Language="F#" Value="member this.ConditionalFormatStyle : DocumentFormat.OpenXml.Wordprocessing.ConditionalFormatStyle with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.ConditionalFormatStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.ConditionalFormatStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ConditionalFormatStyle. Represents the following element tag in the schema: w:cnfStyle</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="GridSpan">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.GridSpan GridSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.GridSpan GridSpan" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.GridSpan" />
      <MemberSignature Language="VB.NET" Value="Public Property GridSpan As GridSpan" />
      <MemberSignature Language="F#" Value="member this.GridSpan : DocumentFormat.OpenXml.Wordprocessing.GridSpan with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.GridSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.GridSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>GridSpan. Represents the following element tag in the schema: w:gridSpan</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="HideMark">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.HideMark HideMark { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.HideMark HideMark" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.HideMark" />
      <MemberSignature Language="VB.NET" Value="Public Property HideMark As HideMark" />
      <MemberSignature Language="F#" Value="member this.HideMark : DocumentFormat.OpenXml.Wordprocessing.HideMark with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.HideMark" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.HideMark</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HideMark. Represents the following element tag in the schema: w:hideMark</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="HorizontalMerge">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.HorizontalMerge HorizontalMerge { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.HorizontalMerge HorizontalMerge" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.HorizontalMerge" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalMerge As HorizontalMerge" />
      <MemberSignature Language="F#" Value="member this.HorizontalMerge : DocumentFormat.OpenXml.Wordprocessing.HorizontalMerge with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.HorizontalMerge" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.HorizontalMerge</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HorizontalMerge. Represents the following element tag in the schema: w:hMerge</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoWrap">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.NoWrap NoWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.NoWrap NoWrap" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.NoWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property NoWrap As NoWrap" />
      <MemberSignature Language="F#" Value="member this.NoWrap : DocumentFormat.OpenXml.Wordprocessing.NoWrap with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.NoWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.NoWrap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>NoWrap. Represents the following element tag in the schema: w:noWrap</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="Shading">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.Shading Shading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.Shading Shading" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.Shading" />
      <MemberSignature Language="VB.NET" Value="Public Property Shading As Shading" />
      <MemberSignature Language="F#" Value="member this.Shading : DocumentFormat.OpenXml.Wordprocessing.Shading with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.Shading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.Shading</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Shading. Represents the following element tag in the schema: w:shd</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="TableCellBorders">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.TableCellBorders TableCellBorders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.TableCellBorders TableCellBorders" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.TableCellBorders" />
      <MemberSignature Language="VB.NET" Value="Public Property TableCellBorders As TableCellBorders" />
      <MemberSignature Language="F#" Value="member this.TableCellBorders : DocumentFormat.OpenXml.Wordprocessing.TableCellBorders with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.TableCellBorders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.TableCellBorders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>TableCellBorders. Represents the following element tag in the schema: w:tcBorders</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="TableCellFitText">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.TableCellFitText TableCellFitText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.TableCellFitText TableCellFitText" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.TableCellFitText" />
      <MemberSignature Language="VB.NET" Value="Public Property TableCellFitText As TableCellFitText" />
      <MemberSignature Language="F#" Value="member this.TableCellFitText : DocumentFormat.OpenXml.Wordprocessing.TableCellFitText with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.TableCellFitText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.TableCellFitText</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>TableCellFitText. Represents the following element tag in the schema: w:tcFitText</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="TableCellMargin">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.TableCellMargin TableCellMargin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.TableCellMargin TableCellMargin" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.TableCellMargin" />
      <MemberSignature Language="VB.NET" Value="Public Property TableCellMargin As TableCellMargin" />
      <MemberSignature Language="F#" Value="member this.TableCellMargin : DocumentFormat.OpenXml.Wordprocessing.TableCellMargin with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.TableCellMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.TableCellMargin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>TableCellMargin. Represents the following element tag in the schema: w:tcMar</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="TableCellVerticalAlignment">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.TableCellVerticalAlignment TableCellVerticalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.TableCellVerticalAlignment TableCellVerticalAlignment" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.TableCellVerticalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TableCellVerticalAlignment As TableCellVerticalAlignment" />
      <MemberSignature Language="F#" Value="member this.TableCellVerticalAlignment : DocumentFormat.OpenXml.Wordprocessing.TableCellVerticalAlignment with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.TableCellVerticalAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.TableCellVerticalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>TableCellVerticalAlignment. Represents the following element tag in the schema: w:vAlign</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="TableCellWidth">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.TableCellWidth TableCellWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.TableCellWidth TableCellWidth" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.TableCellWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property TableCellWidth As TableCellWidth" />
      <MemberSignature Language="F#" Value="member this.TableCellWidth : DocumentFormat.OpenXml.Wordprocessing.TableCellWidth with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.TableCellWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.TableCellWidth</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>TableCellWidth. Represents the following element tag in the schema: w:tcW</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="TextDirection">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.TextDirection TextDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.TextDirection TextDirection" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.TextDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property TextDirection As TextDirection" />
      <MemberSignature Language="F#" Value="member this.TextDirection : DocumentFormat.OpenXml.Wordprocessing.TextDirection with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.TextDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.TextDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>TextDirection. Represents the following element tag in the schema: w:textDirection</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="VerticalMerge">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.VerticalMerge VerticalMerge { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.VerticalMerge VerticalMerge" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.VerticalMerge" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalMerge As VerticalMerge" />
      <MemberSignature Language="F#" Value="member this.VerticalMerge : DocumentFormat.OpenXml.Wordprocessing.VerticalMerge with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.TableCellProperties.VerticalMerge" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.VerticalMerge</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>VerticalMerge. Represents the following element tag in the schema: w:vMerge</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
  </Members>
</Type>