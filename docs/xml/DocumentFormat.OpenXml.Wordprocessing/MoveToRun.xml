<Type Name="MoveToRun" FullName="DocumentFormat.OpenXml.Wordprocessing.MoveToRun">
  <TypeSignature Language="C#" Value="public class MoveToRun : DocumentFormat.OpenXml.Wordprocessing.RunTrackChangeType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MoveToRun extends DocumentFormat.OpenXml.Wordprocessing.RunTrackChangeType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Wordprocessing.MoveToRun" />
  <TypeSignature Language="VB.NET" Value="Public Class MoveToRun&#xA;Inherits RunTrackChangeType" />
  <TypeSignature Language="F#" Value="type MoveToRun = class&#xA;    inherit RunTrackChangeType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Wordprocessing.RunTrackChangeType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Move Destination Run Content. When the object is serialized out as xml, its qualified name is w:moveTo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 `moveTo (Move Destination Run Content)`  
  
 This element specifies that the inline-level content contained within it shall be treated as content which has been moved to this location and tracked as a revision.  
  
 The following restrictions shall be applied to this content:  
  
-   If this element occurs outside of a move destination container (§17.13.5.28; §17.13.5.27) for which a matching move source container (§17.13.5.24; §17.13.5.23) exists in the document, then the document is non-conformant.  
  
 [*Example*: Consider a WordprocessingML document in which the first paragraph contains two sentences, and the first sentence is moved before the second sentence, and this move is tracked as a revision, as follows (in this image, green underline indicates the move destination and the green strikethrough indicates the move source location):  
  
 2185a6d4-02b0-432d-9862-e6ac3dbb0fda  
  
 This document has the sentence *Some moved text.* moved to the first sentence in the document. This revision is represented using the following WordprocessingML:  
  
```xml  
<w:p>  
  <w:moveToRangeStart w:id="0" … w:name="move1" />  
  <w:moveTo w:id="1" … >  
    <w:r>  
      <w:t>Some moved text.</w:t>  
    </w:r>  
  </w:moveTo>  
  <w:moveToRangeEnd w:id="0" />  
  <w:r>  
    <w:t xml:space="preserve">Some text.</w:t>  
  </w:r>  
  <w:moveFromRangeStart w:id="2" … w:name="move1" />  
  <w:moveFrom w:id="3" … >  
    <w:r>  
      <w:t>Some moved text.</w:t>  
    </w:r>  
  </w:moveFrom>  
  <w:moveFromRangeEnd w:id="2" />  
</w:p>  
```  
  
 The moveTo element specifies that all of the inline-level content contained within must be revision marked as content which was moved to its current location in the document. Because this moved content is contained within a complete move destination container (moveToRangeStart and moveToRangeEnd) with a corresponding move source, this content is tracked as a move. *end example*]  
  
|Parent Elements|  
|---------------------|  
|bdo (§17.3.2.3); body (§17.2.2); comment (§17.13.4.2); customXml (§17.5.1.6); customXml (§17.5.1.4); customXml (§17.5.1.5); customXml (§17.5.1.3); deg (§22.1.2.26); del (§17.13.5.14); den (§22.1.2.28); dir (§17.3.2.8); docPartBody (§17.12.6); e (§22.1.2.32); endnote (§17.11.2); fldSimple (§17.16.19); fName (§22.1.2.37); footnote (§17.11.10); ftr (§17.10.3); hdr (§17.10.4); hyperlink (§17.16.22); ins (§17.13.5.18); lim (§22.1.2.52); moveFrom (§17.13.5.22); moveTo (§17.13.5.25); num (§22.1.2.75); oMath (§22.1.2.77); p (§17.3.1.22); rt (§17.3.3.24); rubyBase (§17.3.3.27); sdtContent (§17.5.2.34); sdtContent (§17.5.2.33); sdtContent (§17.5.2.35); sdtContent (§17.5.2.36); smartTag (§17.5.1.9); sub (§22.1.2.112); sup (§22.1.2.114); tbl (§17.4.38); tc (§17.4.66); tr (§17.4.79)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|acc (Accent)|§22.1.2.1|  
|bar (Bar)|§22.1.2.7|  
|bdo (Bidirectional Override)|§17.3.2.3|  
|bookmarkEnd (Bookmark End)|§17.13.6.1|  
|bookmarkStart (Bookmark Start)|§17.13.6.2|  
|borderBox (Border-Box Object)|§22.1.2.11|  
|box (Box Object)|§22.1.2.13|  
|commentRangeEnd (Comment Anchor Range End)|§17.13.4.3|  
|commentRangeStart (Comment Anchor Range Start)|§17.13.4.4|  
|customXml (Inline-Level Custom XML Element)|§17.5.1.3|  
|customXmlDelRangeEnd (Custom XML Markup Deletion End)|§17.13.5.4|  
|customXmlDelRangeStart (Custom XML Markup Deletion Start)|§17.13.5.5|  
|customXmlInsRangeEnd (Custom XML Markup Insertion End)|§17.13.5.6|  
|customXmlInsRangeStart (Custom XML Markup Insertion Start)|§17.13.5.7|  
|customXmlMoveFromRangeEnd (Custom XML Markup Move Source End)|§17.13.5.8|  
|customXmlMoveFromRangeStart (Custom XML Markup Move Source Start)|§17.13.5.9|  
|customXmlMoveToRangeEnd (Custom XML Markup Move Destination Location End)|§17.13.5.10|  
|customXmlMoveToRangeStart (Custom XML Markup Move Destination Location Start)|§17.13.5.11|  
|d (Delimiter Object)|§22.1.2.24|  
|del (Deleted Run Content)|§17.13.5.14|  
|dir (Bidirectional Embedding Level)|§17.3.2.8|  
|eqArr (Array Object)|§22.1.2.34|  
|f (Fraction Object)|§22.1.2.36|  
|func (Function Apply Object)|§22.1.2.39|  
|groupChr (Group-Character Object)|§22.1.2.41|  
|ins (Inserted Run Content)|§17.13.5.18|  
|limLow (Lower-Limit Object)|§22.1.2.54|  
|limUpp (Upper-Limit Object)|§22.1.2.56|  
|m (Matrix Object)|§22.1.2.60|  
|moveFrom (Move Source Run Content)|§17.13.5.22|  
|moveFromRangeEnd (Move Source Location Container - End)|§17.13.5.23|  
|moveFromRangeStart (Move Source Location Container - Start)|§17.13.5.24|  
|moveTo (Move Destination Run Content)|§17.13.5.25|  
|moveToRangeEnd (Move Destination Location Container - End)|§17.13.5.27|  
|moveToRangeStart (Move Destination Location Container - Start)|§17.13.5.28|  
|nary (n-ary Operator Object)|§22.1.2.70|  
|oMath (Office Math)|§22.1.2.77|  
|oMathPara (Office Math Paragraph)|§22.1.2.78|  
|permEnd (Range Permission End)|§17.13.7.1|  
|permStart (Range Permission Start)|§17.13.7.2|  
|phant (Phantom Object)|§22.1.2.81|  
|proofErr (Proofing Error Anchor)|§17.13.8.1|  
|r (Run)|§22.1.2.87|  
|r (Text Run)|§17.3.2.25|  
|rad (Radical Object)|§22.1.2.88|  
|sdt (Inline-Level Structured Document Tag)|§17.5.2.31|  
|smartTag (Inline-Level Smart Tag)|§17.5.1.9|  
|sPre (Pre-Sub-Superscript Object)|§22.1.2.99|  
|sSub (Subscript Object)|§22.1.2.101|  
|sSubSup (Sub-Superscript Object)|§22.1.2.103|  
|sSup (Superscript Object)|§22.1.2.105|  
  
  [*Note*: The W3C XML Schema definition of this element’s content model (CT_RunTrackChange) is located in §A.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MoveToRun ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.MoveToRun.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the MoveToRun class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MoveToRun (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.MoveToRun.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Wordprocessing.MoveToRun : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Wordprocessing.MoveToRun" Usage="new DocumentFormat.OpenXml.Wordprocessing.MoveToRun childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the MoveToRun class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MoveToRun (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.MoveToRun.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Wordprocessing.MoveToRun : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Wordprocessing.MoveToRun" Usage="new DocumentFormat.OpenXml.Wordprocessing.MoveToRun childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the MoveToRun class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MoveToRun (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.MoveToRun.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Wordprocessing.MoveToRun : string -&gt; DocumentFormat.OpenXml.Wordprocessing.MoveToRun" Usage="new DocumentFormat.OpenXml.Wordprocessing.MoveToRun outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the MoveToRun class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.MoveToRun.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="moveToRun.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.MoveToRun.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Wordprocessing.MoveToRun.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>