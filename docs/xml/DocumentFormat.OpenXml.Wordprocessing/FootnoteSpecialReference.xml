<Type Name="FootnoteSpecialReference" FullName="DocumentFormat.OpenXml.Wordprocessing.FootnoteSpecialReference">
  <TypeSignature Language="C#" Value="public class FootnoteSpecialReference : DocumentFormat.OpenXml.Wordprocessing.FootnoteEndnoteSeparatorReferenceType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FootnoteSpecialReference extends DocumentFormat.OpenXml.Wordprocessing.FootnoteEndnoteSeparatorReferenceType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Wordprocessing.FootnoteSpecialReference" />
  <TypeSignature Language="VB.NET" Value="Public Class FootnoteSpecialReference&#xA;Inherits FootnoteEndnoteSeparatorReferenceType" />
  <TypeSignature Language="F#" Value="type FootnoteSpecialReference = class&#xA;    inherit FootnoteEndnoteSeparatorReferenceType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Wordprocessing.FootnoteEndnoteSeparatorReferenceType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Special Footnote List. When the object is serialized out as xml, its qualified name is w:footnote.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **footnote (Special Footnote List)**  
  
 This element specifies the ID for all footnotes which are located in the current document that are not of style *normal*. Each other type of footnote shall be referenced in this list, or it shall not be loaded. This means that if a special footnote is not listed beneath this element, and it is required by the document content, then the document shall be considered non-conformant.  
  
 [*Example*: Consider a document that has three footnotes represented by the following WordprocessingML:  
  
```xml  
<w:footnotes>  
  <w:footnote w:type="separator" w:id="0">  
    …  
  </w:  
footnote>  
  <w:footnote w:type="continuationSeparator" w:id="1">  
    …  
  </w:  
footnote >  
  <w:footnote w:id="2">  
    …  
  </w:  
footnote>  
</w:  
footnotes>  
```  
  
 Each of the footnotes which are not of style *normal* must be specified in the footnotePr element, as follows:  
  
```xml  
<w:footnotePr>  
  <w:footnote w:id="0" />  
  <w:footnote w:id="1" />  
</w:  
footnotePr>  
```  
  
 This indicates to the consumer that the footnotes with an id attribute value of *0* and *1* are special footnotes, and should be treated accordingly. *end example*]  
  
|Parent Elements|  
|---------------------|  
|footnotePr (§17.11.12)|  
  
  [*Note*: The W3C XML Schema definition of this element’s content model (CT_FtnEdnSepRef) is located in §A.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FootnoteSpecialReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.FootnoteSpecialReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the FootnoteSpecialReference class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.FootnoteSpecialReference.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="footnoteSpecialReference.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.FootnoteSpecialReference.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Wordprocessing.FootnoteSpecialReference.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>