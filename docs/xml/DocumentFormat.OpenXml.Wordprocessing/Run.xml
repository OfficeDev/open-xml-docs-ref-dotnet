<Type Name="Run" FullName="DocumentFormat.OpenXml.Wordprocessing.Run">
  <TypeSignature Language="C#" Value="public class Run : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Run extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Wordprocessing.Run" />
  <TypeSignature Language="VB.NET" Value="Public Class Run&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type Run = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.RunProperties))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.Break))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.Text))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.DeletedText))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.FieldCode))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.DeletedFieldCode))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.NoBreakHyphen))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.SoftHyphen))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.DayShort))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.MonthShort))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.YearShort))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.DayLong))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.MonthLong))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.YearLong))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.AnnotationReferenceMark))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.FootnoteReferenceMark))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.EndnoteReferenceMark))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.SeparatorMark))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.ContinuationSeparatorMark))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.SymbolChar))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.PageNumber))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.CarriageReturn))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.TabChar))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.EmbeddedObject))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.Picture))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.FieldChar))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.Ruby))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.FootnoteReference))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.EndnoteReference))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.CommentReference))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.Drawing))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.PositionalTab))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.LastRenderedPageBreak))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Phonetic Guide Text Run. When the object is serialized out as xml, its qualified name is w:r.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **r (Text Run)**  
  
 This element specifies a run of content in the parent field, hyperlink, custom XML element, structured document tag, smart tag, or paragraph.  
  
 The contents of a run in a WordprocessingML document shall consist of any combination of run content.  
  
 [*Example*: Consider a basic WordprocessingML paragraph with a pair of runs. This run would be expressed as follows:  
  
```xml  
<w:document>  
  <w:body>  
    <w:p>  
      <w:r>  
        <w:t>Text</w:t>  
      </w:r>  
      <w:fldSimple w:instr="AUTHOR">  
        <w:r>  
          <w:t>Author Name</w:t>  
        </w:r>  
      </w:fldSimple>  
    </w:p>  
  </w:body>  
</w:document>  
```  
  
 The r element is the container for all of the content in the run, which in this example includes both a run in the paragraph and a run within a simple field. *end example*]  
  
|Parent Elements|  
|---------------------|  
|bdo (§17.3.2.3); customXml (§17.5.1.3); del (§17.13.5.14); dir (§17.3.2.8); fldSimple (§17.16.19); hyperlink (§17.16.22); ins (§17.13.5.18); moveFrom (§17.13.5.22); moveTo (§17.13.5.25); p (§17.3.1.22); rt (§17.3.3.24); rubyBase (§17.3.3.27); sdtContent (§17.5.2.36); smartTag (§17.5.1.9)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|annotationRef (Comment Information Block)|§17.13.4.1|  
|br (Break)|§17.3.3.1|  
|commentReference (Comment Content Reference Mark)|§17.13.4.5|  
|contentPart (Content Part)|§17.3.3.2|  
|continuationSeparator (Continuation Separator Mark)|§17.11.1|  
|cr (Carriage Return)|§17.3.3.4|  
|dayLong (Date Block - Long Day Format)|§17.3.3.5|  
|dayShort (Date Block - Short Day Format)|§17.3.3.6|  
|delInstrText (Deleted Field Code)|§17.16.13|  
|delText (Deleted Text)|§17.3.3.7|  
|drawing (DrawingML Object)|§17.3.3.9|  
|endnoteRef (Endnote Reference Mark)|§17.11.6|  
|endnoteReference (Endnote Reference)|§17.11.7|  
|fldChar (Complex Field Character)|§17.16.18|  
|footnoteRef (Footnote Reference Mark)|§17.11.13|  
|footnoteReference (Footnote Reference)|§17.11.14|  
|instrText (Field Code)|§17.16.23|  
|lastRenderedPageBreak (Position of Last Calculated Page Break)|§17.3.3.13|  
|monthLong (Date Block - Long Month Format)|§17.3.3.15|  
|monthShort (Date Block - Short Month Format)|§17.3.3.16|  
|noBreakHyphen (Non Breaking Hyphen Character)|§17.3.3.18|  
|object (Embedded Object)|§17.3.3.19|  
|pgNum (Page Number Block)|§17.3.3.22|  
|ptab (Absolute Position Tab Character)|§17.3.3.23|  
|rPr (Run Properties)|§17.3.2.28|  
|ruby (Phonetic Guide)|§17.3.3.25|  
|separator (Footnote/Endnote Separator Mark)|§17.11.23|  
|softHyphen (Optional Hyphen Character)|§17.3.3.29|  
|sym (Symbol Character)|§17.3.3.30|  
|t (Text)|§17.3.3.31|  
|tab (Tab Character)|§17.3.3.32|  
|yearLong (Date Block - Long Year Format)|§17.3.3.33|  
|yearShort (Date Block - Short Year Format)|§17.3.3.34|  
  
|Attributes|Description|  
|----------------|-----------------|  
|rsidDel (Revision Identifier for Run Deletion)|Specifies a unique identifier used to track the editing session when the run was deleted from the main document.<br /><br /> All rsid* attributes throughout this document with the same value, if present, shall indicate that those regions were modified during the same editing session (time between subsequent save actions).<br /><br /> A producer can choose to increment the revision save ID value to indicate subsequent editing sessions to indicate the order of the modifications relative to other modifications in this document.<br /><br /> The possible values for this attribute are defined by the *ST_LongHexNumber* simple type (§17.18.50).|  
|rsidR (Revision Identifier for Run)|Specifies a unique identifier used to track the editing session when the run was added to the main document.<br /><br /> All rsid* attributes throughout this document with the same value, if present, shall indicate that those regions were modified during the same editing session (time between subsequent save actions).<br /><br /> A producer can choose to increment the revision save ID value to indicate subsequent editing sessions to indicate the order of the modifications relative to other modifications in this document.<br /><br /> The possible values for this attribute are defined by the *ST_LongHexNumber* simple type (§17.18.50).|  
|rsidRPr (Revision Identifier for Run Properties)|Specifies a unique identifier used to track the editing session when the run properties were last modified in the main document.<br /><br /> All rsid* attributes throughout this document with the same value, if present, shall indicate that those regions were modified during the same editing session (time between subsequent save actions).<br /><br /> A producer can choose to increment the revision save ID value to indicate subsequent editing sessions to indicate the order of the modifications relative to other modifications in this document.<br /><br /> The possible values for this attribute are defined by the *ST_LongHexNumber* simple type (§17.18.50).|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_R) is located in §A.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
   
  
## Examples  
 The following example creates a word processing document and writes the text, “Hello, World!” into it.  
  
```csharp  
using System;  
using DocumentFormat.OpenXml;  
using DocumentFormat.OpenXml.Packaging;          
using DocumentFormat.OpenXml.Wordprocessing;  
  
namespace RunEx  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            // Create a document by path, and write some text in it.  
            string fileName = @"C:\Users\Public\Documents\RunEx.docx";  
            string txt = "Hello, world!";  
  
            // Create the Word document.   
            WordprocessingDocument wordprocessingDocument =  
                WordprocessingDocument.Create(fileName,   
                    WordprocessingDocumentType.Document);  
  
            // Create a MainDocumentPart instance.  
            MainDocumentPart mainDocumentPart =   
                wordprocessingDocument.AddMainDocumentPart();  
            mainDocumentPart.Document = new Document();  
  
            // Create a Document instance.  
            Document document = mainDocumentPart.Document;  
  
            // Create a Body instance.  
            Body body = document.AppendChild(new Body());  
  
            // Create a Paragraph instance.  
            Paragraph para = body.AppendChild(new Paragraph());  
  
            // Create a Run instance.  
            Run run = para.AppendChild(new Run());  
  
            // Add Text to the Run element.  
            run.AppendChild(new Text(txt));  
  
            // Close the document handle  
            wordprocessingDocument.Close();  
  
            Console.WriteLine("The document has been created. Press any key.");  
            Console.ReadKey();  
        }  
    }     
}  
  
```  
  
```vb  
Imports DocumentFormat.OpenXml  
Imports DocumentFormat.OpenXml.Packaging  
Imports DocumentFormat.OpenXml.Wordprocessing  
  
Module Module1  
    Sub Main(ByVal args As String())  
        ' Create a document by path, and write some text in it.  
        Dim fileName As String = "C:\Users\Public\Documents\RunEx.docx"  
        Dim txt As String = "Hello, world!"  
  
        ' Create the Word document.   
        Dim wordprocessingDocument As WordprocessingDocument = _  
            wordprocessingDocument.Create(fileName, WordprocessingDocumentType.Document)  
  
        ' Create a MainDocumentPart instance.  
        Dim mainDocumentPart As MainDocumentPart = _  
        wordprocessingDocument.AddMainDocumentPart()  
        mainDocumentPart.Document = New Document()  
  
        ' Create a Document instance.  
        Dim document As Document = mainDocumentPart.Document  
  
        ' Create a Body instance.  
        Dim body As Body = document.AppendChild(New Body())  
  
        ' Create a Paragraph instance.  
        Dim para As Paragraph = body.AppendChild(New Paragraph())  
  
        ' Create a Run instance.  
        Dim run As Run = para.AppendChild(New Run())  
  
        ' Add Text to the Run element.  
        run.AppendChild(New Text(txt))  
  
        ' Close the document handle  
        wordprocessingDocument.Close()  
  
        Console.WriteLine("The document has been created. Press any key.")  
        Console.ReadKey()  
    End Sub  
End Module  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.Run.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the Run class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Run (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.Run.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Wordprocessing.Run : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Wordprocessing.Run" Usage="new DocumentFormat.OpenXml.Wordprocessing.Run childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the Run class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Run (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.Run.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Wordprocessing.Run : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Wordprocessing.Run" Usage="new DocumentFormat.OpenXml.Wordprocessing.Run childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the Run class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Run (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.Run.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Wordprocessing.Run : string -&gt; DocumentFormat.OpenXml.Wordprocessing.Run" Usage="new DocumentFormat.OpenXml.Wordprocessing.Run outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the Run class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.Run.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="run.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.Run.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Wordprocessing.Run.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RsidRunAddition">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.HexBinaryValue RsidRunAddition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.HexBinaryValue RsidRunAddition" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.Run.RsidRunAddition" />
      <MemberSignature Language="VB.NET" Value="Public Property RsidRunAddition As HexBinaryValue" />
      <MemberSignature Language="F#" Value="member this.RsidRunAddition : DocumentFormat.OpenXml.HexBinaryValue with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.Run.RsidRunAddition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(23, "rsidR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.HexBinaryValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Revision Identifier for Run.Represents the following attribute in the schema: w:rsidR</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>To be added.</remarks>
        <remark> xmlns:w=http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="RsidRunDeletion">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.HexBinaryValue RsidRunDeletion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.HexBinaryValue RsidRunDeletion" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.Run.RsidRunDeletion" />
      <MemberSignature Language="VB.NET" Value="Public Property RsidRunDeletion As HexBinaryValue" />
      <MemberSignature Language="F#" Value="member this.RsidRunDeletion : DocumentFormat.OpenXml.HexBinaryValue with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.Run.RsidRunDeletion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(23, "rsidDel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.HexBinaryValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Revision Identifier for Run Deletion.Represents the following attribute in the schema: w:rsidDel</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>To be added.</remarks>
        <remark> xmlns:w=http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="RsidRunProperties">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.HexBinaryValue RsidRunProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.HexBinaryValue RsidRunProperties" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.Run.RsidRunProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property RsidRunProperties As HexBinaryValue" />
      <MemberSignature Language="F#" Value="member this.RsidRunProperties : DocumentFormat.OpenXml.HexBinaryValue with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.Run.RsidRunProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(23, "rsidRPr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.HexBinaryValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Revision Identifier for Run Properties.Represents the following attribute in the schema: w:rsidRPr</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>To be added.</remarks>
        <remark> xmlns:w=http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="RunProperties">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.RunProperties RunProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.RunProperties RunProperties" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.Run.RunProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property RunProperties As RunProperties" />
      <MemberSignature Language="F#" Value="member this.RunProperties : DocumentFormat.OpenXml.Wordprocessing.RunProperties with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.Run.RunProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.RunProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Run Properties. Represents the following element tag in the schema: w:rPr</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
  </Members>
</Type>