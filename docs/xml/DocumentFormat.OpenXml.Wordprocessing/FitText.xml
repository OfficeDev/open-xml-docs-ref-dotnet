<Type Name="FitText" FullName="DocumentFormat.OpenXml.Wordprocessing.FitText">
  <TypeSignature Language="C#" Value="public class FitText : DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FitText extends DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Wordprocessing.FitText" />
  <TypeSignature Language="VB.NET" Value="Public Class FitText&#xA;Inherits OpenXmlLeafElement" />
  <TypeSignature Language="F#" Value="type FitText = class&#xA;    inherit OpenXmlLeafElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlLeafElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the FitText Class. When the object is serialized out as xml, its qualified name is w:fitText.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **fitText (Manual Run Width)**  
  
 This element specifies that the contents of this run shall not be automatically displayed based on the width of its contents, rather its contents shall be resized to fit the width specified by the val attribute. This expansion/contraction shall be performed by equally increasing/decreasing the size of each character in this run's contents when displayed.  
  
 If this element is omitted, then the contents of this run shall be displayed based on the size of its contents.  
  
 [*Example*: Consider a document with a run which must be displayed in exactly one-half inch of space, regardless of its contents. This constraint would be specified using the following WordprocessingML:  
  
```xml  
<w:r>  
  <w:rPr>  
    <w:fitText w:id="50" w:val="720" />  
  </w:rPr>  
  <w:t>This text must be displayed in one-half of an inch.</w:t>  
</w:r>  
```  
  
 The resulting run contents must be displayed in exactly *720* twentieths of a point (one half of an inch) when displayed in a document. *end example*]  
  
|Parent Elements|  
|---------------------|  
|rPr (§17.3.1.29); rPr (§17.3.1.30); rPr (§17.5.2.28); rPr (§17.9.25); rPr (§17.7.9.1); rPr (§17.7.5.4); rPr (§17.3.2.28); rPr (§17.5.2.27); rPr (§17.7.6.2); rPr (§17.3.2.27)|  
  
  [*Note*: The W3C XML Schema definition of this element’s content model (CT_FitText) is located in §A.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FitText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.FitText.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the FitText class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.FitText.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="fitText.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Int32Value Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Int32Value Id" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.FitText.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As Int32Value" />
      <MemberSignature Language="F#" Value="member this.Id : DocumentFormat.OpenXml.Int32Value with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.FitText.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(23, "id")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Int32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Fit Text Run ID.Represents the following attribute in the schema: w:id</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Int32Value" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 Specifies a unique ID which shall be used to link multiple contiguous runs containing `fitText` elements to each other to ensure that their contents are correctly merged into the specified width in the document.  
  
 This means that multiple runs which are broken apart due to differences in formatting can be identified as belonging to the same grouping in terms of `fitText` properties, although they are multiple runs of text in the WordprocessingML.  
  
 If the runs are not contiguous, then the `id` attribute is ignored, and the runs are not linked.  
  
 If this attribute is omitted, then this run has no id and shall not be linked with any other run in the parent paragraph.  
  
 Consider the following three runs in a document, which should be fit into exactly one inch at display time:  
  
```  
<w:r>  
  <w:rPr>  
    <w:fitText w:id="99" w:val="1440" />   
  </w:rPr>  
  <w:t>fit this into</w:t>   
</w:r>  
<w:r>  
  <w:rPr>  
    <w:b/>   
    <w:fitText w:id="99" w:val="1440" />   
   </w:rPr>  
  <w:t>one</w:t>   
</w:r>  
<w:r>  
  <w:rPr>  
    <w:fitText w:id="99" w:val="1440" />   
   </w:rPr>  
  <w:t>inch</w:t>   
</w:r>  
```  
  
 Although there are three runs of content, all three regions shall be combined into a single fit text region (e.g. they all fit into one inch, rather than one inch each) based on the identical value used in the `id` attribute for all three runs.  
  
 The possible values for this attribute are defined by the `ST_DecimalNumber` simple type.  
  
 ]]></format>
        </remarks>
        <remark> xmlns:w=http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.FitText.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Wordprocessing.FitText.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Val">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.UInt32Value Val { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.UInt32Value Val" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.FitText.Val" />
      <MemberSignature Language="VB.NET" Value="Public Property Val As UInt32Value" />
      <MemberSignature Language="F#" Value="member this.Val : DocumentFormat.OpenXml.UInt32Value with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.FitText.Val" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(23, "val")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.UInt32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Value.Represents the following attribute in the schema: w:val</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.UInt64Value" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 This attribute specifies the exact width of space which this run shall be fit into when displayed in the document.  
  
 Consider a document with a run which shall be displayed in exactly one-half inch of space, regardless of its contents. This constraint would be specified using the following WordprocessingML:  
  
```  
<w:r>  
  <w:rPr>  
    <w:fitText w:id="50" w:val="720" />  
  </w:rPr>  
  <w:t>This text shall be displayed in one-half of an inch.</w:t>  
</w:r>  
```  
  
 The resulting run contents shall be displayed in exactly `720` twentieths of a point (one half of an inch) when displayed in a document.  
  
 The possible values for this attribute are defined by the `ST_TwipsMeasure` simple type.  
  
 ]]></format>
        </remarks>
        <remark> xmlns:w=http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
  </Members>
</Type>