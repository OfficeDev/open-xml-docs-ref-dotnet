<Type Name="DocPartBody" FullName="DocumentFormat.OpenXml.Wordprocessing.DocPartBody">
  <TypeSignature Language="C#" Value="public class DocPartBody : DocumentFormat.OpenXml.Wordprocessing.BodyType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DocPartBody extends DocumentFormat.OpenXml.Wordprocessing.BodyType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Wordprocessing.DocPartBody" />
  <TypeSignature Language="VB.NET" Value="Public Class DocPartBody&#xA;Inherits BodyType" />
  <TypeSignature Language="F#" Value="type DocPartBody = class&#xA;    inherit BodyType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Wordprocessing.BodyType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contents of Glossary Document Entry. When the object is serialized out as xml, its qualified name is w:docPartBody.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **docPartBody (Contents of Glossary Document Entry)**  
  
 This element specifies the contents of the parent glossary document entry (§17.12.5). These contents shall consist of one or more block-level elements, analogous to the body element (§17.2.2) of the main document story for the current document.  
  
 [*Example*: Consider the WordprocessingML fragment for a glossary document entry containing a single run, defined as follows:  
  
```xml  
<w:docPart>  
  …  <w:docPartBody>  
    <w:p>  
      <w:r>  
        <w:t>Sample entry.</w:t>  
      </w:r>  
    </w:p>  
  </w:docPartBody>  
</w:docPart>  
```  
  
 The docPartBody element specifies the block-level elements which comprise the contents of the current glossary document entry, in this case, a single paragraph using the p element (§17.3.1.22). *end example*]  
  
 When the contents of a glossary document entry are added to a document, the styles, numbering definitions, and all other related parts for this entry shall be taken from the relationships from the Glossary Document part and not from the main document part. These references shall be moved to their main document equivalents when the entry is added to the document.  
  
 When the part is inserted, it shall be inserted as though its last paragraph mark does not exist (the content of the final paragraph mark shall be merged with the contents of the paragraph into which this entry is being added).  
  
 [*Example*: Consider the WordprocessingML fragment for a glossary document entry containing a single run, defined as follows:  
  
```xml  
<w:docPart>  
  <w:docPartPr>  
    <w:behaviors>  
      <w:behavior w:val="p"/>  
    </w:behaviors>  
    …  </w:docPartPr>  
  <w:docPartBody>  
    <w:p>  
      <w:r>  
        <w:t>Sample entry.</w:t>  
      </w:r>  
    </w:p>  
  </w:docPartBody>  
</w:docPart>  
```  
  
 If this entry is inserted into document content to which is defined as follows (and the part is added between the two text runs):  
  
```xml  
<w:body>  
  <w:p>  
    <w:r>  
      <w:t>After this text</w:t>  
    </w:r>  
    <w:r>  
      <w:t>Before this text</w:t>  
    </w:r>  
  </w:p>  
</w:body>  
```  
  
 This entry has only a single paragraph, which is removed before insertion, and barring any special insertion behaviors (§17.12.2), only the text run is inserted, resulting in the following WordprocessingML:  
  
```xml  
<w:body>  
  <w:p>  
    <w:r>  
      <w:t>After this text</w:t>  
    </w:r>  
    <w:r>  
      <w:t>Sample entry.</w:t>  
    </w:r>  
    <w:r>  
      <w:t>Before this text</w:t>  
    </w:r>  
  </w:p>  
</w:body>  
```  
  
 *end example*]  
  
|Parent Elements|  
|---------------------|  
|docPart (§17.12.5)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|altChunk (Anchor for Imported External Content)|§17.17.2.1|  
|bookmarkEnd (Bookmark End)|§17.13.6.1|  
|bookmarkStart (Bookmark Start)|§17.13.6.2|  
|commentRangeEnd (Comment Anchor Range End)|§17.13.4.3|  
|commentRangeStart (Comment Anchor Range Start)|§17.13.4.4|  
|customXml (Block-Level Custom XML Element)|§17.5.1.6|  
|customXmlDelRangeEnd (Custom XML Markup Deletion End)|§17.13.5.4|  
|customXmlDelRangeStart (Custom XML Markup Deletion Start)|§17.13.5.5|  
|customXmlInsRangeEnd (Custom XML Markup Insertion End)|§17.13.5.6|  
|customXmlInsRangeStart (Custom XML Markup Insertion Start)|§17.13.5.7|  
|customXmlMoveFromRangeEnd (Custom XML Markup Move Source End)|§17.13.5.8|  
|customXmlMoveFromRangeStart (Custom XML Markup Move Source Start)|§17.13.5.9|  
|customXmlMoveToRangeEnd (Custom XML Markup Move Destination Location End)|§17.13.5.10|  
|customXmlMoveToRangeStart (Custom XML Markup Move Destination Location Start)|§17.13.5.11|  
|del (Deleted Run Content)|§17.13.5.14|  
|ins (Inserted Run Content)|§17.13.5.18|  
|moveFrom (Move Source Run Content)|§17.13.5.22|  
|moveFromRangeEnd (Move Source Location Container - End)|§17.13.5.23|  
|moveFromRangeStart (Move Source Location Container - Start)|§17.13.5.24|  
|moveTo (Move Destination Run Content)|§17.13.5.25|  
|moveToRangeEnd (Move Destination Location Container - End)|§17.13.5.27|  
|moveToRangeStart (Move Destination Location Container - Start)|§17.13.5.28|  
|oMath (Office Math)|§22.1.2.77|  
|oMathPara (Office Math Paragraph)|§22.1.2.78|  
|p (Paragraph)|§17.3.1.22|  
|permEnd (Range Permission End)|§17.13.7.1|  
|permStart (Range Permission Start)|§17.13.7.2|  
|proofErr (Proofing Error Anchor)|§17.13.8.1|  
|sdt (Block-Level Structured Document Tag)|§17.5.2.29|  
|sectPr (Document Final Section Properties)|§17.6.17|  
|tbl (Table)|§17.4.38|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_Body) is located in §A.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DocPartBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.DocPartBody.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the DocPartBody class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DocPartBody (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.DocPartBody.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Wordprocessing.DocPartBody : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Wordprocessing.DocPartBody" Usage="new DocumentFormat.OpenXml.Wordprocessing.DocPartBody childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the DocPartBody class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DocPartBody (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.DocPartBody.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Wordprocessing.DocPartBody : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Wordprocessing.DocPartBody" Usage="new DocumentFormat.OpenXml.Wordprocessing.DocPartBody childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the DocPartBody class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DocPartBody (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.DocPartBody.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Wordprocessing.DocPartBody : string -&gt; DocumentFormat.OpenXml.Wordprocessing.DocPartBody" Usage="new DocumentFormat.OpenXml.Wordprocessing.DocPartBody outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the DocPartBody class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.DocPartBody.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="docPartBody.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.DocPartBody.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Wordprocessing.DocPartBody.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>