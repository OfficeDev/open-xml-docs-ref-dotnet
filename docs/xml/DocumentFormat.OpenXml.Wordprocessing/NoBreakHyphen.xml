<Type Name="NoBreakHyphen" FullName="DocumentFormat.OpenXml.Wordprocessing.NoBreakHyphen">
  <TypeSignature Language="C#" Value="public class NoBreakHyphen : DocumentFormat.OpenXml.Wordprocessing.EmptyType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NoBreakHyphen extends DocumentFormat.OpenXml.Wordprocessing.EmptyType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Wordprocessing.NoBreakHyphen" />
  <TypeSignature Language="VB.NET" Value="Public Class NoBreakHyphen&#xA;Inherits EmptyType" />
  <TypeSignature Language="F#" Value="type NoBreakHyphen = class&#xA;    inherit EmptyType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Wordprocessing.EmptyType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Non Breaking Hyphen Character. When the object is serialized out as xml, its qualified name is w:noBreakHyphen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **noBreakHyphen (Non Breaking Hyphen Character)**  
  
 This element specifies that a non breaking hyphen character shall be placed at the current location in the run content. A *non breaking hyphen* is the equivalent of Unicode character 002D (the hyphen-minus), however it shall not be used as a line breaking character for the current line of text when displaying this WordprocessingML content.  
  
 The behavior of a non breaking hyphen in run content shall be to display using the same glyph as the hyphen-minus character, however without being a line breaking position (unlike the hyphen-minus character).  
  
 [*Example*: Consider the following sentence in a WordprocessingML document:  
  
```xml  
This makes a very very very wordy and deliberately overcomplicated sentence.  
```  
  
 Normally, just as shown above, this sentence not would be displayed on a single line as it is long enough to require line breaking (given the width of the current page). However, if a hyphen minus were inserted after the letter s in *sentence*, as follows:  
  
```xml  
<w:r>  
  <w:t>This makes a very very very wordy and deliberately overcomplicated s-entence.</w:t>  
</w:r>  
```  
  
 This would allow a break at that position, and break the word after that character:  
  
```xml  
This makes a very very very wordy and deliberately overcomplicated s-entence.  
```  
  
 If this was not desired, the non breaking hyphen character could be specified as follows:  
  
```xml  
<w:r>  
  <w:t>This makes a very very very wordy and deliberately overcomplicated s</w:t>  
  <w:nonBreakHyphen/>  
  <w:t>entence.</w:t>  
</w:r>  
```  
  
 This would display a hyphen character, but would not allow the text to break at that location:  
  
```xml  
This makes a very very very wordy and deliberately overcomplicated sentence.  
```  
  
 *end example*]  
  
|Parent Elements|  
|---------------------|  
|r (§22.1.2.87); r (§17.3.2.25)|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_Empty) is located in §A.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NoBreakHyphen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.NoBreakHyphen.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the NoBreakHyphen class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.NoBreakHyphen.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="noBreakHyphen.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.NoBreakHyphen.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Wordprocessing.NoBreakHyphen.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>