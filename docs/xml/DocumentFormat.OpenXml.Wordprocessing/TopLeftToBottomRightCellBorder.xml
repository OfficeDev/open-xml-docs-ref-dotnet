<Type Name="TopLeftToBottomRightCellBorder" FullName="DocumentFormat.OpenXml.Wordprocessing.TopLeftToBottomRightCellBorder">
  <TypeSignature Language="C#" Value="public class TopLeftToBottomRightCellBorder : DocumentFormat.OpenXml.Wordprocessing.BorderType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TopLeftToBottomRightCellBorder extends DocumentFormat.OpenXml.Wordprocessing.BorderType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Wordprocessing.TopLeftToBottomRightCellBorder" />
  <TypeSignature Language="VB.NET" Value="Public Class TopLeftToBottomRightCellBorder&#xA;Inherits BorderType" />
  <TypeSignature Language="F#" Value="type TopLeftToBottomRightCellBorder = class&#xA;    inherit BorderType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Wordprocessing.BorderType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Table Cell Top Left to Bottom Right Diagonal Border. When the object is serialized out as xml, its qualified name is w:tl2br.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **tl2br (Table Cell Top Left to Bottom Right Diagonal Border)**  
  
 This element specifies the border which shall be displayed on the top left side to bottom right diagonal within the current table cell.  
  
 If this element is omitted, then the top left to bottom right diagonal of this table cell shall not have a cell border, and its border can use the table's border settings as appropriate.  
  
 [*Example*: Consider a table in which the first cell in the first row specifies a top left to bottom right diagonal cell border as follows:  
  
 R1C1  
  
 R1C2  
  
 R2C1  
  
 R2C2  
  
 This diagonal cell border is specified using the following WordprocessingML:  
  
```xml  
<w:tc>  
  <w:tcPr>  
    …    <w:tcBorders>  
       <w:tl2br w:val="double" w:sz="4" w:space="0" w:color="FF0000"/>  
    </w:tcBorders>  
  </w:tcPr>  
  <w:p/>  
</w:tc>  
```  
  
 The tl2br element specifies a  point border of type *double* on the table cell's diagonal. *end example*]  
  
|Parent Elements|  
|---------------------|  
|tcBorders (§17.4.67)|  
  
 This element’s content model is defined by the common border properties definition in §17.3.4.  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TopLeftToBottomRightCellBorder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.TopLeftToBottomRightCellBorder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the TopLeftToBottomRightCellBorder class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.TopLeftToBottomRightCellBorder.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="topLeftToBottomRightCellBorder.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TopLeftToBottomRightCellBorder.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Wordprocessing.TopLeftToBottomRightCellBorder.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>