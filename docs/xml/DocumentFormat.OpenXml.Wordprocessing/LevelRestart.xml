<Type Name="LevelRestart" FullName="DocumentFormat.OpenXml.Wordprocessing.LevelRestart">
  <TypeSignature Language="C#" Value="public class LevelRestart : DocumentFormat.OpenXml.Wordprocessing.DecimalNumberType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LevelRestart extends DocumentFormat.OpenXml.Wordprocessing.DecimalNumberType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Wordprocessing.LevelRestart" />
  <TypeSignature Language="VB.NET" Value="Public Class LevelRestart&#xA;Inherits DecimalNumberType" />
  <TypeSignature Language="F#" Value="type LevelRestart = class&#xA;    inherit DecimalNumberType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Wordprocessing.DecimalNumberType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Restart Numbering Level Symbol. When the object is serialized out as xml, its qualified name is w:lvlRestart.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **lvlRestart (Restart Numbering Level Symbol)**  
  
 This element specifies a one-based index which determines when a numbering level should restart to its start value (§17.9.26). A numbering level restarts when an instance of the specified numbering level, which shall be higher (earlier than the this level) is used in the given document's contents.  
  
 If this element is omitted, the numbering level shall restart each time the previous numbering level is used. If the specified level is higher than the current level, then this element shall be ignored. As well, a value of *0* shall specify that this level shall never restart.  
  
 [*Example*: Consider a set of numbered paragraphs in a WordprocessingML document where numbering level with ilvl of *2* is set to never restart:  
  
```xml  
<w:lvl w:ilvl="0">  
  <w:start w:val="1" />  
  <w:lvlText w:val="%1)" />  
  <w:lvlJc w:val="left" />  
   <w:pPr>  
    <w:ind w:left="360" w:hanging="360" />  
  </w:pPr>  
   <w:rPr>  
    <w:rFonts w:hint="default" />  
  </w:rPr>  
</w:lvl>  
 <w:lvl w:ilvl="1">  
  <w:start w:val="1" />  
  <w:numFmt w:val="upperLetter" />  
  <w:lvlText w:val="%2)" />  
  <w:lvlJc w:val="left" />  
   <w:pPr>  
    <w:ind w:left="720" w:hanging="360" />  
  </w:pPr>  
   <w:rPr>  
    <w:rFonts w:hint="default" />  
  </w:rPr>  
</w:lvl>  
<w:lvl w:ilvl="2">  
  <w:start w:val="1" />  
  <w:numFmt w:val="lowerRoman" />  
  <w:lvlRestart w:val="0">  
  <w:lvlText w:val="%3)" />  
  <w:lvlJc w:val="left" />  
   <w:pPr>  
    <w:ind w:left="1080" w:hanging="360" />  
  </w:pPr>  
   <w:rPr>  
    <w:rFonts w:hint="default" />  
  </w:rPr>  
</w:lvl>  
```  
  
 Since the lvlRestart element is omitted in numbering level *1* (a,b,…), the numbering level restarts after numbering level *0* (1,2,…) is used. Numbering level two (i, ii, iii …) never restarts as lvlRestart has a val equal to 0. An example of the resulting content would be as follows:  
  
 1)Level one  
  
 a)Level two  
  
 i)Level three  
  
 ii)Level three  
  
 2)Level one  
  
 a)Level two  
  
 iii)Level three  
  
 iv)Level four  
  
 The resulting set of paragraphs has level two restarting to its start value after each level one (after *2)*, the next level two is again *a)*), but level three never restarts and continues at *iii)* even after the use of a level two and one. *end example*]  
  
|Parent Elements|  
|---------------------|  
|lvl (§17.9.6); lvl (§17.9.7)|  
  
  [*Note*: The W3C XML Schema definition of this element’s content model (CT_DecimalNumber) is located in §A.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LevelRestart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.LevelRestart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the LevelRestart class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.LevelRestart.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="levelRestart.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.LevelRestart.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Wordprocessing.LevelRestart.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>