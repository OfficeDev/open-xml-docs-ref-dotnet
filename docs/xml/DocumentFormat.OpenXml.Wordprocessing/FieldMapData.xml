<Type Name="FieldMapData" FullName="DocumentFormat.OpenXml.Wordprocessing.FieldMapData">
  <TypeSignature Language="C#" Value="public class FieldMapData : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FieldMapData extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Wordprocessing.FieldMapData" />
  <TypeSignature Language="VB.NET" Value="Public Class FieldMapData&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type FieldMapData = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.MailMergeFieldType))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.Name))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.MappedName))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.ColumnIndex))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.LanguageId))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.DynamicAddress))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>External Data Source to Merge Field Mapping. When the object is serialized out as xml, its qualified name is w:fieldMapData.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **fieldMapData (External Data Source to Merge Field Mapping)**  
  
 This element specifies how a column specified in the external data source that has been connected to a WordprocessingML document shall be mapped to the pre-defined *MERGEFIELD* fields (§17.16.5.35) within the given merged document's contents. Each instance of a fieldMapData element contains the information needed to map one column in the external data source to a single type of pre-defined *MERGEFIELD* field for the purposes of the mail merge in the current document.  
  
 [*Example*: Consider a single merged document. The WordprocessingML below demonstrates the mapping of the *Country* column from the external data source to the predefined WordprocessingML *Country or Region* merge field when the merged document is populated with external data as part of a mail merge:  
  
```xml  
<w:odso>  
  …  <w:fieldMapData>  
    <w:type w:val="dbColumn" />  
    <w:name w:val="Country" />  
    <w:mappedName w:val="Country or Region" />  
    <w:column w:val="9" />  
    …  </w:fieldMapData>  
</w:odso>  
```  
  
 The fieldMapData element specifies the mapping between the external data source and a single merge field as follows: the child elements specify that the tenth column in the data source, last titled *Country* in the specified external data source when the connection was last made is to be mapped to the predefined WordprocessingML merge field calling for *Country or Region* data.  
  
 With the fieldMapData element configured as such, an application can be used in conjunction with this WordprocessingML document to populate the document with data mapped from the specified external data source to fields within the merged document. *end example*]  
  
|Parent Elements|  
|---------------------|  
|odso (§17.14.25)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|column (Index of Column Being Mapped)|§17.14.6|  
|dynamicAddress (Use Country-Based Address Field Ordering)|§17.14.13|  
|lid (Merge Field Name Language ID)|§17.14.17|  
|mappedName (Predefined Merge Field Name)|§17.14.23|  
|name (Data Source Name for Column)|§17.14.24|  
|type (Merge Field Mapping)|§17.14.33|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_OdsoFieldMapData) is located in §A.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FieldMapData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.FieldMapData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the FieldMapData class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FieldMapData (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.FieldMapData.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Wordprocessing.FieldMapData : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Wordprocessing.FieldMapData" Usage="new DocumentFormat.OpenXml.Wordprocessing.FieldMapData childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the FieldMapData class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FieldMapData (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.FieldMapData.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Wordprocessing.FieldMapData : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Wordprocessing.FieldMapData" Usage="new DocumentFormat.OpenXml.Wordprocessing.FieldMapData childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the FieldMapData class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FieldMapData (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.FieldMapData.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Wordprocessing.FieldMapData : string -&gt; DocumentFormat.OpenXml.Wordprocessing.FieldMapData" Usage="new DocumentFormat.OpenXml.Wordprocessing.FieldMapData outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the FieldMapData class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.FieldMapData.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="fieldMapData.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnIndex">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.ColumnIndex ColumnIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.ColumnIndex ColumnIndex" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.FieldMapData.ColumnIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnIndex As ColumnIndex" />
      <MemberSignature Language="F#" Value="member this.ColumnIndex : DocumentFormat.OpenXml.Wordprocessing.ColumnIndex with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.FieldMapData.ColumnIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.ColumnIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Index of Column Being Mapped. Represents the following element tag in the schema: w:column</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Wordprocessing.ColumnIndex" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="DynamicAddress">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.DynamicAddress DynamicAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.DynamicAddress DynamicAddress" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.FieldMapData.DynamicAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicAddress As DynamicAddress" />
      <MemberSignature Language="F#" Value="member this.DynamicAddress : DocumentFormat.OpenXml.Wordprocessing.DynamicAddress with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.FieldMapData.DynamicAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.DynamicAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use Country/Region-Based Address Field Ordering. Represents the following element tag in the schema: w:dynamicAddress</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Wordprocessing.DynamicAddress" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LanguageId">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.LanguageId LanguageId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.LanguageId LanguageId" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.FieldMapData.LanguageId" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageId As LanguageId" />
      <MemberSignature Language="F#" Value="member this.LanguageId : DocumentFormat.OpenXml.Wordprocessing.LanguageId with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.FieldMapData.LanguageId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.LanguageId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Merge Field Name Language ID. Represents the following element tag in the schema: w:lid</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Wordprocessing.LanguageId" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.FieldMapData.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Wordprocessing.FieldMapData.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailMergeFieldType">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.MailMergeFieldType MailMergeFieldType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.MailMergeFieldType MailMergeFieldType" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.FieldMapData.MailMergeFieldType" />
      <MemberSignature Language="VB.NET" Value="Public Property MailMergeFieldType As MailMergeFieldType" />
      <MemberSignature Language="F#" Value="member this.MailMergeFieldType : DocumentFormat.OpenXml.Wordprocessing.MailMergeFieldType with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.FieldMapData.MailMergeFieldType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.MailMergeFieldType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Merge Field Mapping. Represents the following element tag in the schema: w:type</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Wordprocessing.MailMergeFieldType" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="MappedName">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.MappedName MappedName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.MappedName MappedName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.FieldMapData.MappedName" />
      <MemberSignature Language="VB.NET" Value="Public Property MappedName As MappedName" />
      <MemberSignature Language="F#" Value="member this.MappedName : DocumentFormat.OpenXml.Wordprocessing.MappedName with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.FieldMapData.MappedName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.MappedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Predefined Merge Field Name. Represents the following element tag in the schema: w:mappedName</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Wordprocessing.MappedName" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.Name Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.Name Name" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.FieldMapData.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As Name" />
      <MemberSignature Language="F#" Value="member this.Name : DocumentFormat.OpenXml.Wordprocessing.Name with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.FieldMapData.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.Name</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Data Source Name for Column. Represents the following element tag in the schema: w:name</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Name" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
  </Members>
</Type>