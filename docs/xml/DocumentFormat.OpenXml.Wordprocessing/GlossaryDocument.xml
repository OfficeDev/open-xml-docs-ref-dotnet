<Type Name="GlossaryDocument" FullName="DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument">
  <TypeSignature Language="C#" Value="public class GlossaryDocument : DocumentFormat.OpenXml.OpenXmlPartRootElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GlossaryDocument extends DocumentFormat.OpenXml.OpenXmlPartRootElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class GlossaryDocument&#xA;Inherits OpenXmlPartRootElement" />
  <TypeSignature Language="F#" Value="type GlossaryDocument = class&#xA;    inherit OpenXmlPartRootElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlPartRootElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.DocumentBackground))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Wordprocessing.DocParts))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Glossary Document Root Element. The root element of GlossaryDocumentPart. When the object is serialized out as xml, its qualified name is w:glossaryDocument.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **glossaryDocument (Glossary Document Root Element)**  
  
 This element specifies the root element for a glossary document part within a WordprocessingML document. A glossary document is an supplementary document story in a WordprocessingML that shall be afforded all of the relationships of the Main Document part, such as:  
  
-   Style definitions  
  
-   Numbering definitions  
  
-   Comments  
  
-   Headers/footers  
  
-   Etc.  
  
 The entries stored in this part shall have all of its implicit relationships target these parts, rather than their analogues stored off of the main document part.  
  
 [*Example*: Consider the following definition for the contents of a glossary document part within a WordprocessingML document:  
  
```xml  
<w:glossaryDocument>  
  <w:docParts>  
    <w:docPart>  
      …    </w:docPart>  
    <w:docPart>  
      …    </w:docPart>  
  </w:docParts>  
</w:glossaryDocument>  
```  
  
 The glossaryDocument element defines the contents of the glossary document part. *end example*]  
  
|Parent Elements|  
|---------------------|  
|Root element of WordprocessingML Glossary Document part|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|background (Document Background)|§17.2.1|  
|docParts (List of Glossary Document Entries)|§17.12.8|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_GlossaryDocument) is located in §A.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlossaryDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the GlossaryDocument class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlossaryDocument (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument" Usage="new DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the GlossaryDocument class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlossaryDocument (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument" Usage="new DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the GlossaryDocument class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlossaryDocument (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument : string -&gt; DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument" Usage="new DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the GlossaryDocument class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="glossaryDocument.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocParts">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.DocParts DocParts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.DocParts DocParts" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument.DocParts" />
      <MemberSignature Language="VB.NET" Value="Public Property DocParts As DocParts" />
      <MemberSignature Language="F#" Value="member this.DocParts : DocumentFormat.OpenXml.Wordprocessing.DocParts with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument.DocParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.DocParts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>List of Glossary Document Entries. Represents the following element tag in the schema: w:docParts</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Wordprocessing.DocParts" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="DocumentBackground">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Wordprocessing.DocumentBackground DocumentBackground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Wordprocessing.DocumentBackground DocumentBackground" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument.DocumentBackground" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentBackground As DocumentBackground" />
      <MemberSignature Language="F#" Value="member this.DocumentBackground : DocumentFormat.OpenXml.Wordprocessing.DocumentBackground with get, set" Usage="DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument.DocumentBackground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Wordprocessing.DocumentBackground</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Document Background. Represents the following element tag in the schema: w:background</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:w = http://schemas.openxmlformats.org/wordprocessingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="GlossaryDocumentPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart GlossaryDocumentPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart GlossaryDocumentPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument.GlossaryDocumentPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlossaryDocumentPart As GlossaryDocumentPart" />
      <MemberSignature Language="F#" Value="member this.GlossaryDocumentPart : DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart" Usage="DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument.GlossaryDocumentPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the GlossaryDocumentPart associated with this element.</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart openXmlPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart openXmlPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument.Load(DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (openXmlPart As GlossaryDocumentPart)" />
      <MemberSignature Language="F#" Value="override this.Load : DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart -&gt; unit" Usage="glossaryDocument.Load openXmlPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="openXmlPart" Type="DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart" />
      </Parameters>
      <Docs>
        <param name="openXmlPart">Specifies the part to be loaded.</param>
        <summary>Loads the DOM from the GlossaryDocumentPart.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart openXmlPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart openXmlPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.GlossaryDocument.Save(DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (openXmlPart As GlossaryDocumentPart)" />
      <MemberSignature Language="F#" Value="override this.Save : DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart -&gt; unit" Usage="glossaryDocument.Save openXmlPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="openXmlPart" Type="DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart" />
      </Parameters>
      <Docs>
        <param name="openXmlPart">Specifies the part to save to.</param>
        <summary>Saves the DOM into the GlossaryDocumentPart.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>