<Type Name="CustomXmlPlaceholder" FullName="DocumentFormat.OpenXml.Wordprocessing.CustomXmlPlaceholder">
  <TypeSignature Language="C#" Value="public class CustomXmlPlaceholder : DocumentFormat.OpenXml.Wordprocessing.StringType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CustomXmlPlaceholder extends DocumentFormat.OpenXml.Wordprocessing.StringType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Wordprocessing.CustomXmlPlaceholder" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomXmlPlaceholder&#xA;Inherits StringType" />
  <TypeSignature Language="F#" Value="type CustomXmlPlaceholder = class&#xA;    inherit StringType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Wordprocessing.StringType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Custom XML Element Placeholder Text. When the object is serialized out as xml, its qualified name is w:placeholder.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **placeholder (Custom XML Element Placeholder Text)**  
  
 This element specifies the placeholder text which shall be displayed in place of this custom XML element when the contents of this custom XML markup are empty (i.e. there are no runs of text within the current custom XML element). If this custom XML element does contain run content, then this text shall not be displayed.  
  
 The val attribute stores the string of text which shall be displayed as the placeholder text. This string can be displayed in any font face/size desired by the hosting application.  
  
 [*Example*: Consider a custom XML element with the following properties specified:  
  
```xml  
<w:customXmlPr>  
  <w:placeholder w:val="[Fill in your name]"/>  
  <w:attr w:name="status" w:val="draft"/>  
</w:customXmlPr>  
```  
  
 The placeholder element specifies that this custom XML element must display the text contents *[Fill in your name]* whenever there is no run content within the parent custom XML element. For example, if the custom XML element was specified as follows:  
  
```xml  
<w:customXml>  
  <w:customXmlPr>  
    <w:placeholder w:val="[Fill in your name]"/>  
  </w:customXmlPr>  
  <w:p/>  
</w:customXml>  
```  
  
 This custom XML element has no run content and the placeholder text would be displayed. However, if there is run content, as follows:  
  
```xml  
<w:customXml>  
  <w:customXmlPr>  
    <w:placeholder w:val="[Fill in your name]"/>  
  </w:customXmlPr>  
  <w:p>  
    <w:r>  
      <w:t>Name</w:t>  
    </w:r>  
  </w:p>  
</w:customXml>  
```  
  
 This custom XML element now contains run content, and the placeholder text must not be displayed. *end example*]  
  
|Parent Elements|  
|---------------------|  
|customXmlPr (§17.5.1.7)|  
  
  [*Note*: The W3C XML Schema definition of this element’s content model (CT_String) is located in §A.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomXmlPlaceholder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.CustomXmlPlaceholder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the CustomXmlPlaceholder class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.CustomXmlPlaceholder.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="customXmlPlaceholder.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.CustomXmlPlaceholder.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Wordprocessing.CustomXmlPlaceholder.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>