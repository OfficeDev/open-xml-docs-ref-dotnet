<Type Name="TrackRevisions" FullName="DocumentFormat.OpenXml.Wordprocessing.TrackRevisions">
  <TypeSignature Language="C#" Value="public class TrackRevisions : DocumentFormat.OpenXml.Wordprocessing.OnOffType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TrackRevisions extends DocumentFormat.OpenXml.Wordprocessing.OnOffType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Wordprocessing.TrackRevisions" />
  <TypeSignature Language="VB.NET" Value="Public Class TrackRevisions&#xA;Inherits OnOffType" />
  <TypeSignature Language="F#" Value="type TrackRevisions = class&#xA;    inherit OnOffType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Wordprocessing.OnOffType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Track Revisions to Document. When the object is serialized out as xml, its qualified name is w:trackRevisions.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **trackRevisions (Track Revisions to Document)**  
  
 This element specifies that applications shall track revisions made to the WordprocessingML document. *Revisions* are changes to a WordprocessingML document which are recorded such that they can be viewed independently, accepted or removed, and reverted if needed. When revisions are tracked, the resulting WordprocessingML markup in the Revisions subclause of this document describes the necessary syntax.  
  
 If this element is omitted, then revisions shall not be generated by changes to the contents of this document.  
  
 [*Example*: Consider a WordprocessingML document containing the text run *Example* that must not have revisions tracked. Example WordprocessingML from Document 1 is given below:  
  
```xml  
<w:document>  
  <w:body>  
    <w:p>  
      <w:r>  
        <w:t>Example</w:t>  
      </w:r>  
    </w:p>  
  </w:body>  
</w:document>  
```  
  
 And the corresponding document settings:  
  
```xml  
<w:settings>  
  <w:trackRevisions w:val="false"/>  
  …</w:settings>  
```  
  
 If the word *text* was added to the end of this document and bolded without revisions tracked, the resulting WordprocessingML would be output as follows:  
  
```xml  
<w:document>  
  <w:body>  
    <w:p>  
      <w:r>  
        <w:t>Example</w:t>  
      </w:r>  
      <w:r>  
        <w:rPr>  
          <w:b/>  
        </w:rPr>  
        <w:t>text</w:t>  
      </w:r>  
    </w:p>  
  </w:body>  
</w:document>  
```  
  
 And the corresponding document settings:  
  
```xml  
<w:settings>  
  <w:trackRevisions w:val="false"/>  
  …</w:settings>  
```  
  
 Finally, assume the same insertion and formatting took place when the trackRevisions element's val attribute was set to *true*, the resulting WordprocessingML would be output as follows:  
  
```xml  
<w:document>  
  <w:body>  
    <w:p>  
      <w:r>  
        <w:t>Example</w:t>  
      </w:r>  
      <w:ins … >  
        <w:r>  
          <w:rPr>  
            <w:b/>  
            <w:rPrChange … >  
              <w:rPr/>  
            </w:rPrChange>  
          </w:rPr>  
          <w:t>text</w:t>  
        </w:r>  
      </w:ins>  
    </w:p>  
  </w:body>  
</w:document>  
```  
  
 And the corresponding document settings:  
  
```xml  
<w:settings>  
  <w:trackRevisions w:val="true"/>  
  …</w:settings>  
```  
  
 The trackRevisions element's val attribute was set to *true*, therefore the changes to the content of the document were inserted using the appropriate annotation elements in the document's WordprocessingML. Specifically, inserting the text *Text* to the right of the existing text was tracked as a revision with the ins  element. In addition, applying bold formatting to the text was tracked as a revision with the rPrChange element. *end example*]  
  
|Parent Elements|  
|---------------------|  
|settings (§17.15.1.78)|  
  
 This element’s content model is defined by the common boolean property definition in §17.17.4.  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TrackRevisions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.TrackRevisions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the TrackRevisions class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.TrackRevisions.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="trackRevisions.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.TrackRevisions.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Wordprocessing.TrackRevisions.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>