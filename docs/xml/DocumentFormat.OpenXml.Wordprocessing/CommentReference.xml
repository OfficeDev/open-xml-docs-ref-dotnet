<Type Name="CommentReference" FullName="DocumentFormat.OpenXml.Wordprocessing.CommentReference">
  <TypeSignature Language="C#" Value="public class CommentReference : DocumentFormat.OpenXml.Wordprocessing.MarkupType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommentReference extends DocumentFormat.OpenXml.Wordprocessing.MarkupType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Wordprocessing.CommentReference" />
  <TypeSignature Language="VB.NET" Value="Public Class CommentReference&#xA;Inherits MarkupType" />
  <TypeSignature Language="F#" Value="type CommentReference = class&#xA;    inherit MarkupType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Wordprocessing.MarkupType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Comment Content Reference Mark. When the object is serialized out as xml, its qualified name is w:commentReference.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 `commentReference (Comment Content Reference Mark)`  
  
 This element specifies the presence of a comment content reference mark, which links the comment content (§17.13.4.2) with the contents of a document story. This link is established by matching the comment whose id attribute matches the id attribute on this element. The resulting comment is anchored to the range with comment range elements with the same id attribute values (if present) as follows:  
  
-   If both of the commentRangeStart and commentRangeEnd elements (§17.13.4.4; §17.13.4.3) are present, then the comment reference shall anchor the comment to the resulting range.  
  
-   If only one of the commentRangeStart and commentRangeEnd elements (§17.13.4.4; §17.13.4.3) is present, then the document is non-conformant.  
  
-   If neither element is present, then the comment reference shall anchor the comment to its current location.  
  
 If this element appears in a comment content story (§17.13.4.2), then it can be ignored. If no comment exists with an id attribute which matches the id attribute on this element, then this document is non-conformant.  
  
 [*Example*: Consider a paragraph in a WordprocessingML document whose second word is annotated with a comment:  
  
 e8c63055-3039-4545-a539-d3c0b56d2fdc  
  
 The WordprocessingML fragment for this comment is defined as follows:  
  
```xml  
<w:p>  
  <w:r>  
    <w:t xml:space="preserve">Some </w:t>  
  </w:r>  
  <w:commentRangeStart w:id="0" />  
  <w:r>  
    <w:t>text.</w:t>  
  </w:r>  
  <w:commentRangeEnd w:id="0" />  
  <w:r>  
    <w:commentReference w:id="0" />  
  </w:r>  
</w:p>  
```  
  
 The commentReference element specifies that the associated comment in the comments part must be the comment whose id attribute value is *0*. As well, since a start and end marker exist with a matching ID, this comment is anchored to that region of the document. *end example*]  
  
|Parent Elements|  
|---------------------|  
|r (§22.1.2.87); r (§17.3.2.25)|  
  
  [*Note*: The W3C XML Schema definition of this element’s content model (CT_Markup) is located in §A.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommentReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.CommentReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the CommentReference class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Wordprocessing.CommentReference.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="commentReference.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Wordprocessing.CommentReference.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Wordprocessing.CommentReference.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>