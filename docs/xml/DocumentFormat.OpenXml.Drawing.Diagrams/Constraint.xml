<Type Name="Constraint" FullName="DocumentFormat.OpenXml.Drawing.Diagrams.Constraint">
  <TypeSignature Language="C#" Value="public class Constraint : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Constraint extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Drawing.Diagrams.Constraint" />
  <TypeSignature Language="VB.NET" Value="Public Class Constraint&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type Constraint = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.Diagrams.ExtensionList))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Constraint. When the object is serialized out as xml, its qualified name is dgm:constr.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **constr (Constraint)**  
  
 This element is used to specify size, position of nodes, text values, and layout dependencies between nodes in a layout definition.  
  
 [*Example*:  Consider the following example of a constraint list which contains some example constraints being defined and applied to layout nodes in the layout definition:  
  
```xml  
<constrLst>  
<constr type="w" for="ch" forName="node1" refType="w" refForName=""/>  
<constr type="h" for="ch" forName="node1" refType="w" refFor="ch" refForName="node1" op="equ" fact="0.6"/>  
<constr type="w" for="ch" forName="transition1" refType="w" refFor="ch" refForName="node1" op="equ" fact="0.1"/>  
<constr type="primFontSz" for="ch" forName="node1" refForName="" op="equ" val="100"/>  
</constrLst>  
```  
  
 In this example we can see constraints being defined for the width and height along with the primary font size for a layout node referenced by *node1*.  The width for a transition is also specified.  *end example*]  
  
|Parent Elements|  
|---------------------|  
|constrLst (§21.4.2.9)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|extLst (Extension List)|§21.4.2.13|  
  
  [*Note*: The W3C XML Schema definition of this element’s content model (CT_Constraint) is located in §A.5.3. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Constraint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the Constraint class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Constraint (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.Diagrams.Constraint : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Drawing.Diagrams.Constraint" Usage="new DocumentFormat.OpenXml.Drawing.Diagrams.Constraint childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the Constraint class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Constraint (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.Diagrams.Constraint : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Drawing.Diagrams.Constraint" Usage="new DocumentFormat.OpenXml.Drawing.Diagrams.Constraint childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the Constraint class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Constraint (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.Diagrams.Constraint : string -&gt; DocumentFormat.OpenXml.Drawing.Diagrams.Constraint" Usage="new DocumentFormat.OpenXml.Drawing.Diagrams.Constraint outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the Constraint class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="constraint.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtensionList">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Drawing.Diagrams.ExtensionList ExtensionList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Drawing.Diagrams.ExtensionList ExtensionList" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.ExtensionList" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtensionList As ExtensionList" />
      <MemberSignature Language="F#" Value="member this.ExtensionList : DocumentFormat.OpenXml.Drawing.Diagrams.ExtensionList with get, set" Usage="DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.ExtensionList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Drawing.Diagrams.ExtensionList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ExtensionList. Represents the following element tag in the schema: dgm:extLst</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Drawing.Diagrams.ExtensionList" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:dgm = http://schemas.openxmlformats.org/drawingml/2006/diagram
            </remark>
      </Docs>
    </Member>
    <Member MemberName="Fact">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.DoubleValue Fact { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.DoubleValue Fact" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.Fact" />
      <MemberSignature Language="VB.NET" Value="Public Property Fact As DoubleValue" />
      <MemberSignature Language="F#" Value="member this.Fact : DocumentFormat.OpenXml.DoubleValue with get, set" Usage="DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.Fact" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "fact")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.DoubleValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Factor.Represents the following attribute in the schema: fact</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.DoubleValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.Diagrams.ConstraintRelationshipValues&gt; For { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Drawing.Diagrams.ConstraintRelationshipValues&gt; For" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.For" />
      <MemberSignature Language="VB.NET" Value="Public Property For As EnumValue(Of ConstraintRelationshipValues)" />
      <MemberSignature Language="F#" Value="member this.For : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.Diagrams.ConstraintRelationshipValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.For" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "for")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.Diagrams.ConstraintRelationshipValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For.Represents the following attribute in the schema: for</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForName">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue ForName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue ForName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.ForName" />
      <MemberSignature Language="VB.NET" Value="Public Property ForName As StringValue" />
      <MemberSignature Language="F#" Value="member this.ForName : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.ForName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "forName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For Name.Represents the following attribute in the schema: forName</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.Diagrams.BoolOperatorValues&gt; Operator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Drawing.Diagrams.BoolOperatorValues&gt; Operator" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.Operator" />
      <MemberSignature Language="VB.NET" Value="Public Property Operator As EnumValue(Of BoolOperatorValues)" />
      <MemberSignature Language="F#" Value="member this.Operator : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.Diagrams.BoolOperatorValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.Operator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "op")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.Diagrams.BoolOperatorValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Operator.Represents the following attribute in the schema: op</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointType">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.Diagrams.ElementValues&gt; PointType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Drawing.Diagrams.ElementValues&gt; PointType" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.PointType" />
      <MemberSignature Language="VB.NET" Value="Public Property PointType As EnumValue(Of ElementValues)" />
      <MemberSignature Language="F#" Value="member this.PointType : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.Diagrams.ElementValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.PointType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "ptType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.Diagrams.ElementValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Data Point Type.Represents the following attribute in the schema: ptType</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceFor">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.Diagrams.ConstraintRelationshipValues&gt; ReferenceFor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Drawing.Diagrams.ConstraintRelationshipValues&gt; ReferenceFor" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.ReferenceFor" />
      <MemberSignature Language="VB.NET" Value="Public Property ReferenceFor As EnumValue(Of ConstraintRelationshipValues)" />
      <MemberSignature Language="F#" Value="member this.ReferenceFor : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.Diagrams.ConstraintRelationshipValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.ReferenceFor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "refFor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.Diagrams.ConstraintRelationshipValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reference For.Represents the following attribute in the schema: refFor</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceForName">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue ReferenceForName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue ReferenceForName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.ReferenceForName" />
      <MemberSignature Language="VB.NET" Value="Public Property ReferenceForName As StringValue" />
      <MemberSignature Language="F#" Value="member this.ReferenceForName : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.ReferenceForName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "refForName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reference For Name.Represents the following attribute in the schema: refForName</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencePointType">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.Diagrams.ElementValues&gt; ReferencePointType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Drawing.Diagrams.ElementValues&gt; ReferencePointType" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.ReferencePointType" />
      <MemberSignature Language="VB.NET" Value="Public Property ReferencePointType As EnumValue(Of ElementValues)" />
      <MemberSignature Language="F#" Value="member this.ReferencePointType : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.Diagrams.ElementValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.ReferencePointType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "refPtType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.Diagrams.ElementValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reference Point Type.Represents the following attribute in the schema: refPtType</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceType">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.Diagrams.ConstraintValues&gt; ReferenceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Drawing.Diagrams.ConstraintValues&gt; ReferenceType" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.ReferenceType" />
      <MemberSignature Language="VB.NET" Value="Public Property ReferenceType As EnumValue(Of ConstraintValues)" />
      <MemberSignature Language="F#" Value="member this.ReferenceType : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.Diagrams.ConstraintValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.ReferenceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "refType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.Diagrams.ConstraintValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reference Type.Represents the following attribute in the schema: refType</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.Diagrams.ConstraintValues&gt; Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Drawing.Diagrams.ConstraintValues&gt; Type" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As EnumValue(Of ConstraintValues)" />
      <MemberSignature Language="F#" Value="member this.Type : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.Diagrams.ConstraintValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "type")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.Diagrams.ConstraintValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Constraint Type.Represents the following attribute in the schema: type</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Val">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.DoubleValue Val { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.DoubleValue Val" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.Val" />
      <MemberSignature Language="VB.NET" Value="Public Property Val As DoubleValue" />
      <MemberSignature Language="F#" Value="member this.Val : DocumentFormat.OpenXml.DoubleValue with get, set" Usage="DocumentFormat.OpenXml.Drawing.Diagrams.Constraint.Val" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "val")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.DoubleValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Value.Represents the following attribute in the schema: val</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.DoubleValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>