<Type Name="OrganizationChart" FullName="DocumentFormat.OpenXml.Drawing.Diagrams.OrganizationChart">
  <TypeSignature Language="C#" Value="public class OrganizationChart : DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OrganizationChart extends DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Drawing.Diagrams.OrganizationChart" />
  <TypeSignature Language="VB.NET" Value="Public Class OrganizationChart&#xA;Inherits OpenXmlLeafElement" />
  <TypeSignature Language="F#" Value="type OrganizationChart = class&#xA;    inherit OpenXmlLeafElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlLeafElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Show Organization Chart User Interface. When the object is serialized out as xml, its qualified name is dgm:orgChart.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **orgChart (Show Organization Chart User Interface)**  
  
 This element is used to indicate when to show user interface controls specifically associated with organizational charts such as being able to add an assistant to a selected node.  
  
 [*Example*:  Consider the following example of orgChart used in DiagramML:  
  
```xml  
<varLst>                         
<orgChart val="true" />      
<chPref val="1" />           
<dir val="norm" />           
<animOne val="branch" />     
<animLvl val="lvl" />        
<resizeHandles val="rel" />  
</varLst>                        
```  
  
 In this example we set the orgChart value to *true* indicating that the organizational chart specific user interface controls are to be enabled when the containing diagram is used.  *end example*]  
  
|Parent Elements|  
|---------------------|  
|presLayoutVars (§21.4.5.4); varLst (§21.4.2.31)|  
  
|Attributes|Description|  
|----------------|-----------------|  
|val (Show Organization Chart User Interface Value)|This attribute value specifies when to show the ‘Insert Assistant’ user interface control and the ‘Change Layout’ user interface for this diagram.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *boolean* datatype.|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_OrgChart) is located in §A.5.3. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OrganizationChart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.Diagrams.OrganizationChart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the OrganizationChart class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.Diagrams.OrganizationChart.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="organizationChart.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Diagrams.OrganizationChart.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Drawing.Diagrams.OrganizationChart.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Val">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue Val { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue Val" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Diagrams.OrganizationChart.Val" />
      <MemberSignature Language="VB.NET" Value="Public Property Val As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.Val : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Drawing.Diagrams.OrganizationChart.Val" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "val")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Show Organization Chart User Interface Value.Represents the following attribute in the schema: val</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>