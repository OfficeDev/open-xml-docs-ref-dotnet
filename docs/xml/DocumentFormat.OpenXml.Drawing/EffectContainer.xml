<Type Name="EffectContainer" FullName="DocumentFormat.OpenXml.Drawing.EffectContainer">
  <TypeSignature Language="C#" Value="public class EffectContainer : DocumentFormat.OpenXml.Drawing.EffectContainerType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EffectContainer extends DocumentFormat.OpenXml.Drawing.EffectContainerType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Drawing.EffectContainer" />
  <TypeSignature Language="VB.NET" Value="Public Class EffectContainer&#xA;Inherits EffectContainerType" />
  <TypeSignature Language="F#" Value="type EffectContainer = class&#xA;    inherit EffectContainerType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Drawing.EffectContainerType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Effect Container. When the object is serialized out as xml, its qualified name is a:cont.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **cont (Effect Container)**  
  
 This element specifies an Effect Container. It is a list of effects.  
  
|Parent Elements|  
|---------------------|  
|alphaMod (§20.1.8.5); blend (§20.1.8.12); cont (§20.1.8.20); effectDag (§20.1.8.25)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|alphaBiLevel (Alpha Bi-Level Effect)|§20.1.8.1|  
|alphaCeiling (Alpha Ceiling Effect)|§20.1.8.2|  
|alphaFloor (Alpha Floor Effect)|§20.1.8.3|  
|alphaInv (Alpha Inverse Effect)|§20.1.8.4|  
|alphaMod (Alpha Modulate Effect)|§20.1.8.5|  
|alphaModFix (Alpha Modulate Fixed Effect)|§20.1.8.6|  
|alphaOutset (Alpha Inset/Outset Effect)|§20.1.8.7|  
|alphaRepl (Alpha Replace Effect)|§20.1.8.8|  
|biLevel (Bi-Level (Black/White) Effect)|§20.1.8.11|  
|blend (Blend Effect)|§20.1.8.12|  
|blur (Blur Effect)|§20.1.8.15|  
|clrChange (Color Change Effect)|§20.1.8.16|  
|clrRepl (Solid Color Replacement)|§20.1.8.18|  
|cont (Effect Container)|§20.1.8.20|  
|duotone (Duotone Effect)|§20.1.8.23|  
|effect (Effect)|§20.1.8.24|  
|fill (Fill)|§20.1.8.28|  
|fillOverlay (Fill Overlay Effect)|§20.1.8.29|  
|glow (Glow Effect)|§20.1.8.32|  
|grayscl (Gray Scale Effect)|§20.1.8.34|  
|hsl (Hue Saturation Luminance Effect)|§20.1.8.39|  
|innerShdw (Inner Shadow Effect)|§20.1.8.40|  
|lum (Luminance Effect)|§20.1.8.42|  
|outerShdw (Outer Shadow Effect)|§20.1.8.45|  
|prstShdw (Preset Shadow)|§20.1.8.49|  
|reflection (Reflection Effect)|§20.1.8.50|  
|relOff (Relative Offset Effect)|§20.1.8.51|  
|softEdge (Soft Edge Effect)|§20.1.8.53|  
|tint (Tint Effect)|§20.1.8.60|  
|xfrm (Transform Effect)|§20.1.8.61|  
  
|Attributes|Description|  
|----------------|-----------------|  
|name (Name)|Specifies an optional name for this list of effects, so that it can be referred to later. Shall be unique across all effect trees and effect containers.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *token* datatype.|  
|type (Effect Container Type)|Specifies the kind of container, either sibling or tree.<br /><br /> The possible values for this attribute are defined by the *ST_EffectContainerType* simple type (§20.1.10.22).|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_EffectContainer) is located in §A.4.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EffectContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.EffectContainer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the EffectContainer class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EffectContainer (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.EffectContainer.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.EffectContainer : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Drawing.EffectContainer" Usage="new DocumentFormat.OpenXml.Drawing.EffectContainer childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the EffectContainer class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EffectContainer (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.EffectContainer.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.EffectContainer : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Drawing.EffectContainer" Usage="new DocumentFormat.OpenXml.Drawing.EffectContainer childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the EffectContainer class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EffectContainer (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.EffectContainer.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.EffectContainer : string -&gt; DocumentFormat.OpenXml.Drawing.EffectContainer" Usage="new DocumentFormat.OpenXml.Drawing.EffectContainer outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the EffectContainer class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.EffectContainer.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="effectContainer.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.EffectContainer.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Drawing.EffectContainer.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>