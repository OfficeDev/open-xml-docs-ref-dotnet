<Type Name="BevelTop" FullName="DocumentFormat.OpenXml.Drawing.BevelTop">
  <TypeSignature Language="C#" Value="public class BevelTop : DocumentFormat.OpenXml.Drawing.BevelType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BevelTop extends DocumentFormat.OpenXml.Drawing.BevelType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Drawing.BevelTop" />
  <TypeSignature Language="VB.NET" Value="Public Class BevelTop&#xA;Inherits BevelType" />
  <TypeSignature Language="F#" Value="type BevelTop = class&#xA;    inherit BevelType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Drawing.BevelType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Top Bevel. When the object is serialized out as xml, its qualified name is a:bevelT.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 `bevelT (Top Bevel)`  
  
 This element holds the properties associated with defining a bevel on the top or front face of a shape.  
  
 [*Example*:  Consider the following example of an sp3d containing a top bevel.  
  
```xml  
<a:sp3d>  
  <a:bevelT w="139700" h="127000" prst="coolSlant"/>  
</a:sp3d>  
```  
  
 In this example, we see a top bevel being defined with a preset bevel type along with a custom width and height.  *end example*]  
  
|Parent Elements|  
|---------------------|  
|sp3d (§21.4.5.6); sp3d (§20.1.5.12)|  
  
|Attributes|Description|  
|----------------|-----------------|  
|h (Height)|Specifies the height of the bevel, or how far above the shape it is applied.<br /><br /> [*Example*:  Consider the following example bevel<br /><br /> 5e450908-7a98-405d-b268-b29f91cd87e5<br /><br /> In this example, we see the height of an example bevel on a shape.  *end example*]<br /><br /> The possible values for this attribute are defined by the *ST_PositiveCoordinate* simple type (§20.1.10.42).|  
|prst (Preset Bevel)|Specifies the preset bevel type which defines the look of the bevel.<br /><br /> The possible values for this attribute are defined by the *ST_BevelPresetType* simple type (§20.1.10.9).|  
|w (Width)|Specifies the width of the bevel, or how far into the shape it is applied.<br /><br /> [*Example*:  Consider the following example bevel<br /><br /> 0c652050-ff2b-4e7a-953b-3366ac3da4d1<br /><br /> In this example, we see the width of an example bevel on a shape.  *end example*]<br /><br /> The possible values for this attribute are defined by the *ST_PositiveCoordinate* simple type (§20.1.10.42).|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_Bevel) is located in §A.4.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BevelTop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.BevelTop.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the BevelTop class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.BevelTop.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="bevelTop.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.BevelTop.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Drawing.BevelTop.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>