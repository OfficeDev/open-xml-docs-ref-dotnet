<Type Name="EffectContainerType" FullName="DocumentFormat.OpenXml.Drawing.EffectContainerType">
  <TypeSignature Language="C#" Value="public abstract class EffectContainerType : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EffectContainerType extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Drawing.EffectContainerType" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EffectContainerType&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type EffectContainerType = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.EffectContainer))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.EffectContainer))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.Effect))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.Effect))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.AlphaBiLevel))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.AlphaBiLevel))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.AlphaCeiling))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.AlphaCeiling))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.AlphaFloor))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.AlphaFloor))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.AlphaInverse))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.AlphaInverse))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.AlphaModulationEffect))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.AlphaModulationEffect))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.AlphaModulationFixed))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.AlphaModulationFixed))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.AlphaOutset))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.AlphaOutset))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.AlphaReplace))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.AlphaReplace))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.BiLevel))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.BiLevel))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.Blend))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.Blend))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.Blur))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.Blur))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.ColorChange))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.ColorChange))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.ColorReplacement))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.ColorReplacement))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.Duotone))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.Duotone))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.Fill))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.Fill))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.FillOverlay))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.FillOverlay))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.Glow))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.Glow))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.Grayscale))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.Grayscale))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.Hsl))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.Hsl))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.InnerShadow))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.InnerShadow))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.LuminanceEffect))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.LuminanceEffect))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.OuterShadow))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.OuterShadow))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.PresetShadow))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.PresetShadow))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.Reflection))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.Reflection))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.RelativeOffset))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.RelativeOffset))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.SoftEdge))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.SoftEdge))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.TintEffect))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.TintEffect))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.TransformEffect))]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.TransformEffect))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the EffectContainerType class.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following table lists the possible child types:EffectContainer \<a:cont>Effect \<a:effect>AlphaBiLevel \<a:alphaBiLevel>AlphaCeiling \<a:alphaCeiling>AlphaFloor \<a:alphaFloor>AlphaInverse \<a:alphaInv>AlphaModulate \<a:alphaMod>AlphaModulateFixed \<a:alphaModFix>AlphaOutset \<a:alphaOutset>AlphaReplace \<a:alphaRepl>BiLevel \<a:biLevel>Blend \<a:blend>Blur \<a:blur>ColorChange \<a:clrChange>ColorReplacement \<a:clrRepl>Duotone \<a:duotone>Fill \<a:fill>FillOverlay \<a:fillOverlay>Glow \<a:glow>Grayscale \<a:grayscl>Hsl \<a:hsl>InnerShadow \<a:innerShdw>LuminanceEffect \<a:lum>OuterShadow \<a:outerShdw>PresetShadow \<a:prstShdw>Reflection \<a:reflection>RelativeOffset \<a:relOff>SoftEdge \<a:softEdge>TintEffect \<a:tint>TransformEffect \<a:xfrm>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EffectContainerType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.EffectContainerType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the EffectContainerType class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EffectContainerType (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.EffectContainerType.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.EffectContainerType : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Drawing.EffectContainerType" Usage="new DocumentFormat.OpenXml.Drawing.EffectContainerType childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the EffectContainerType class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EffectContainerType (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.EffectContainerType.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.EffectContainerType : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Drawing.EffectContainerType" Usage="new DocumentFormat.OpenXml.Drawing.EffectContainerType childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the EffectContainerType class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EffectContainerType (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.EffectContainerType.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.EffectContainerType : string -&gt; DocumentFormat.OpenXml.Drawing.EffectContainerType" Usage="new DocumentFormat.OpenXml.Drawing.EffectContainerType outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the EffectContainerType class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue Name" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.EffectContainerType.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As StringValue" />
      <MemberSignature Language="F#" Value="member this.Name : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Drawing.EffectContainerType.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[DocumentFormat.OpenXml.SchemaAttr(0, "name")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.SchemaAttr(0, "name")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Name.Represents the following attribute in the schema: name</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 Specifies an optional name for this list of effects, so that it can be referred to later.  Must be unique across all effect trees and effect containers.  
  
 The possible values for this attribute are defined by the XML Schema `token` data type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.EffectContainerValues&gt; Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Drawing.EffectContainerValues&gt; Type" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.EffectContainerType.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As EnumValue(Of EffectContainerValues)" />
      <MemberSignature Language="F#" Value="member this.Type : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.EffectContainerValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Drawing.EffectContainerType.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[DocumentFormat.OpenXml.SchemaAttr(0, "type")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.SchemaAttr(0, "type")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.EffectContainerValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Effect Container Type.Represents the following attribute in the schema: type</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 Specifies the type of container, either sibling or tree.  
  
 The possible values for this attribute are defined by the `ST_EffectContainerType` simple type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
