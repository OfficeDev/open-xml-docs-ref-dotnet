<Type Name="TableCellProperties" FullName="DocumentFormat.OpenXml.Drawing.TableCellProperties">
  <TypeSignature Language="C#" Value="public class TableCellProperties : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TableCellProperties extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Drawing.TableCellProperties" />
  <TypeSignature Language="VB.NET" Value="Public Class TableCellProperties&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type TableCellProperties = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.LeftBorderLineProperties))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.RightBorderLineProperties))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.TopBorderLineProperties))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.BottomBorderLineProperties))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.TopLeftToBottomRightBorderLineProperties))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.Cell3DProperties))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.NoFill))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.SolidFill))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.GradientFill))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.BlipFill))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.PatternFill))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.GroupFill))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Drawing.ExtensionList))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Table Cell Properties. When the object is serialized out as xml, its qualified name is a:tcPr.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **tcPr (Table Cell Properties)**  
  
 This element defines the formatting properties associated with a cell.  The formatting options which are available to be adjusted range from the line types used for the borders to the cell fill to the margins associated with the layout of the text in the cell.  
  
 [*Example*: Consider the following example of a tcPr within DrawingML:  
  
```xml  
<a:tcPr marL="45720" marR="45720">  
  <a:lnL w="38100" cap="flat" cmpd="sng" algn="ctr">  
    <a:solidFill>  
      <a:schemeClr val="accent2"/>  
    </a:solidFill>  
    <a:prstDash val="solid"/>  
    <a:round/>  
    <a:headEnd type="none" w="med" len="med"/>  
    <a:tailEnd type="none" w="med" len="med"/>  
  </a:lnL>  
</a:tcPr>  
```  
  
 In this example, we have a solid line defined as the left border of the cell along with left and right margin adjustments being made from the default margins.  *end example*]  
  
|Parent Elements|  
|---------------------|  
|tc (§21.1.3.16)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|blipFill (Picture Fill)|§20.1.8.14|  
|cell3D (Cell 3-D)|§21.1.3.1|  
|extLst (Extension List)|§20.1.2.2.15|  
|gradFill (Gradient Fill)|§20.1.8.33|  
|grpFill (Group Fill)|§20.1.8.35|  
|headers (Header Cells Associated With Table Cell)|§21.1.3.4|  
|lnB (Bottom Border Line Properties)|§21.1.3.5|  
|lnBlToTr (Bottom-Left to Top-Right Border Line Properties)|§21.1.3.6|  
|lnL (Left Border Line Properties)|§21.1.3.7|  
|lnR (Right Border Line Properties)|§21.1.3.8|  
|lnT (Top Border Line Properties)|§21.1.3.9|  
|lnTlToBr (Top-Left to Bottom-Right Border Line Properties)|§21.1.3.10|  
|noFill (No Fill)|§20.1.8.44|  
|pattFill (Pattern Fill)|§20.1.8.47|  
|solidFill (Solid Fill)|§20.1.8.54|  
  
  [*Note*: The W3C XML Schema definition of this element’s content model (CT_TableCellProperties) is located in §A.4.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableCellProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.TableCellProperties.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the TableCellProperties class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableCellProperties (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.TableCellProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.TableCellProperties : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Drawing.TableCellProperties" Usage="new DocumentFormat.OpenXml.Drawing.TableCellProperties childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the TableCellProperties class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableCellProperties (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.TableCellProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.TableCellProperties : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Drawing.TableCellProperties" Usage="new DocumentFormat.OpenXml.Drawing.TableCellProperties childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the TableCellProperties class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableCellProperties (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.TableCellProperties.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.TableCellProperties : string -&gt; DocumentFormat.OpenXml.Drawing.TableCellProperties" Usage="new DocumentFormat.OpenXml.Drawing.TableCellProperties outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the TableCellProperties class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Anchor">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.TextAnchoringTypeValues&gt; Anchor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Drawing.TextAnchoringTypeValues&gt; Anchor" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.TableCellProperties.Anchor" />
      <MemberSignature Language="VB.NET" Value="Public Property Anchor As EnumValue(Of TextAnchoringTypeValues)" />
      <MemberSignature Language="F#" Value="member this.Anchor : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.TextAnchoringTypeValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Drawing.TableCellProperties.Anchor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "anchor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.TextAnchoringTypeValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Anchor.Represents the following attribute in the schema: anchor</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 Defines the alignment of the text vertically within the cell.  
  
 Consider the following example:  
  
```  
<a:tcPr marL="45720" anchor="ctr"/>  
```  
  
 In this example, the text in the cell will be anchored to the center of the cell vertically.  
  
 The possible values for this attribute are defined by the `ST_TextAnchoringType` simple type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorCenter">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue AnchorCenter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue AnchorCenter" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.TableCellProperties.AnchorCenter" />
      <MemberSignature Language="VB.NET" Value="Public Property AnchorCenter As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.AnchorCenter : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Drawing.TableCellProperties.AnchorCenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "anchorCtr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Anchor Center.Represents the following attribute in the schema: anchorCtr</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.BooleanValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 When this attribute is `on`, `1` or `true`, it modifies the anchor attribute. This attribute will center align the text box itself, which will allow for text to be left-aligned along the center of the cell for example.  
  
 The possible values for this attribute are defined by the XML Schema `boolean` datatype.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomBorderLineProperties">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Drawing.BottomBorderLineProperties BottomBorderLineProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Drawing.BottomBorderLineProperties BottomBorderLineProperties" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.TableCellProperties.BottomBorderLineProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property BottomBorderLineProperties As BottomBorderLineProperties" />
      <MemberSignature Language="F#" Value="member this.BottomBorderLineProperties : DocumentFormat.OpenXml.Drawing.BottomBorderLineProperties with get, set" Usage="DocumentFormat.OpenXml.Drawing.TableCellProperties.BottomBorderLineProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Drawing.BottomBorderLineProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bottom Border Line Properties. Represents the following element tag in the schema: a:lnB</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="BottomLeftToTopRightBorderLineProperties">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties BottomLeftToTopRightBorderLineProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties BottomLeftToTopRightBorderLineProperties" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.TableCellProperties.BottomLeftToTopRightBorderLineProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property BottomLeftToTopRightBorderLineProperties As BottomLeftToTopRightBorderLineProperties" />
      <MemberSignature Language="F#" Value="member this.BottomLeftToTopRightBorderLineProperties : DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties with get, set" Usage="DocumentFormat.OpenXml.Drawing.TableCellProperties.BottomLeftToTopRightBorderLineProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bottom-Left to Top-Right Border Line Properties. Represents the following element tag in the schema: a:lnBlToTr</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="BottomMargin">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Int32Value BottomMargin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Int32Value BottomMargin" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.TableCellProperties.BottomMargin" />
      <MemberSignature Language="VB.NET" Value="Public Property BottomMargin As Int32Value" />
      <MemberSignature Language="F#" Value="member this.BottomMargin : DocumentFormat.OpenXml.Int32Value with get, set" Usage="DocumentFormat.OpenXml.Drawing.TableCellProperties.BottomMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "marB")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Int32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bottom Margin.Represents the following attribute in the schema: marB</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Int32Value" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 Specifies the bottom margin of the cell. The value specified in this attribute is the distance to offset from the bottom of the cell.  
  
 Consider the following example:  
  
```  
<a:tcPr marB="45720" anchor="ctr">  
…  
</a:tcPr>  
```  
  
 In this example, we have specified a value for the margin on the bottom of the cell.  
  
 The possible values for this attribute are defined by the `ST_Coordinate32` simple type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cell3DProperties">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Drawing.Cell3DProperties Cell3DProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Drawing.Cell3DProperties Cell3DProperties" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.TableCellProperties.Cell3DProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property Cell3DProperties As Cell3DProperties" />
      <MemberSignature Language="F#" Value="member this.Cell3DProperties : DocumentFormat.OpenXml.Drawing.Cell3DProperties with get, set" Usage="DocumentFormat.OpenXml.Drawing.TableCellProperties.Cell3DProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Drawing.Cell3DProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cell 3-D. Represents the following element tag in the schema: a:cell3D</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.TableCellProperties.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="tableCellProperties.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalOverflow">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.TextHorizontalOverflowValues&gt; HorizontalOverflow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Drawing.TextHorizontalOverflowValues&gt; HorizontalOverflow" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.TableCellProperties.HorizontalOverflow" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalOverflow As EnumValue(Of TextHorizontalOverflowValues)" />
      <MemberSignature Language="F#" Value="member this.HorizontalOverflow : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.TextHorizontalOverflowValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Drawing.TableCellProperties.HorizontalOverflow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "horzOverflow")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.TextHorizontalOverflowValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Horizontal Overflow.Represents the following attribute in the schema: horzOverflow</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 Specifies the clipping behavior of the cell. The two options here allow for the text to be clipped and out of view when outside of the bounds of the cell, or for the text to remain visible and overflow outside of the cell.  
  
 Consider the following example:  
  
```  
<a:tcPr horzOverflow="overflow">  
…  
</a:tcPr>  
```  
  
 In this example, the text in the cell will freely overflow outside of the cell boundaries and will always remain visible.  
  
 The possible values for this attribute are defined by the `ST_TextHorzOverflowType` simple type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftBorderLineProperties">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Drawing.LeftBorderLineProperties LeftBorderLineProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Drawing.LeftBorderLineProperties LeftBorderLineProperties" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.TableCellProperties.LeftBorderLineProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property LeftBorderLineProperties As LeftBorderLineProperties" />
      <MemberSignature Language="F#" Value="member this.LeftBorderLineProperties : DocumentFormat.OpenXml.Drawing.LeftBorderLineProperties with get, set" Usage="DocumentFormat.OpenXml.Drawing.TableCellProperties.LeftBorderLineProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Drawing.LeftBorderLineProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Left Border Line Properties. Represents the following element tag in the schema: a:lnL</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LeftMargin">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Int32Value LeftMargin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Int32Value LeftMargin" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.TableCellProperties.LeftMargin" />
      <MemberSignature Language="VB.NET" Value="Public Property LeftMargin As Int32Value" />
      <MemberSignature Language="F#" Value="member this.LeftMargin : DocumentFormat.OpenXml.Int32Value with get, set" Usage="DocumentFormat.OpenXml.Drawing.TableCellProperties.LeftMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "marL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Int32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Left Margin.Represents the following attribute in the schema: marL</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Int32Value" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 This attribute specifies the left margin of the cell. The value specified in this attribute is the distance, in EMUs, to offset from the left of the cell.  
  
 Consider the following example:  
  
```  
<a:tcPr marL="45720" anchor="ctr">  
…  
</a:tcPr>  
```  
  
 In this example, we have specified a value for the margin on the left of the cell.  
  
 The possible values for this attribute are defined by the ST_Coordinate32 simple type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.TableCellProperties.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Drawing.TableCellProperties.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightBorderLineProperties">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Drawing.RightBorderLineProperties RightBorderLineProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Drawing.RightBorderLineProperties RightBorderLineProperties" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.TableCellProperties.RightBorderLineProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property RightBorderLineProperties As RightBorderLineProperties" />
      <MemberSignature Language="F#" Value="member this.RightBorderLineProperties : DocumentFormat.OpenXml.Drawing.RightBorderLineProperties with get, set" Usage="DocumentFormat.OpenXml.Drawing.TableCellProperties.RightBorderLineProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Drawing.RightBorderLineProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Right Border Line Properties. Represents the following element tag in the schema: a:lnR</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="RightMargin">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Int32Value RightMargin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Int32Value RightMargin" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.TableCellProperties.RightMargin" />
      <MemberSignature Language="VB.NET" Value="Public Property RightMargin As Int32Value" />
      <MemberSignature Language="F#" Value="member this.RightMargin : DocumentFormat.OpenXml.Int32Value with get, set" Usage="DocumentFormat.OpenXml.Drawing.TableCellProperties.RightMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "marR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Int32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Right Margin.Represents the following attribute in the schema: marR</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Int32Value" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 This attribute specifies the right margin of the cell. The value specified in this attribute is the distance, in EMUs, to offset from the right of the cell.  
  
 Consider the following example:  
  
```  
<a:tcPr marR="45720" anchor="ctr">  
…  
</a:tcPr>  
```  
  
 In this example, we have specified a value for the margin on the right of the cell.  
  
 The possible values for this attribute are defined by the `ST_Coordinate32` simple type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopBorderLineProperties">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Drawing.TopBorderLineProperties TopBorderLineProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Drawing.TopBorderLineProperties TopBorderLineProperties" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.TableCellProperties.TopBorderLineProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property TopBorderLineProperties As TopBorderLineProperties" />
      <MemberSignature Language="F#" Value="member this.TopBorderLineProperties : DocumentFormat.OpenXml.Drawing.TopBorderLineProperties with get, set" Usage="DocumentFormat.OpenXml.Drawing.TableCellProperties.TopBorderLineProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Drawing.TopBorderLineProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Top Border Line Properties. Represents the following element tag in the schema: a:lnT</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="TopLeftToBottomRightBorderLineProperties">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Drawing.TopLeftToBottomRightBorderLineProperties TopLeftToBottomRightBorderLineProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Drawing.TopLeftToBottomRightBorderLineProperties TopLeftToBottomRightBorderLineProperties" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.TableCellProperties.TopLeftToBottomRightBorderLineProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property TopLeftToBottomRightBorderLineProperties As TopLeftToBottomRightBorderLineProperties" />
      <MemberSignature Language="F#" Value="member this.TopLeftToBottomRightBorderLineProperties : DocumentFormat.OpenXml.Drawing.TopLeftToBottomRightBorderLineProperties with get, set" Usage="DocumentFormat.OpenXml.Drawing.TableCellProperties.TopLeftToBottomRightBorderLineProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Drawing.TopLeftToBottomRightBorderLineProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Top-Left to Bottom-Right Border Line Properties. Represents the following element tag in the schema: a:lnTlToBr</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="TopMargin">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Int32Value TopMargin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Int32Value TopMargin" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.TableCellProperties.TopMargin" />
      <MemberSignature Language="VB.NET" Value="Public Property TopMargin As Int32Value" />
      <MemberSignature Language="F#" Value="member this.TopMargin : DocumentFormat.OpenXml.Int32Value with get, set" Usage="DocumentFormat.OpenXml.Drawing.TableCellProperties.TopMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "marT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Int32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Top Margin.Represents the following attribute in the schema: marT</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Int32Value" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 This attribute specifies the top margin of the cell. The value specified in this attribute is the distance, in EMUs, to offset from the top of the cell.  
  
 Consider the following example:  
  
```  
<a:tcPr marT="45720" anchor="ctr">  
…  
</a:tcPr>  
```  
  
 In this example, we have specified a value for the margin on the top of the cell.  
  
 The possible values for this attribute are defined by the `ST_Coordinate32` simple type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertical">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.TextVerticalValues&gt; Vertical { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Drawing.TextVerticalValues&gt; Vertical" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.TableCellProperties.Vertical" />
      <MemberSignature Language="VB.NET" Value="Public Property Vertical As EnumValue(Of TextVerticalValues)" />
      <MemberSignature Language="F#" Value="member this.Vertical : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.TextVerticalValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Drawing.TableCellProperties.Vertical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "vert")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.TextVerticalValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Text Direction.Represents the following attribute in the schema: vert</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following information from the ECMA International [Standard ECMA-376](http://www.ecma-international.org/publications/standards/Ecma-376.htm) can be useful when working with this class.  
  
 Defines the text direction within the cell.  
  
 Consider the following example:  
  
```  
<a:tcPr vert="vert270">  
…  
</a:tcPr>  
```  
  
 In this example, we have rotated the layout of the text 270 degrees so that it starts at the bottom of the cell and goes upward toward the top of the cell.  
  
 The possible values for this attribute are defined by the `ST_TextVerticalType` simple type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>