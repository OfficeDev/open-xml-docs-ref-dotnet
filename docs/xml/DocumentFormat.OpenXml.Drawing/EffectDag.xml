<Type Name="EffectDag" FullName="DocumentFormat.OpenXml.Drawing.EffectDag">
  <TypeSignature Language="C#" Value="public class EffectDag : DocumentFormat.OpenXml.Drawing.EffectContainerType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EffectDag extends DocumentFormat.OpenXml.Drawing.EffectContainerType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Drawing.EffectDag" />
  <TypeSignature Language="VB.NET" Value="Public Class EffectDag&#xA;Inherits EffectContainerType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Drawing.EffectContainerType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>Effect Container.</para>
      <para> When the object is serialized out as xml, its qualified name is a:effectDag.</para>
    </summary>
    <remarks>
             The following table lists the possible child types:
             <list type="bullet"><item><description>EffectContainer &lt;a:cont&gt;</description></item><item><description>Effect &lt;a:effect&gt;</description></item><item><description>AlphaBiLevel &lt;a:alphaBiLevel&gt;</description></item><item><description>AlphaCeiling &lt;a:alphaCeiling&gt;</description></item><item><description>AlphaFloor &lt;a:alphaFloor&gt;</description></item><item><description>AlphaInverse &lt;a:alphaInv&gt;</description></item><item><description>AlphaModulationEffect &lt;a:alphaMod&gt;</description></item><item><description>AlphaModulationFixed &lt;a:alphaModFix&gt;</description></item><item><description>AlphaOutset &lt;a:alphaOutset&gt;</description></item><item><description>AlphaReplace &lt;a:alphaRepl&gt;</description></item><item><description>BiLevel &lt;a:biLevel&gt;</description></item><item><description>Blend &lt;a:blend&gt;</description></item><item><description>Blur &lt;a:blur&gt;</description></item><item><description>ColorChange &lt;a:clrChange&gt;</description></item><item><description>ColorReplacement &lt;a:clrRepl&gt;</description></item><item><description>Duotone &lt;a:duotone&gt;</description></item><item><description>Fill &lt;a:fill&gt;</description></item><item><description>FillOverlay &lt;a:fillOverlay&gt;</description></item><item><description>Glow &lt;a:glow&gt;</description></item><item><description>Grayscale &lt;a:grayscl&gt;</description></item><item><description>Hsl &lt;a:hsl&gt;</description></item><item><description>InnerShadow &lt;a:innerShdw&gt;</description></item><item><description>LuminanceEffect &lt;a:lum&gt;</description></item><item><description>OuterShadow &lt;a:outerShdw&gt;</description></item><item><description>PresetShadow &lt;a:prstShdw&gt;</description></item><item><description>Reflection &lt;a:reflection&gt;</description></item><item><description>RelativeOffset &lt;a:relOff&gt;</description></item><item><description>SoftEdge &lt;a:softEdge&gt;</description></item><item><description>TintEffect &lt;a:tint&gt;</description></item><item><description>TransformEffect &lt;a:xfrm&gt;</description></item></list></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EffectDag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.EffectDag.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the EffectDag class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EffectDag (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.EffectDag.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>
            Initializes a new instance of the EffectDag class with the specified child elements.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EffectDag (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.EffectDag.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>
            Initializes a new instance of the EffectDag class with the specified child elements.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EffectDag (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.EffectDag.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>
            Initializes a new instance of the EffectDag class from outer XML.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.EffectDag.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
        <summary>
            Creates a duplicate of this node.  
            </summary>
        <returns>Returns the cloned node. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.EffectDag.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the local name of the element.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>