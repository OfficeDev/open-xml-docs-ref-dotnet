<Type Name="TableStyle" FullName="DocumentFormat.OpenXml.Drawing.TableStyle">
  <TypeSignature Language="C#" Value="public class TableStyle : DocumentFormat.OpenXml.Drawing.TableStyleType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TableStyle extends DocumentFormat.OpenXml.Drawing.TableStyleType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Drawing.TableStyle" />
  <TypeSignature Language="VB.NET" Value="Public Class TableStyle&#xA;Inherits TableStyleType" />
  <TypeSignature Language="F#" Value="type TableStyle = class&#xA;    inherit TableStyleType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Drawing.TableStyleType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Table Style. When the object is serialized out as xml, its qualified name is a:tableStyle.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **tableStyle (Table Style)**  
  
 This element specifies a particular table style.  Fourteen elements make up the styling information of a given table style.  These fourteen elements work together to provide visual formatting options for on/off states of the following toggles:  
  
-   First row on/off - Associated element: firstRow  
  
-   Last row on/off - Associated element: lastRow  
  
-   First column on/off - Associated element: firstCol  
  
-   Last column on/off - Associated element: lastCol  
  
-   Row banding on/off - Associated elements: band1H, band2H  
  
-   Column banding on/off - Associated elements: band1V, band2V  
  
 The formatting associated with the wholeTbl element defines the table formatting when all options are off.  When an option is turned on, the formatting for that particular option is applied to the table.  The four cell specific formatting options are enabled when overlapping options are toggled on.  For example, when the first row, and first column formatting options are enabled, any formatting within the northwest cell is also be applied since that is the overlapping table cell when both first column and first row formatting options are on.  
  
 [*Example*:  Consider the following partial example of a tblStyle within DrawingML:  
  
```xml  
<a:tblStyle styleId="{5940675A-B579-460E-94D1-54222C63F5DA}"  styleName="No Style, Table Grid">  
  <a:wholeTbl>  
    <a:tcTxStyle>  
      <a:fontRef idx="minor">  
        <a:scrgbClr r="0" g="0" b="0"/>  
      </a:fontRef>  
      <a:schemeClr val="tx1"/>  
    </a:tcTxStyle>  
    <a:tcStyle>  
      <a:tcBdr>  
        <a:left>  
          <a:ln w="12700" cmpd="sng">  
            <a:solidFill>  
              <a:schemeClr val="tx1"/>  
            </a:solidFill>  
          </a:ln>  
        </a:left>  
```  
  
 …right, top, bottom, insideH, insideV border information is defined just as the 'left' tag…  
  
```xml  
    </a:tcBdr>  
    <a:fill>  
      <a:noFill/>  
    </a:fill>  
  </a:tcStyle>  
</a:wholeTbl>  
<a:band1H>  
  <a:tcStyle>  
    <a:tcBdr/>  
  </a:tcStyle>  
</a:band1H>  
```  
  
 …band2H, band1V, band2V, firstCol, firstRow, lastCol, lastRow, neCell, nwCell, seCell, swCell tags are all defined just as the 'band1H' tag  
  
```xml  
</a:tblStyle>  
```  
  
 In this example, one can get an idea for the definition of a table style in its entirety.  The above defined table style creates a style with only 1pt line formatting applied to all of the cells in a table.  Notice that the on/off toggle formatting (band1H, band2H, firstCol, etc) do not define any formatting and therefore have no effect to the table when toggled.   *end example*]  
  
|Parent Elements|  
|---------------------|  
|tblPr (§21.1.3.15)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|band1H (Band 1 Horizontal)|§20.1.4.2.1|  
|band1V (Band 1 Vertical)|§20.1.4.2.2|  
|band2H (Band 2 Horizontal)|§20.1.4.2.3|  
|band2V (Band 2 Vertical)|§20.1.4.2.4|  
|extLst (Extension List)|§20.1.2.2.15|  
|firstCol (First Column)|§20.1.4.2.11|  
|firstRow (First Row)|§20.1.4.2.12|  
|lastCol (Last Column)|§20.1.4.2.16|  
|lastRow (Last Row)|§20.1.4.2.17|  
|neCell (Northeast Cell)|§20.1.4.2.20|  
|nwCell (Northwest Cell)|§20.1.4.2.21|  
|seCell (Southeast Cell)|§20.1.4.2.23|  
|swCell (Southwest Cell)|§20.1.4.2.24|  
|tblBg (Table Background)|§20.1.4.2.25|  
|wholeTbl (Whole Table)|§20.1.4.2.34|  
  
|Attributes|Description|  
|----------------|-----------------|  
|styleId (Style ID)|Specifies a GUID identifying the table style in a unique manner.<br /><br /> The possible values for this attribute are defined by the *ST_Guid* simple type (§22.9.2.4).|  
|styleName (Name)|Specifies the name of the table style which can show up in the user interface identifying the style to a user.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *string* datatype.|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_TableStyle) is located in §A.4.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.TableStyle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the TableStyle class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableStyle (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.TableStyle.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.TableStyle : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Drawing.TableStyle" Usage="new DocumentFormat.OpenXml.Drawing.TableStyle childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the TableStyle class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableStyle (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.TableStyle.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.TableStyle : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Drawing.TableStyle" Usage="new DocumentFormat.OpenXml.Drawing.TableStyle childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the TableStyle class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableStyle (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.TableStyle.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.TableStyle : string -&gt; DocumentFormat.OpenXml.Drawing.TableStyle" Usage="new DocumentFormat.OpenXml.Drawing.TableStyle outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the TableStyle class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.TableStyle.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="tableStyle.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.TableStyle.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Drawing.TableStyle.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>