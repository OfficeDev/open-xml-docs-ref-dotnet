<Type Name="ColorMap" FullName="DocumentFormat.OpenXml.Drawing.ColorMap">
  <TypeSignature Language="C#" Value="public class ColorMap : DocumentFormat.OpenXml.Drawing.ColorMappingType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ColorMap extends DocumentFormat.OpenXml.Drawing.ColorMappingType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Drawing.ColorMap" />
  <TypeSignature Language="VB.NET" Value="Public Class ColorMap&#xA;Inherits ColorMappingType" />
  <TypeSignature Language="F#" Value="type ColorMap = class&#xA;    inherit ColorMappingType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Drawing.ColorMappingType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the ColorMap Class. When the object is serialized out as xml, its qualified name is a:clrMap.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **clrMap (Color Map)**  
  
 This element specifics the color mapping layer which allows a user to define colors for background and text.  This allows for swapping out of light/dark colors for backgrounds and the text on top of the background in order to maintain readability of the text  On a deeper level, this specifies exactly which colors the first 12 values refer to in the color scheme.  
  
 [*Example*:  Consider the following example of a color map in use:  
  
```xml  
<clrMap bg1="lt1" tx1="dk1" bg2="lt2" tx2="dk2" accent1="accent1"  accent2="accent2" accent3="accent3" accent4="accent4" accent5="accent5"  accent6="accent6" hlink="hlink" folHlink="folHlink"/>  
```  
  
 In this example, we see that bg1 is mapped to lt1, tx1 is mapped to dk1, and so on.  *end example*]  
  
|Parent Elements|  
|---------------------|  
|extraClrScheme (§20.1.6.4)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|extLst (Extension List)|§20.1.2.2.15|  
  
|Attributes|Description|  
|----------------|-----------------|  
|accent1 (Accent 1)|Specifies a color defined which is associated as the accent 1 color.<br /><br /> The possible values for this attribute are defined by the *ST_ColorSchemeIndex* simple type (§20.1.10.14).|  
|accent2 (Accent 2)|Specifies a color defined which is associated as the accent 2 color.<br /><br /> The possible values for this attribute are defined by the *ST_ColorSchemeIndex* simple type (§20.1.10.14).|  
|accent3 (Accent 3)|Specifies a color defined which is associated as the accent 3 color.<br /><br /> The possible values for this attribute are defined by the *ST_ColorSchemeIndex* simple type (§20.1.10.14).|  
|accent4 (Accent 4)|Specifies a color defined which is associated as the accent 4 color.<br /><br /> The possible values for this attribute are defined by the *ST_ColorSchemeIndex* simple type (§20.1.10.14).|  
|accent5 (Accent 5)|Specifies a color defined which is associated as the accent 5 color.<br /><br /> The possible values for this attribute are defined by the *ST_ColorSchemeIndex* simple type (§20.1.10.14).|  
|accent6 (Accent 6)|Specifies a color defined which is associated as the accent 6 color.<br /><br /> The possible values for this attribute are defined by the *ST_ColorSchemeIndex* simple type (§20.1.10.14).|  
|bg1 (Background 1)|A color defined which is associated as the first background color.<br /><br /> The possible values for this attribute are defined by the *ST_ColorSchemeIndex* simple type (§20.1.10.14).|  
|bg2 (Background 2)|Specifies a color defined which is associated as the second background color.<br /><br /> The possible values for this attribute are defined by the *ST_ColorSchemeIndex* simple type (§20.1.10.14).|  
|folHlink (Followed Hyperlink)|Specifies a color defined which is associated as the color for a followed hyperlink.<br /><br /> The possible values for this attribute are defined by the *ST_ColorSchemeIndex* simple type (§20.1.10.14).|  
|hlink (Hyperlink)|Specifies a color defined which is associated as the color for a hyperlink.<br /><br /> The possible values for this attribute are defined by the *ST_ColorSchemeIndex* simple type (§20.1.10.14).|  
|tx1 (Text 1)|Specifies a color defined which is associated as the first text color.<br /><br /> The possible values for this attribute are defined by the *ST_ColorSchemeIndex* simple type (§20.1.10.14).|  
|tx2 (Text 2)|Specifies a color defined which is associated as the second text color.<br /><br /> The possible values for this attribute are defined by the *ST_ColorSchemeIndex* simple type (§20.1.10.14).|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_ColorMapping) is located in §A.4.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColorMap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.ColorMap.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the ColorMap class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColorMap (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.ColorMap.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.ColorMap : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Drawing.ColorMap" Usage="new DocumentFormat.OpenXml.Drawing.ColorMap childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the ColorMap class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColorMap (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.ColorMap.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.ColorMap : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Drawing.ColorMap" Usage="new DocumentFormat.OpenXml.Drawing.ColorMap childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the ColorMap class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColorMap (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.ColorMap.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.ColorMap : string -&gt; DocumentFormat.OpenXml.Drawing.ColorMap" Usage="new DocumentFormat.OpenXml.Drawing.ColorMap outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the ColorMap class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.ColorMap.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="colorMap.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.ColorMap.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Drawing.ColorMap.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>