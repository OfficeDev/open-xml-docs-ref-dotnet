<Type Name="BottomLeftToTopRightBorderLineProperties" FullName="DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties">
  <TypeSignature Language="C#" Value="public class BottomLeftToTopRightBorderLineProperties : DocumentFormat.OpenXml.Drawing.LinePropertiesType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BottomLeftToTopRightBorderLineProperties extends DocumentFormat.OpenXml.Drawing.LinePropertiesType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties" />
  <TypeSignature Language="VB.NET" Value="Public Class BottomLeftToTopRightBorderLineProperties&#xA;Inherits LinePropertiesType" />
  <TypeSignature Language="F#" Value="type BottomLeftToTopRightBorderLineProperties = class&#xA;    inherit LinePropertiesType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Drawing.LinePropertiesType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Bottom-Left to Top-Right Border Line Properties. When the object is serialized out as xml, its qualified name is a:lnBlToTr.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **lnBlToTr (Bottom-Left to Top-Right Border Line Properties)**  
  
 This element defines the line properties associated with the diagonal line from the bottom left corner of the cell to the top right corner.  
  
 [*Example*:  Consider the following example of a lnBlToTr within DrawingML:  
  
```xml  
<a:lnBlToTr w="38100" cap="flat" cmpd="sng" algn="ctr">  
  <a:solidFill>  
    <a:schemeClr val="accent2"/>  
  </a:solidFill>  
  <a:prstDash val="solid"/>  
  <a:round/>  
  <a:headEnd type="none" w="med" len="med"/>  
  <a:tailEnd type="none" w="med" len="med"/>  
</a:  
lnBlToTr >  
```  
  
 In this example, one can see that the border line style defined with certain properties, such as a flat end line cap, a given width, head and tail end, color, etc.   *end example*]  
  
|Parent Elements|  
|---------------------|  
|tcPr (§21.1.3.17)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|bevel (Line Join Bevel)|§20.1.8.9|  
|custDash (Custom Dash)|§20.1.8.21|  
|extLst (Extension List)|§20.1.2.2.15|  
|gradFill (Gradient Fill)|§20.1.8.33|  
|headEnd (Line Head/End Style)|§20.1.8.38|  
|miter (Miter Line Join)|§20.1.8.43|  
|noFill (No Fill)|§20.1.8.44|  
|pattFill (Pattern Fill)|§20.1.8.47|  
|prstDash (Preset Dash)|§20.1.8.48|  
|round (Round Line Join)|§20.1.8.52|  
|solidFill (Solid Fill)|§20.1.8.54|  
|tailEnd (Tail line end style)|§20.1.8.57|  
  
|Attributes|Description|  
|----------------|-----------------|  
|algn (Stroke Alignment)|Specifies the alignment to be used for the underline stroke.<br /><br /> The possible values for this attribute are defined by the *ST_PenAlignment* simple type (§20.1.10.39).|  
|cap (Line Ending Cap Type)|Specifies the ending caps that should be used for this line. [*Note*: Examples of cap types are rounded, flat, etc. *end note*] If this attribute is omitted, than a value of square is assumed.<br /><br /> The possible values for this attribute are defined by the *ST_LineCap* simple type (§20.1.10.31).|  
|cmpd (Compound Line Type)|Specifies the compound line type to be used for the underline stroke. If this attribute is omitted, then a value of sng is assumed.<br /><br /> The possible values for this attribute are defined by the *ST_CompoundLine* simple type (§20.1.10.15).|  
|w (Line Width)|Specifies the width to be used for the underline stroke. If this attribute is omitted, then a value of 0 is assumed.<br /><br /> The possible values for this attribute are defined by the *ST_LineWidth* simple type (§20.1.10.35).|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_LineProperties) is located in §A.4.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BottomLeftToTopRightBorderLineProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the BottomLeftToTopRightBorderLineProperties class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BottomLeftToTopRightBorderLineProperties (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties" Usage="new DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the BottomLeftToTopRightBorderLineProperties class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BottomLeftToTopRightBorderLineProperties (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties" Usage="new DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the BottomLeftToTopRightBorderLineProperties class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BottomLeftToTopRightBorderLineProperties (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties : string -&gt; DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties" Usage="new DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the BottomLeftToTopRightBorderLineProperties class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="bottomLeftToTopRightBorderLineProperties.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Drawing.BottomLeftToTopRightBorderLineProperties.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>