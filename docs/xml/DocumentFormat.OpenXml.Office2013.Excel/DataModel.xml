<Type Name="DataModel" FullName="DocumentFormat.OpenXml.Office2013.Excel.DataModel">
  <TypeSignature Language="C#" Value="public class DataModel : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataModel extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Office2013.Excel.DataModel" />
  <TypeSignature Language="VB.NET" Value="Public Class DataModel&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type DataModel = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office2013.Excel.ModelTables), DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office2013.Excel.ModelRelationships), DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office2013.Excel.ExtensionList), DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.OfficeAvailability(DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the DataModel Class.This class is only available in Office2013. When the object is serialized out as xml, its qualified name is x15:dataModel.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 *2.4.62   dataModel*  
  
 *Target namespace:* http://schemas.microsoft.com/office/spreadsheetml/2010/11/main  
  
 A CT_DataModel element that specifies properties of spreadsheet data model.\<39>  
  
 The following W3C XML Schema ([XMLSCHEMA1] section 2.1) fragment specifies the contents of this element.  
  
 *\<xsd:element name="dataModel" type="CT_DataModel"/>*  
  
 See section 5.3 for the full W3C XML Schema ([XMLSCHEMA1] section 2.1).  
  
 *2.6.132   CT_DataModel*  
  
 *Target namespace:* http://schemas.microsoft.com/office/spreadsheetml/2010/11/main  
  
 *Referenced by:* dataModel  
  
 Specifies properties of a spreadsheet data model.\<108>  
  
 *Child Elements:*  
  
 *modelTables:* A *CT_ModelTables* (section 2.6.129) element that specifies tables in the spreadsheet data model.  
  
 *modelRelationships:* A *CT_ModelRelationships* (section 2.6.131) element that specifies active relationships in the spreadsheet data model.  
  
 *extLst:* A *CT_ExtensionList* ([ISO/IEC-29500-4] section A.2) element that specifies future extensibility for this element.  
  
 *Attributes:*  
  
 *minVersionLoad:* An *unsignedByte* [TYPE HERE: Needs normative reference] attribute that specifies [TYPE HERE]  
  
 *<\<REVIEW>>*The minimum version of Excel required to load the model in this workbook.*<\<REVIEW>>*  
  
 The following W3C XML Schema ([XMLSCHEMA1] section 2.1) fragment specifies the contents of this complex type.  
  
 *\<xsd:complexType name="CT_DataModel">*  
  
 *\<xsd:sequence>*  
  
 *\<xsd:element name="modelTables" minOccurs="0" maxOccurs="1" type="CT_ModelTables"/>*  
  
 *\<xsd:element name="modelRelationships" minOccurs="0" maxOccurs="1" type="CT_ModelRelationships"/>*  
  
 *\<xsd:element name="extLst" type="x:CT_ExtensionList" minOccurs="0" maxOccurs="1"/>*  
  
 *\</xsd:sequence>*  
  
 *\<xsd:attribute name="minVersionLoad" type="xsd:unsignedByte" use="optional" default="5"/>*  
  
 *\</xsd:complexType>*  
  
 See section 5.3 for the full W3C XML Schema ([XMLSCHEMA1] section 2.1).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataModel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2013.Excel.DataModel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the DataModel class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataModel (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2013.Excel.DataModel.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2013.Excel.DataModel : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Office2013.Excel.DataModel" Usage="new DocumentFormat.OpenXml.Office2013.Excel.DataModel childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the DataModel class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataModel (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2013.Excel.DataModel.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2013.Excel.DataModel : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Office2013.Excel.DataModel" Usage="new DocumentFormat.OpenXml.Office2013.Excel.DataModel childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the DataModel class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataModel (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2013.Excel.DataModel.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2013.Excel.DataModel : string -&gt; DocumentFormat.OpenXml.Office2013.Excel.DataModel" Usage="new DocumentFormat.OpenXml.Office2013.Excel.DataModel outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the DataModel class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2013.Excel.DataModel.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="dataModel.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtensionList">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Office2013.Excel.ExtensionList ExtensionList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Office2013.Excel.ExtensionList ExtensionList" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2013.Excel.DataModel.ExtensionList" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtensionList As ExtensionList" />
      <MemberSignature Language="F#" Value="member this.ExtensionList : DocumentFormat.OpenXml.Office2013.Excel.ExtensionList with get, set" Usage="DocumentFormat.OpenXml.Office2013.Excel.DataModel.ExtensionList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Office2013.Excel.ExtensionList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ExtensionList. Represents the following element tag in the schema: x15:extLst</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x15 = http://schemas.microsoft.com/office/spreadsheetml/2010/11/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2013.Excel.DataModel.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Office2013.Excel.DataModel.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinVersionLoad">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.ByteValue MinVersionLoad { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.ByteValue MinVersionLoad" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2013.Excel.DataModel.MinVersionLoad" />
      <MemberSignature Language="VB.NET" Value="Public Property MinVersionLoad As ByteValue" />
      <MemberSignature Language="F#" Value="member this.MinVersionLoad : DocumentFormat.OpenXml.ByteValue with get, set" Usage="DocumentFormat.OpenXml.Office2013.Excel.DataModel.MinVersionLoad" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "minVersionLoad")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.ByteValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>minVersionLoad.Represents the following attribute in the schema: minVersionLoad</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelRelationships">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Office2013.Excel.ModelRelationships ModelRelationships { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Office2013.Excel.ModelRelationships ModelRelationships" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2013.Excel.DataModel.ModelRelationships" />
      <MemberSignature Language="VB.NET" Value="Public Property ModelRelationships As ModelRelationships" />
      <MemberSignature Language="F#" Value="member this.ModelRelationships : DocumentFormat.OpenXml.Office2013.Excel.ModelRelationships with get, set" Usage="DocumentFormat.OpenXml.Office2013.Excel.DataModel.ModelRelationships" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Office2013.Excel.ModelRelationships</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ModelRelationships. Represents the following element tag in the schema: x15:modelRelationships</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x15 = http://schemas.microsoft.com/office/spreadsheetml/2010/11/main
            </remark>
      </Docs>
    </Member>
    <Member MemberName="ModelTables">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Office2013.Excel.ModelTables ModelTables { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Office2013.Excel.ModelTables ModelTables" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2013.Excel.DataModel.ModelTables" />
      <MemberSignature Language="VB.NET" Value="Public Property ModelTables As ModelTables" />
      <MemberSignature Language="F#" Value="member this.ModelTables : DocumentFormat.OpenXml.Office2013.Excel.ModelTables with get, set" Usage="DocumentFormat.OpenXml.Office2013.Excel.DataModel.ModelTables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Office2013.Excel.ModelTables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ModelTables. Represents the following element tag in the schema: x15:modelTables</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:x15 = http://schemas.microsoft.com/office/spreadsheetml/2010/11/main
            </remark>
      </Docs>
    </Member>
  </Members>
</Type>