<Type Name="DataLabels" FullName="DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabels">
  <TypeSignature Language="C#" Value="public class DataLabels : DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataLabels extends DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabels" />
  <TypeSignature Language="VB.NET" Value="Public Class DataLabels&#xA;Inherits OpenXmlLeafElement" />
  <TypeSignature Language="F#" Value="type DataLabels = class&#xA;    inherit OpenXmlLeafElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlLeafElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.OfficeAvailability(DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>Defines the DataLabels Class.</para>
      <para>This class is only available in Office2013.</para>
      <para> When the object is serialized out as xml, its qualified name is cs:dataLabels.</para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLabels ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabels.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the DataLabels class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.Boolean&gt; CategoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.Boolean&gt; CategoryName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabels.CategoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryName As EnumValue(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.CategoryName : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.Boolean&gt; with get, set" Usage="DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabels.CategoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "categoryName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para> categoryName.</para>
          <para>Represents the following attribute in the schema: categoryName </para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabels.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="dataLabels.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
        <summary>
            Creates a duplicate of this node.  
            </summary>
        <returns>Returns the cloned node. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LegendKey">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.Boolean&gt; LegendKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.Boolean&gt; LegendKey" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabels.LegendKey" />
      <MemberSignature Language="VB.NET" Value="Public Property LegendKey As EnumValue(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.LegendKey : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.Boolean&gt; with get, set" Usage="DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabels.LegendKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "legendKey")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para> legendKey.</para>
          <para>Represents the following attribute in the schema: legendKey </para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabels.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabels.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the local name of the element.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Percentage">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.Boolean&gt; Percentage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.Boolean&gt; Percentage" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabels.Percentage" />
      <MemberSignature Language="VB.NET" Value="Public Property Percentage As EnumValue(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.Percentage : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.Boolean&gt; with get, set" Usage="DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabels.Percentage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "percentage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para> percentage.</para>
          <para>Represents the following attribute in the schema: percentage </para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabelsPosition&gt; Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabelsPosition&gt; Position" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabels.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As EnumValue(Of DataLabelsPosition)" />
      <MemberSignature Language="F#" Value="member this.Position : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabelsPosition&gt; with get, set" Usage="DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabels.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "position")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabelsPosition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para> position.</para>
          <para>Represents the following attribute in the schema: position </para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeriesName">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.Boolean&gt; SeriesName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.Boolean&gt; SeriesName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabels.SeriesName" />
      <MemberSignature Language="VB.NET" Value="Public Property SeriesName As EnumValue(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.SeriesName : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.Boolean&gt; with get, set" Usage="DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabels.SeriesName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "seriesName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para> seriesName.</para>
          <para>Represents the following attribute in the schema: seriesName </para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.Boolean&gt; Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.Boolean&gt; Value" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabels.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As EnumValue(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.Value : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.Boolean&gt; with get, set" Usage="DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.DataLabels.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "value")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para> value.</para>
          <para>Represents the following attribute in the schema: value </para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>