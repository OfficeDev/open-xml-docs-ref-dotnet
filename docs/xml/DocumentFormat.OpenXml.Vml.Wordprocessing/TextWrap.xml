<Type Name="TextWrap" FullName="DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap">
  <TypeSignature Language="C#" Value="public class TextWrap : DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextWrap extends DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap" />
  <TypeSignature Language="VB.NET" Value="Public Class TextWrap&#xA;Inherits OpenXmlLeafElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlLeafElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>Text Wrapping.</para>
      <para> When the object is serialized out as xml, its qualified name is w10:wrap.</para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWrap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the TextWrap class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorX">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Vml.Wordprocessing.HorizontalAnchorValues&gt; AnchorX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Vml.Wordprocessing.HorizontalAnchorValues&gt; AnchorX" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap.AnchorX" />
      <MemberSignature Language="VB.NET" Value="Public Property AnchorX As EnumValue(Of HorizontalAnchorValues)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "anchorx")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Vml.Wordprocessing.HorizontalAnchorValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para> Horizontal Positioning Base.</para>
          <para>Represents the following attribute in the schema: anchorx </para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorY">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Vml.Wordprocessing.VerticalAnchorValues&gt; AnchorY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Vml.Wordprocessing.VerticalAnchorValues&gt; AnchorY" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap.AnchorY" />
      <MemberSignature Language="VB.NET" Value="Public Property AnchorY As EnumValue(Of VerticalAnchorValues)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "anchory")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Vml.Wordprocessing.VerticalAnchorValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para> Vertical Positioning Base.</para>
          <para>Represents the following attribute in the schema: anchory </para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
        <summary>
            Creates a duplicate of this node.  
            </summary>
        <returns>Returns the cloned node. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the local name of the element.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Side">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Vml.Wordprocessing.WrapSideValues&gt; Side { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Vml.Wordprocessing.WrapSideValues&gt; Side" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap.Side" />
      <MemberSignature Language="VB.NET" Value="Public Property Side As EnumValue(Of WrapSideValues)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "side")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Vml.Wordprocessing.WrapSideValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para> Wrapping side.</para>
          <para>Represents the following attribute in the schema: side </para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Vml.Wordprocessing.WrapValues&gt; Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Vml.Wordprocessing.WrapValues&gt; Type" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As EnumValue(Of WrapValues)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "type")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Vml.Wordprocessing.WrapValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para> Wrapping type.</para>
          <para>Represents the following attribute in the schema: type </para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>