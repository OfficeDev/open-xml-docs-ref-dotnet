<Type Name="ContextNode" FullName="DocumentFormat.OpenXml.Office2010.Ink.ContextNode">
  <TypeSignature Language="C#" Value="public class ContextNode : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContextNode extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Office2010.Ink.ContextNode" />
  <TypeSignature Language="VB.NET" Value="Public Class ContextNode&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type ContextNode = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office2010.Ink.ContextNodeProperty))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office2010.Ink.SourceLink))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office2010.Ink.DestinationLink))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the ContextNode Class. When the object is serialized out as xml, its qualified name is msink:context.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 *2.3.7   context*  
  
 *Target namespace:* http://schemas.microsoft.com/ink/2010/main  
  
 A CT_CtxNode element that specifies the context of a set of Ink traces stored in a *traceGroup* element as specified in [InkML].  
  
 This element MUST be a child of an *emma:interpretation* element ([EMMA] section 3.2). The *emma:interpretation* element must be a child of an *inkml::annotationXML* element ([InkML] section 6.3.2). The *inkml:annotationXML* element MUST be a child of an *inkml:traceGroup* element ([InkML] section 3.3.1).  
  
 The following W3C XML Schema ([XMLSCHEMA1] section 2.1) fragment specifies the contents of this element.  
  
 *\<xsd:element name="context" type="CT_CtxNode"/>*  
  
 See section 5.7 for the full W3C XML Schema ([XMLSCHEMA1] section 2.1).  
  
 *2.5.47   CT_CtxNode*  
  
 *Target namespace:* http://schemas.microsoft.com/ink/2010/main  
  
 *Referenced by:* context  
  
 The *CT_CtxNode* defines an Ink context node and its properties. A context node is a logical collection of Ink traces. When Ink is drawn by the user, the Ink traces are analyzed and organized into a hierarchy of context nodes. Each context node has a type (specified by the *type* attribute) and can have zero or more child content nodes. For example, a *writingRegion* content node can have one or more *paragraph* content nodes. In addition, context nodes can have relational links to each other. For example, if a word is underlined, the context node representing the ink word and the context node representing the underline are linked.  
  
 For example, the following figure shows ink that is analyzed as shown in the following code example.  
  
 *Figure 29: Example ink text*  
  
 *\<context type="writingRegion"/>*  
  
 *...*  
  
 *\<context type="paragraph"/>*  
  
 *...*  
  
 *\<context type="line"/>*  
  
 *...*  
  
 *\<context type="inkWord"/>*  
  
 *...*  
  
 *\<context type="inkWord">*  
  
 *\<destinationLink direction="with" ref="id of inkDrawing below"/>*  
  
 *\</context>*  
  
 *\<context type="inkDrawing" semanticType="underline">*  
  
 *\<sourceLink direction="with" ref="id of inkWord above"/>*  
  
 *\<context>*  
  
 *Child Elements:*  
  
 *property:* A *CT_Property* element that specifies a user-defined binary data property.  
  
 *sourceLink:* A *CT_CtxLink* element that specifies a semantic link from another content node.  
  
 *destinationLink:* A *CT_CtxLink* element that specifies a semantic link to another context node.  
  
 *Attributes:*  
  
 *id:* An *ST_Guid* attribute that specifies a GUID for this context node.  
  
 *type:* An *ST_CtxNodeType* attribute that specifies the type of this context node.  
  
 *rotatedBoundingBox:* An ST_Points attribute that specifies a rectangular region encompassed by this context node. Applies to all context node types.  
  
 *alignmentLevel:* An *xsd:int* attribute ([XMLSCHEMA2] section 3.3.17) that specifies the alignment level of a paragraph type context node. If this attribute is present, the value of the type attribute MUST be set to "paragraph".  
  
 *contentType:* An *xsd:int* attribute ([XMLSCHEMA2] section 3.3.17) that specifies the content type of the context node. If this attribute is present, the value of the type attribute MUST be set to "paragraph".  
  
 *ascender:* An ST_Points attribute that specifies the ascender. If this attribute is present, the value of the type attribute MUST be set to "line".  
  
 *descender:* An ST_Points attribute that specifies the descender. If this attribute is present, the value of the type attribute MUST be set to "line".  
  
 *baseline:* An ST_Points attribute that specifies the baseline of a line. If this attribute is present, the value of the type attribute MUST be set to "line".  
  
 *midline:* An ST_Points attribute that specifies the midline of a line. If this attribute is present, the value of the type attribute MUST be set to "line".  
  
 *customRecognizerId:* An *ST_Guid* attribute that specifies the globally unique identifier (GUID) that represents the custom ink recognizer.  If this attribute is present, the value of the type attribute MUST be set to "customRecognizer".  
  
 *mathML:* An *xsd:string* attribute ([XMLSCHEMA2] section 3.2.1) that specifies a string of Math Markup Language ([MathML2.0]). If this attribute is present, the value of the type attribute MUST be set to "mathEquation".  
  
 *mathStruct:* An *xsd:string* attribute ([XMLSCHEMA2] section 3.2.1) that specifies a math *struct*. If this attribute is present, the value of the type attribute MUST be set to "mathStruct".  
  
 *mathSymbol:* An *xsd:string* attribute ([XMLSCHEMA2] section 3.2.1) that specifies a math symbol. If this attribute is present, the value of the type attribute MUST be set to "mathSymbol".  
  
 *beginModifierType:* An *xsd:string* attribute ([XMLSCHEMA2] section 3.2.1) that specifies the beginning modifier type. If this attribute is present, the value of the type attribute MUST be set to "inkDrawing", "nonInkDrawing", or "mixedDrawing".  
  
 *endModifierType:* An *xsd:string* attribute ([XMLSCHEMA2] section 3.2.1) that specifies the ending modifier type. If this attribute is present, the value of the type attribute MUST be set to "inkDrawing", "nonInkDrawing", or "mixedDrawing".  
  
 *rotationAngle:* An *xsd:int* attribute ([XMLSCHEMA2] section 3.3.17) that specifies the rotation angle of the drawing, in degrees. If this attribute is present, the value of the type attribute MUST be set to "inkDrawing", "nonInkDrawing", or "mixedDrawing".  
  
 *hotPoints:* An *ST_Points* attribute that specifies coordinates of the hot points of the drawing. If this attribute is present, the value of the type attribute MUST be set to "inkDrawing", "nonInkDrawing", or "mixedDrawing".  
  
 *centroid:* An *ST_Point* attribute that specifies the center point of the drawing. If this attribute is present, the value of the type attribute MUST be set to "inkDrawing", "nonInkDrawing", or "mixedDrawing".  
  
 *semanticType:* An *ST_SemanticType* attribute that specifies the semantic type of the writing region or drawing. If this attribute is present, the value of the type attribute MUST be set to "writingRegion", "inkDrawing", "nonInkDrawing", or "mixedDrawing".  
  
 *shapeName:* An *xsd:string* attribute ([XMLSCHEMA2] section 3.2.1) that specifies the shape name. If this attribute is present, the value of the type attribute MUST be set to "inkDrawing", "nonInkDrawing", or "mixedDrawing".  
  
 *shapeGeometry:* An *ST_Points* attribute that specifies coordinates of the line segments of a drawing. If this attribute is present, the value of the type attribute MUST be set to "nonInkDrawing".  
  
 The following W3C XML Schema ([XMLSCHEMA1] section 2.1) fragment specifies the contents of this complex type.  
  
 *\<xsd:complexType name="CT_CtxNode">*  
  
 *\<xsd:sequence>*  
  
 *\<xsd:element name="property" type="CT_Property" minOccurs="0" maxOccurs="unbounded"/>*  
  
 *\<xsd:element name="sourceLink" type="CT_CtxLink" minOccurs="0" maxOccurs="unbounded"/>*  
  
 *\<xsd:element name="destinationLink" type="CT_CtxLink" minOccurs="0" maxOccurs="unbounded"/>*  
  
 *\</xsd:sequence>*  
  
 *\<xsd:attribute name="id" type="ST_Guid" use="optional"/>*  
  
 *\<xsd:attribute name="type" type="ST_CtxNodeType" use="required"/>*  
  
 *\<xsd:attribute name="rotatedBoundingBox" type="ST_Points" use="optional"/>*  
  
 *\<xsd:attribute name="alignmentLevel" type="xsd:int" use="optional" default="0"/>*  
  
 *\<xsd:attribute name="contentType" type="xsd:int" use="optional" default="0"/>*  
  
 *\<xsd:attribute name="ascender" type="ST_Points" use="optional" default="0,0"/>*  
  
 *\<xsd:attribute name="descender" type="ST_Points" use="optional" default="0,0"/>*  
  
 *\<xsd:attribute name="baseline" type="ST_Points" use="optional" default="0,0"/>*  
  
 *\<xsd:attribute name="midline" type="ST_Points" use="optional" default="0,0"/>*  
  
 *\<xsd:attribute name="customRecognizerId" type="ST_Guid" use="optional"/>*  
  
 *\<xsd:attribute name="mathML" type="xsd:string" use="optional" default=""/>*  
  
 *\<xsd:attribute name="mathStruct" type="xsd:string" use="optional" default=""/>*  
  
 *\<xsd:attribute name="mathSymbol" type="xsd:string" use="optional" default=""/>*  
  
 *\<xsd:attribute name="beginModifierType" type="xsd:string" use="optional" default=""/>*  
  
 *\<xsd:attribute name="endModifierType" type="xsd:string" use="optional" default=""/>*  
  
 *\<xsd:attribute name="rotationAngle" type="xsd:int" use="optional" default="0"/>*  
  
 *\<xsd:attribute name="hotPoints" type="ST_Points" use="optional"/>*  
  
 *\<xsd:attribute name="centroid" type="ST_Point" use="optional"/>*  
  
 *\<xsd:attribute name="semanticType" type="ST_SemanticType" use="optional" default="none"/>*  
  
 *\<xsd:attribute name="shapeName" type="xsd:string" use="optional" default=""/>*  
  
 *\<xsd:attribute name="shapeGeometry" type="ST_Points" use="optional"/>*  
  
 *\</xsd:complexType>*  
  
 See section 5.7 for the full W3C XML Schema ([XMLSCHEMA1] section 2.1).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the ContextNode class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextNode (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2010.Ink.ContextNode : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Office2010.Ink.ContextNode" Usage="new DocumentFormat.OpenXml.Office2010.Ink.ContextNode childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the ContextNode class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextNode (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2010.Ink.ContextNode : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Office2010.Ink.ContextNode" Usage="new DocumentFormat.OpenXml.Office2010.Ink.ContextNode childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the ContextNode class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextNode (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2010.Ink.ContextNode : string -&gt; DocumentFormat.OpenXml.Office2010.Ink.ContextNode" Usage="new DocumentFormat.OpenXml.Office2010.Ink.ContextNode outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the ContextNode class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignmentLevel">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Int32Value AlignmentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Int32Value AlignmentLevel" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.AlignmentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AlignmentLevel As Int32Value" />
      <MemberSignature Language="F#" Value="member this.AlignmentLevel : DocumentFormat.OpenXml.Int32Value with get, set" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.AlignmentLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "alignmentLevel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Int32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>alignmentLevel.Represents the following attribute in the schema: alignmentLevel</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ascender">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue Ascender { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue Ascender" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.Ascender" />
      <MemberSignature Language="VB.NET" Value="Public Property Ascender As StringValue" />
      <MemberSignature Language="F#" Value="member this.Ascender : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.Ascender" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "ascender")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ascender.Represents the following attribute in the schema: ascender</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Baseline">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue Baseline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue Baseline" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.Baseline" />
      <MemberSignature Language="VB.NET" Value="Public Property Baseline As StringValue" />
      <MemberSignature Language="F#" Value="member this.Baseline : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.Baseline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "baseline")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>baseline.Represents the following attribute in the schema: baseline</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginModifierType">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue BeginModifierType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue BeginModifierType" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.BeginModifierType" />
      <MemberSignature Language="VB.NET" Value="Public Property BeginModifierType As StringValue" />
      <MemberSignature Language="F#" Value="member this.BeginModifierType : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.BeginModifierType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "beginModifierType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>beginModifierType.Represents the following attribute in the schema: beginModifierType</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Centroid">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue Centroid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue Centroid" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.Centroid" />
      <MemberSignature Language="VB.NET" Value="Public Property Centroid As StringValue" />
      <MemberSignature Language="F#" Value="member this.Centroid : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.Centroid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "centroid")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>centroid.Represents the following attribute in the schema: centroid</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="contextNode.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Int32Value ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Int32Value ContentType" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As Int32Value" />
      <MemberSignature Language="F#" Value="member this.ContentType : DocumentFormat.OpenXml.Int32Value with get, set" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "contentType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Int32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>contentType.Represents the following attribute in the schema: contentType</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomRecognizerId">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue CustomRecognizerId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue CustomRecognizerId" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.CustomRecognizerId" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomRecognizerId As StringValue" />
      <MemberSignature Language="F#" Value="member this.CustomRecognizerId : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.CustomRecognizerId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "customRecognizerId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>customRecognizerId.Represents the following attribute in the schema: customRecognizerId</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Descender">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue Descender { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue Descender" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.Descender" />
      <MemberSignature Language="VB.NET" Value="Public Property Descender As StringValue" />
      <MemberSignature Language="F#" Value="member this.Descender : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.Descender" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "descender")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>descender.Represents the following attribute in the schema: descender</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndModifierType">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue EndModifierType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue EndModifierType" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.EndModifierType" />
      <MemberSignature Language="VB.NET" Value="Public Property EndModifierType As StringValue" />
      <MemberSignature Language="F#" Value="member this.EndModifierType : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.EndModifierType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "endModifierType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>endModifierType.Represents the following attribute in the schema: endModifierType</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HotPoints">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.ListValue&lt;DocumentFormat.OpenXml.StringValue&gt; HotPoints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.ListValue`1&lt;class DocumentFormat.OpenXml.StringValue&gt; HotPoints" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.HotPoints" />
      <MemberSignature Language="VB.NET" Value="Public Property HotPoints As ListValue(Of StringValue)" />
      <MemberSignature Language="F#" Value="member this.HotPoints : DocumentFormat.OpenXml.ListValue&lt;DocumentFormat.OpenXml.StringValue&gt; with get, set" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.HotPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "hotPoints")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.ListValue&lt;DocumentFormat.OpenXml.StringValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>hotPoints.Represents the following attribute in the schema: hotPoints</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue Id" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As StringValue" />
      <MemberSignature Language="F#" Value="member this.Id : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "id")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>id.Represents the following attribute in the schema: id</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MathML">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue MathML { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue MathML" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.MathML" />
      <MemberSignature Language="VB.NET" Value="Public Property MathML As StringValue" />
      <MemberSignature Language="F#" Value="member this.MathML : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.MathML" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "mathML")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>mathML.Represents the following attribute in the schema: mathML</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MathStruct">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue MathStruct { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue MathStruct" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.MathStruct" />
      <MemberSignature Language="VB.NET" Value="Public Property MathStruct As StringValue" />
      <MemberSignature Language="F#" Value="member this.MathStruct : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.MathStruct" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "mathStruct")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>mathStruct.Represents the following attribute in the schema: mathStruct</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MathSymbol">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue MathSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue MathSymbol" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.MathSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property MathSymbol As StringValue" />
      <MemberSignature Language="F#" Value="member this.MathSymbol : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.MathSymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "mathSymbol")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>mathSymbol.Represents the following attribute in the schema: mathSymbol</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Midline">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue Midline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue Midline" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.Midline" />
      <MemberSignature Language="VB.NET" Value="Public Property Midline As StringValue" />
      <MemberSignature Language="F#" Value="member this.Midline : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.Midline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "midline")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>midline.Represents the following attribute in the schema: midline</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotatedBoundingBox">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.ListValue&lt;DocumentFormat.OpenXml.StringValue&gt; RotatedBoundingBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.ListValue`1&lt;class DocumentFormat.OpenXml.StringValue&gt; RotatedBoundingBox" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.RotatedBoundingBox" />
      <MemberSignature Language="VB.NET" Value="Public Property RotatedBoundingBox As ListValue(Of StringValue)" />
      <MemberSignature Language="F#" Value="member this.RotatedBoundingBox : DocumentFormat.OpenXml.ListValue&lt;DocumentFormat.OpenXml.StringValue&gt; with get, set" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.RotatedBoundingBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "rotatedBoundingBox")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.ListValue&lt;DocumentFormat.OpenXml.StringValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>rotatedBoundingBox.Represents the following attribute in the schema: rotatedBoundingBox</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationAngle">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Int32Value RotationAngle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Int32Value RotationAngle" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.RotationAngle" />
      <MemberSignature Language="VB.NET" Value="Public Property RotationAngle As Int32Value" />
      <MemberSignature Language="F#" Value="member this.RotationAngle : DocumentFormat.OpenXml.Int32Value with get, set" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.RotationAngle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "rotationAngle")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Int32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>rotationAngle.Represents the following attribute in the schema: rotationAngle</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SemanticType">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue SemanticType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue SemanticType" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.SemanticType" />
      <MemberSignature Language="VB.NET" Value="Public Property SemanticType As StringValue" />
      <MemberSignature Language="F#" Value="member this.SemanticType : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.SemanticType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "semanticType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>semanticType.Represents the following attribute in the schema: semanticType</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeGeometry">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.ListValue&lt;DocumentFormat.OpenXml.StringValue&gt; ShapeGeometry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.ListValue`1&lt;class DocumentFormat.OpenXml.StringValue&gt; ShapeGeometry" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.ShapeGeometry" />
      <MemberSignature Language="VB.NET" Value="Public Property ShapeGeometry As ListValue(Of StringValue)" />
      <MemberSignature Language="F#" Value="member this.ShapeGeometry : DocumentFormat.OpenXml.ListValue&lt;DocumentFormat.OpenXml.StringValue&gt; with get, set" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.ShapeGeometry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "shapeGeometry")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.ListValue&lt;DocumentFormat.OpenXml.StringValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>shapeGeometry.Represents the following attribute in the schema: shapeGeometry</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeName">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue ShapeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue ShapeName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.ShapeName" />
      <MemberSignature Language="VB.NET" Value="Public Property ShapeName As StringValue" />
      <MemberSignature Language="F#" Value="member this.ShapeName : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.ShapeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "shapeName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>shapeName.Represents the following attribute in the schema: shapeName</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue Type" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As StringValue" />
      <MemberSignature Language="F#" Value="member this.Type : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2010.Ink.ContextNode.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "type")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>type.Represents the following attribute in the schema: type</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>