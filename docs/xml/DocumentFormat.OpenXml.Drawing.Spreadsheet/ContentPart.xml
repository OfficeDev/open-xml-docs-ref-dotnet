<Type Name="ContentPart" FullName="DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart">
  <TypeSignature Language="C#" Value="public class ContentPart : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContentPart extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentPart&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type ContentPart = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office2010.Excel.Drawing.ExcelNonVisualContentPartShapeProperties), DocumentFormat.OpenXml.FileFormatVersions.Office2010 | DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office2010.Excel.Drawing.ApplicationNonVisualDrawingProperties), DocumentFormat.OpenXml.FileFormatVersions.Office2010 | DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office2010.Excel.Drawing.Transform2D), DocumentFormat.OpenXml.FileFormatVersions.Office2010 | DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Office2010.Excel.Drawing.OfficeArtExtensionList), DocumentFormat.OpenXml.FileFormatVersions.Office2010 | DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.OfficeAvailability(DocumentFormat.OpenXml.FileFormatVersions.Office2010)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the ContentPart Class.This class is only available in Office2010. When the object is serialized out as xml, its qualified name is xdr:contentPart.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **contentPart (Content Part)**  
  
 This element specifies a reference to XML content in a format not defined by /IEC 29500. [*Note*: This part allows the native use of other commonly used interchange formats, such as:  
  
-   MathML (http://www.w3.org/TR/MathML2/)  
  
-   SMIL (http://www.w3.org/TR/REC-smil/)  
  
-   SVG (http://www.w3.org/TR/SVG11/)  
  
 *end note*]  
  
 The relationship type of the explicit relationship specified by this element shall be *http://schemas.openxmlformats.org/officeDocument/2006/customXml* and have a TargetMode attribute value of *Internal*. If an application cannot process content of the content type specified by the targeted part, then it should continue to process the file. If possible, it should also provide some indication that unknown content was not imported.  
  
 [*Example*: Consider a SpreadsheetML document which includes the following SVG markup in a part named svg1.xml:  
  
```xml  
<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">  
<!--======================================================================-->  
<!--=  Copyright 2000 World Wide Web Consortium, (Massachusetts          =-->  
<!--=  Institute of Technology, Institut National de Recherche en        =-->  
<!--=  Informatique et en Automatique, Keio University). All Rights      =-->  
<!--=  Reserved. See http://www.w3.org/Consortium/Legal/.                =-->  
<!--======================================================================-->  
<!-- =====================================================================-->  
<!--                                                                     -->  
<!-- color-datatypes-BE-01.svg                                           -->  
<!-- renamed for 1.1 suite to color-prop-02-f.svg                        -->  
<!--                                                                     -->  
<!-- Author : Chris Lilley,  12-Aug-2000                                 -->  
<!--          1.1 revision by Rick Graham                                -->  
<!--          Revised for SVGT/B: Benoit Bezaire Jul/02/2002             -->  
<!--          More revision  CL  -->  
<!--======================================================================-->  
<svg version="1.1" baseProfile="full" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="svg-root" width="100%" height="100%" viewBox="0 0 480 360">  
  <title id="test-title">color-prop-02-f.svg</title>  
  <desc id="test-desc">Test that viewer has the basic capability to render X11colors, using any of the equivalent forms.</desc>  
  <!--================================================================-->  
  <!--Content of Test Case follows…                  ===============-->  
  <!--================================================================-->  
  <g id="test-body-content">  
    <!-- groups of five colors  -->  
    <g>  
      <circle cx="75" cy="40" r="20" fill="crimson"/>  
      <circle cx="115" cy="40" r="20" fill="#DC143C"/>  
      <circle cx="75" cy="80" r="20" fill="rgb(220,20,60)"/>  
      <circle cx="115" cy="80" r="20" fill="rgb(86.274509803921568627450980392157%,7.8431372549019607843137254901961%,23.529411764705882352941176470588%)"/>  
    </g>  
    <g>  
      <circle cx="200" cy="40" r="20" fill="palegreen"/>  
      <circle cx="240" cy="40" r="20" fill="#98FB98"/>  
      <circle cx="200" cy="80" r="20" fill="rgb(152, 251, 152)"/>  
      <circle cx="240" cy="80" r="20" fill="rgb(59.60784313725490196078431372549%,98.431372549019607843137254901961%,59.60784313725490196078431372549%)"/>  
    </g>  
    <g>  
      <circle cx="325" cy="40" r="20" fill="royalblue"/>  
      <circle cx="365" cy="40" r="20" fill="#4169E1"/>  
      <circle cx="325" cy="80" r="20" fill="rgb(65, 105, 225)"/>  
      <circle cx="365" cy="80" r="20" fill="rgb(25.490196078431372549019607843137%,41.176470588235294117647058823529%,88.235294117647058823529411764706%)"/>  
    </g>  
    <g>  
      <circle cx="75" cy="135" r="20" fill="firebrick"/>  
      <circle cx="115" cy="135" r="20" fill="#B22222"/>  
      <circle cx="75" cy="175" r="20" fill="rgb(178,34,34)"/>  
      <circle cx="115" cy="175" r="20" fill="rgb(69.803921568627450980392156862745%,13.333333333333333333333333333333%,13.333333333333333333333333333333%)"/>  
    </g>  
    <g>  
      <circle cx="200" cy="135" r="20" fill="seagreen"/>  
      <circle cx="240" cy="135" r="20" fill="#2E8B57"/>  
      <circle cx="200" cy="175" r="20" fill="rgb(46, 139, 87)"/>  
      <circle cx="240" cy="175" r="20" fill="rgb(18.039215686274509803921568627451%,54.509803921568627450980392156863%,34.117647058823529411764705882353%)"/>  
    </g>  
    <g>  
      <circle cx="325" cy="135" r="20" fill="mediumblue"/>  
      <circle cx="365" cy="135" r="20" fill="#0000CD"/>  
      <circle cx="325" cy="175" r="20" fill="rgb(0, 0, 205)"/>  
      <circle cx="365" cy="175" r="20" fill="rgb(0%,0%,80.39215686274509803921568627451%)"/>  
    </g>  
    <g>  
      <circle cx="75" cy="230" r="20" fill="indianred"/>  
      <circle cx="115" cy="230" r="20" fill="#CD5C5C"/>  
      <circle cx="75" cy="270" r="20" fill="rgb(205, 92, 92)"/>  
      <circle cx="115" cy="270" r="20" fill="rgb(80.39215686274509803921568627451%,36.078431372549019607843137254902%,36.078431372549019607843137254902%)"/>  
    </g>  
    <g>  
      <circle cx="200" cy="230" r="20" fill="lawngreen"/>  
      <circle cx="240" cy="230" r="20" fill="#700"/>  
      <circle cx="200" cy="270" r="20" fill="rgb(124, 252, 0)"/>  
      <circle cx="240" cy="270" r="20" fill="rgb(48.627450980392156862745098039216%,98.823529411764705882352941176471%,0%)"/>  
    </g>  
    <g>  
      <circle cx="325" cy="230" r="20" fill="mediumturquoise"/>  
      <circle cx="365" cy="230" r="20" fill="#48D1CC"/>  
      <circle cx="325" cy="270" r="20" fill="rgb(72, 209, 204)"/>  
      <circle cx="365" cy="270" r="20" fill="rgb(28.235294117647058823529411764706%,81.960784313725490196078431372549%,80%)"/>  
    </g>  
  </g>  
  <text id="revision" x="10" y="340" font-size="40" stroke="none" fill="black">$Revision: 1.6 $</text>  
  <rect id="test-frame" x="1" y="1" width="478" height="358" fill="none" stroke="#000000"/>  
</svg>  
```  
  
 The SpreadsheetML Drawing part would reference this content as follows:  
  
```xml  
<wsDr>  
  <twoCellAnchor>  
    <from>  
      <col>3</col>   
      <colOff>152400</colOff>   
      <row>5</row>   
      <rowOff>123825</rowOff>   
    </from>  
    <to>  
      <col>8</col>   
      <colOff>266700</colOff>   
      <row>22</row>   
      <rowOff>38100</rowOff>   
    </to>  
  </twoCellAnchor>  
  <contentPart r:id="svg1"/>  
</wsDr>  
```  
  
 The contentPart element specifies that the SVG markup targeted by the relationship with an ID of *svg1* is part of the SpreadsheetML document. Examining the contents of the corresponding relationship part item, we can see the targets for that relationship:  
  
```xml  
<Relationships … >  
  …  <Relationship Id="svg1" TargetMode="Internal" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXml" Target="svg1.xml" />  
  …</Relationships>  
```  
  
 The corresponding relationship part item shows that the file to be imported is named *svg1.xml*. *end example*]  
  
|Parent Elements|  
|---------------------|  
|absoluteAnchor (§20.5.2.1); oneCellAnchor (§20.5.2.24); twoCellAnchor (§20.5.2.33)|  
  
  [*Note*: The W3C XML Schema definition of this element’s content model (CT_Rel) is located in §A.4.5. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the ContentPart class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentPart (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart" Usage="new DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the ContentPart class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentPart (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart" Usage="new DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the ContentPart class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentPart (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart : string -&gt; DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart" Usage="new DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the ContentPart class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationNonVisualDrawingProperties">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Office2010.Excel.Drawing.ApplicationNonVisualDrawingProperties ApplicationNonVisualDrawingProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Office2010.Excel.Drawing.ApplicationNonVisualDrawingProperties ApplicationNonVisualDrawingProperties" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart.ApplicationNonVisualDrawingProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationNonVisualDrawingProperties As ApplicationNonVisualDrawingProperties" />
      <MemberSignature Language="F#" Value="member this.ApplicationNonVisualDrawingProperties : DocumentFormat.OpenXml.Office2010.Excel.Drawing.ApplicationNonVisualDrawingProperties with get, set" Usage="DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart.ApplicationNonVisualDrawingProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Office2010.Excel.Drawing.ApplicationNonVisualDrawingProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ApplicationNonVisualDrawingProperties. Represents the following element tag in the schema: xdr14:nvPr</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:xdr14 = http://schemas.microsoft.com/office/excel/2010/spreadsheetDrawing
            </remark>
      </Docs>
    </Member>
    <Member MemberName="BlackWhiteMode">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.BlackWhiteModeValues&gt; BlackWhiteMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Drawing.BlackWhiteModeValues&gt; BlackWhiteMode" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart.BlackWhiteMode" />
      <MemberSignature Language="VB.NET" Value="Public Property BlackWhiteMode As EnumValue(Of BlackWhiteModeValues)" />
      <MemberSignature Language="F#" Value="member this.BlackWhiteMode : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.BlackWhiteModeValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart.BlackWhiteMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "bwMode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Drawing.BlackWhiteModeValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>bwMode.Represents the following attribute in the schema: bwMode</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="contentPart.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcelNonVisualContentPartShapeProperties">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Office2010.Excel.Drawing.ExcelNonVisualContentPartShapeProperties ExcelNonVisualContentPartShapeProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Office2010.Excel.Drawing.ExcelNonVisualContentPartShapeProperties ExcelNonVisualContentPartShapeProperties" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart.ExcelNonVisualContentPartShapeProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property ExcelNonVisualContentPartShapeProperties As ExcelNonVisualContentPartShapeProperties" />
      <MemberSignature Language="F#" Value="member this.ExcelNonVisualContentPartShapeProperties : DocumentFormat.OpenXml.Office2010.Excel.Drawing.ExcelNonVisualContentPartShapeProperties with get, set" Usage="DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart.ExcelNonVisualContentPartShapeProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Office2010.Excel.Drawing.ExcelNonVisualContentPartShapeProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ExcelNonVisualContentPartShapeProperties. Represents the following element tag in the schema: xdr14:nvContentPartPr</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:xdr14 = http://schemas.microsoft.com/office/excel/2010/spreadsheetDrawing
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OfficeArtExtensionList">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Office2010.Excel.Drawing.OfficeArtExtensionList OfficeArtExtensionList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Office2010.Excel.Drawing.OfficeArtExtensionList OfficeArtExtensionList" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart.OfficeArtExtensionList" />
      <MemberSignature Language="VB.NET" Value="Public Property OfficeArtExtensionList As OfficeArtExtensionList" />
      <MemberSignature Language="F#" Value="member this.OfficeArtExtensionList : DocumentFormat.OpenXml.Office2010.Excel.Drawing.OfficeArtExtensionList with get, set" Usage="DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart.OfficeArtExtensionList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Office2010.Excel.Drawing.OfficeArtExtensionList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>OfficeArtExtensionList. Represents the following element tag in the schema: xdr14:extLst</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:xdr14 = http://schemas.microsoft.com/office/excel/2010/spreadsheetDrawing
            </remark>
      </Docs>
    </Member>
    <Member MemberName="RelationshipId">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue RelationshipId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue RelationshipId" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart.RelationshipId" />
      <MemberSignature Language="VB.NET" Value="Public Property RelationshipId As StringValue" />
      <MemberSignature Language="F#" Value="member this.RelationshipId : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart.RelationshipId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(19, "id")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>id.Represents the following attribute in the schema: r:id</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark> xmlns:r=http://schemas.openxmlformats.org/officeDocument/2006/relationships
            </remark>
      </Docs>
    </Member>
    <Member MemberName="Transform2D">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Office2010.Excel.Drawing.Transform2D Transform2D { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Office2010.Excel.Drawing.Transform2D Transform2D" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart.Transform2D" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform2D As Transform2D" />
      <MemberSignature Language="F#" Value="member this.Transform2D : DocumentFormat.OpenXml.Office2010.Excel.Drawing.Transform2D with get, set" Usage="DocumentFormat.OpenXml.Drawing.Spreadsheet.ContentPart.Transform2D" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Office2010.Excel.Drawing.Transform2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Transform2D. Represents the following element tag in the schema: xdr14:xfrm</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:xdr14 = http://schemas.microsoft.com/office/excel/2010/spreadsheetDrawing
            </remark>
      </Docs>
    </Member>
  </Members>
</Type>