<Type Name="Diagram" FullName="DocumentFormat.OpenXml.Vml.Office.Diagram">
  <TypeSignature Language="C#" Value="public class Diagram : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Diagram extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Vml.Office.Diagram" />
  <TypeSignature Language="VB.NET" Value="Public Class Diagram&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type Diagram = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Vml.Office.RelationTable))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>VML Diagram. When the object is serialized out as xml, its qualified name is o:diagram.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 `diagram (VML Diagram)`  
  
 This element specifies semantic information for a limited set of structured diagrams that have VML representations.  Diagrams should be defined using DrawingML; this representation is included for compatibility with applications that rely on VML.  The following diagram types have VML representations:  
  
 Diagram Type  
  
 Example (non-normative)  
  
 Organization chart  
  
 57cc93fe-79e6-49ef-8785-3ba4698dcd84  
  
 Radial  
  
 c198a052-8e18-494e-9a83-7fbe638e55a4  
  
 Cycle  
  
 6738e99e-ca3b-4079-967b-96a7ff32dd37  
  
 Pyramid  
  
 ae303fd6-f642-4ae2-8ca7-1b82dc40378c  
  
 Venn  
  
 923346fc-abc6-4a98-8ab7-75de81cf2de6  
  
 Bulls-eye  
  
 61db2044-672f-4478-8a73-f8d709811155  
  
 Each of these types of diagrams contains shapes that are positioned relative to one another.  Each shape also has optional associated text.  
  
|Parent Elements|  
|---------------------|  
|background (Part 1, §17.2.1); group (§14.1.2.7); hdrShapeDefaults (§9.7.2.1); object (Part 1, §17.3.3.19); pict (§9.2.2.2); pict (§9.5.1); shapeDefaults (§9.7.2.2)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|relationtable (Diagram Relationship Table)|§14.2.2.25|  
  
  [*Note*: The W3C XML Schema definition of this element’s content model (CT_Diagram) is located in §A.6.2. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Diagram ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Vml.Office.Diagram.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the Diagram class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Diagram (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Vml.Office.Diagram.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Vml.Office.Diagram : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Vml.Office.Diagram" Usage="new DocumentFormat.OpenXml.Vml.Office.Diagram childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the Diagram class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Diagram (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Vml.Office.Diagram.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Vml.Office.Diagram : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Vml.Office.Diagram" Usage="new DocumentFormat.OpenXml.Vml.Office.Diagram childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the Diagram class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Diagram (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Vml.Office.Diagram.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Vml.Office.Diagram : string -&gt; DocumentFormat.OpenXml.Vml.Office.Diagram" Usage="new DocumentFormat.OpenXml.Vml.Office.Diagram outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the Diagram class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormat">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.TrueFalseValue AutoFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.TrueFalseValue AutoFormat" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.Diagram.AutoFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFormat As TrueFalseValue" />
      <MemberSignature Language="F#" Value="member this.AutoFormat : DocumentFormat.OpenXml.TrueFalseValue with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.Diagram.AutoFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "autoformat")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.TrueFalseValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diagram Automatic Format.Represents the following attribute in the schema: autoformat</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoLayout">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.TrueFalseValue AutoLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.TrueFalseValue AutoLayout" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.Diagram.AutoLayout" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoLayout As TrueFalseValue" />
      <MemberSignature Language="F#" Value="member this.AutoLayout : DocumentFormat.OpenXml.TrueFalseValue with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.Diagram.AutoLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "autolayout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.TrueFalseValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diagram Automatic Layout.Represents the following attribute in the schema: autolayout</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseTextScale">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.IntegerValue BaseTextScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.IntegerValue BaseTextScale" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.Diagram.BaseTextScale" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseTextScale As IntegerValue" />
      <MemberSignature Language="F#" Value="member this.BaseTextScale : DocumentFormat.OpenXml.IntegerValue with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.Diagram.BaseTextScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "dgmbasetextscale")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.IntegerValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diagram Base Font Size.Represents the following attribute in the schema: dgmbasetextscale</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Int32Value" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Vml.Office.Diagram.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="diagram.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstrainBounds">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue ConstrainBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue ConstrainBounds" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.Diagram.ConstrainBounds" />
      <MemberSignature Language="VB.NET" Value="Public Property ConstrainBounds As StringValue" />
      <MemberSignature Language="F#" Value="member this.ConstrainBounds : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.Diagram.ConstrainBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "constrainbounds")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diagram Layout Extents.Represents the following attribute in the schema: constrainbounds</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extension">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Vml.ExtensionHandlingBehaviorValues&gt; Extension { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Vml.ExtensionHandlingBehaviorValues&gt; Extension" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.Diagram.Extension" />
      <MemberSignature Language="VB.NET" Value="Public Property Extension As EnumValue(Of ExtensionHandlingBehaviorValues)" />
      <MemberSignature Language="F#" Value="member this.Extension : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Vml.ExtensionHandlingBehaviorValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.Diagram.Extension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(26, "ext")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Vml.ExtensionHandlingBehaviorValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>VML Extension Handling Behavior.Represents the following attribute in the schema: v:ext</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
        <remark> xmlns:v=urn:schemas-microsoft-com:vml
            </remark>
      </Docs>
    </Member>
    <Member MemberName="FontSize">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.IntegerValue FontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.IntegerValue FontSize" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.Diagram.FontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property FontSize As IntegerValue" />
      <MemberSignature Language="F#" Value="member this.FontSize : DocumentFormat.OpenXml.IntegerValue with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.Diagram.FontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "dgmfontsize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.IntegerValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diagram Font Size.Represents the following attribute in the schema: dgmfontsize</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Int32Value" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.Diagram.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Vml.Office.Diagram.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationTable">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Vml.Office.RelationTable RelationTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Vml.Office.RelationTable RelationTable" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.Diagram.RelationTable" />
      <MemberSignature Language="VB.NET" Value="Public Property RelationTable As RelationTable" />
      <MemberSignature Language="F#" Value="member this.RelationTable : DocumentFormat.OpenXml.Vml.Office.RelationTable with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.Diagram.RelationTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Vml.Office.RelationTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diagram Relationship Table. Represents the following element tag in the schema: o:relationtable</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Vml.Office.RelationTable" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.TrueFalseValue Reverse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.TrueFalseValue Reverse" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.Diagram.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Property Reverse As TrueFalseValue" />
      <MemberSignature Language="F#" Value="member this.Reverse : DocumentFormat.OpenXml.TrueFalseValue with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.Diagram.Reverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "reverse")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.TrueFalseValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diagram Reverse Direction.Represents the following attribute in the schema: reverse</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleX">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.IntegerValue ScaleX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.IntegerValue ScaleX" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.Diagram.ScaleX" />
      <MemberSignature Language="VB.NET" Value="Public Property ScaleX As IntegerValue" />
      <MemberSignature Language="F#" Value="member this.ScaleX : DocumentFormat.OpenXml.IntegerValue with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.Diagram.ScaleX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "dgmscalex")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.IntegerValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diagram Layout X Scale.Represents the following attribute in the schema: dgmscalex</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Int32Value" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleY">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.IntegerValue ScaleY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.IntegerValue ScaleY" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.Diagram.ScaleY" />
      <MemberSignature Language="VB.NET" Value="Public Property ScaleY As IntegerValue" />
      <MemberSignature Language="F#" Value="member this.ScaleY : DocumentFormat.OpenXml.IntegerValue with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.Diagram.ScaleY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "dgmscaley")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.IntegerValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diagram Layout Y Scale.Represents the following attribute in the schema: dgmscaley</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Int32Value" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.IntegerValue Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.IntegerValue Style" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.Diagram.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As IntegerValue" />
      <MemberSignature Language="F#" Value="member this.Style : DocumentFormat.OpenXml.IntegerValue with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.Diagram.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "dgmstyle")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.IntegerValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diagram Style Options.Represents the following attribute in the schema: dgmstyle</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Int32Value" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>