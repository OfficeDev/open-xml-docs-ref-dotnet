<Type Name="OleObject" FullName="DocumentFormat.OpenXml.Vml.Office.OleObject">
  <TypeSignature Language="C#" Value="public class OleObject : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OleObject extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Vml.Office.OleObject" />
  <TypeSignature Language="VB.NET" Value="Public Class OleObject&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type OleObject = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Vml.Office.LinkType))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Vml.Office.LockedField))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>DocumentFormat.OpenXml.ChildElementInfo(typeof(DocumentFormat.OpenXml.Vml.Office.FieldCodes))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Embedded OLE Object. When the object is serialized out as xml, its qualified name is o:OLEObject.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **OLEObject (Embedded OLE Object)**  
  
 This element specifies an embedded object.  
  
 [*Example*: The following markup defines a reference to an embedded object using Bonobo. The ProgId attribute contains the shared library that contains the widget. The content type of the referred part identifies the referenced Bonobo object.  
  
```xml  
<OLEObject r:id="rb1" ProgId="OAFIID:Bonobo_Sample_Calculator">  
  …   
</OLEObject>  
```  
  
 The target of the relationship with ID *rb1*, defines the Bonobo object itself. This example shows a link to a sample Bonobo widget taken from the  article http://www.ibm.com/developerworks/webservices/library/co-bnbo2.html, which also provides an introduction to Bonobo. *end example*]  
  
 [*Example*: The following demonstrates a video file embedded in a WordprocessingML document:  
  
```xml  
<w:object … >  
  <v:shape id="_x0000_i1025" type="#_x0000_t75"   
  style="width:1in;height:24pt" o:ole="">  
  <v:imagedata r:id="rId4" o:title=""/>  
  </v:shape>  
  <o:OLEObject Type="Embed" ProgID="AVIFile" ShapeID="_x0000_i1025"   
  DrawAspect="Content" ObjectID="_1219561732" r:id="rId5"/>  
</w:object>  
```  
  
 *end example*]  
  
|Parent Elements|  
|---------------------|  
|background (Part 1, §17.2.1); hdrShapeDefaults (§9.7.2.1); object (Part 1, §17.3.3.19); pict (§9.2.2.2); pict (§9.5.1); shapeDefaults (§9.7.2.2)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|FieldCodes (WordprocessingML Field Switches)|§14.2.2.12|  
|LinkType (Embedded Object Alternate Image Request)|§14.2.2.17|  
|LockedField (Embedded Object Cannot Be Refreshed)|§14.2.2.19|  
  
  [*Note*: The W3C XML Schema definition of this element’s content model (CT_OLEObject) is located in §A.6.2. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Vml.Office.OleObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the OleObject class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleObject (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Vml.Office.OleObject.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Vml.Office.OleObject : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Vml.Office.OleObject" Usage="new DocumentFormat.OpenXml.Vml.Office.OleObject childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the OleObject class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleObject (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Vml.Office.OleObject.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Vml.Office.OleObject : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Vml.Office.OleObject" Usage="new DocumentFormat.OpenXml.Vml.Office.OleObject childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>Initializes a new instance of the OleObject class with the specified child elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleObject (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Vml.Office.OleObject.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Vml.Office.OleObject : string -&gt; DocumentFormat.OpenXml.Vml.Office.OleObject" Usage="new DocumentFormat.OpenXml.Vml.Office.OleObject outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>Initializes a new instance of the OleObject class from outer XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Vml.Office.OleObject.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="oleObject.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawAspect">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Vml.Office.OleDrawAspectValues&gt; DrawAspect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Vml.Office.OleDrawAspectValues&gt; DrawAspect" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.OleObject.DrawAspect" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawAspect As EnumValue(Of OleDrawAspectValues)" />
      <MemberSignature Language="F#" Value="member this.DrawAspect : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Vml.Office.OleDrawAspectValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.OleObject.DrawAspect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "DrawAspect")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Vml.Office.OleDrawAspectValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>OLE Object Representation.Represents the following attribute in the schema: DrawAspect</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCodes">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Vml.Office.FieldCodes FieldCodes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Vml.Office.FieldCodes FieldCodes" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.OleObject.FieldCodes" />
      <MemberSignature Language="VB.NET" Value="Public Property FieldCodes As FieldCodes" />
      <MemberSignature Language="F#" Value="member this.FieldCodes : DocumentFormat.OpenXml.Vml.Office.FieldCodes with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.OleObject.FieldCodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Vml.Office.FieldCodes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WordprocessingML Field Switches. Represents the following element tag in the schema: o:FieldCodes</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Vml.Office.FieldCodes" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue Id" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.OleObject.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As StringValue" />
      <MemberSignature Language="F#" Value="member this.Id : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.OleObject.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(19, "id")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Relationship.Represents the following attribute in the schema: r:id</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>To be added.</remarks>
        <remark> xmlns:r=http://schemas.openxmlformats.org/officeDocument/2006/relationships
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LinkType">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Vml.Office.LinkType LinkType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Vml.Office.LinkType LinkType" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.OleObject.LinkType" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkType As LinkType" />
      <MemberSignature Language="F#" Value="member this.LinkType : DocumentFormat.OpenXml.Vml.Office.LinkType with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.OleObject.LinkType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Vml.Office.LinkType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Embedded Object Alternate Image Request. Represents the following element tag in the schema: o:LinkType</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Vml.Office.LinkType" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.OleObject.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Vml.Office.OleObject.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockedField">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Vml.Office.LockedField LockedField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Vml.Office.LockedField LockedField" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.OleObject.LockedField" />
      <MemberSignature Language="VB.NET" Value="Public Property LockedField As LockedField" />
      <MemberSignature Language="F#" Value="member this.LockedField : DocumentFormat.OpenXml.Vml.Office.LockedField with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.OleObject.LockedField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Vml.Office.LockedField</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Embedded Object Cannot Be Refreshed. Represents the following element tag in the schema: o:LockedField</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Vml.Office.LockedField" />.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
      </Docs>
    </Member>
    <Member MemberName="ObjectId">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue ObjectId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue ObjectId" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.OleObject.ObjectId" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectId As StringValue" />
      <MemberSignature Language="F#" Value="member this.ObjectId : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.OleObject.ObjectId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "ObjectID")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>OLE Object Unique ID.Represents the following attribute in the schema: ObjectID</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgId">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue ProgId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue ProgId" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.OleObject.ProgId" />
      <MemberSignature Language="VB.NET" Value="Public Property ProgId As StringValue" />
      <MemberSignature Language="F#" Value="member this.ProgId : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.OleObject.ProgId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "ProgID")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>OLE Object Application.Represents the following attribute in the schema: ProgID</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeId">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue ShapeId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue ShapeId" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.OleObject.ShapeId" />
      <MemberSignature Language="VB.NET" Value="Public Property ShapeId As StringValue" />
      <MemberSignature Language="F#" Value="member this.ShapeId : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.OleObject.ShapeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "ShapeID")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>OLE Object Shape.Represents the following attribute in the schema: ShapeID</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Vml.Office.OleValues&gt; Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Vml.Office.OleValues&gt; Type" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.OleObject.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As EnumValue(Of OleValues)" />
      <MemberSignature Language="F#" Value="member this.Type : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Vml.Office.OleValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.OleObject.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "Type")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Vml.Office.OleValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>OLE Object Type.Represents the following attribute in the schema: Type</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateMode">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Vml.Office.OleUpdateModeValues&gt; UpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Vml.Office.OleUpdateModeValues&gt; UpdateMode" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.OleObject.UpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMode As EnumValue(Of OleUpdateModeValues)" />
      <MemberSignature Language="F#" Value="member this.UpdateMode : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Vml.Office.OleUpdateModeValues&gt; with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.OleObject.UpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "UpdateMode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Vml.Office.OleUpdateModeValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>OLE Update Mode.Represents the following attribute in the schema: UpdateMode</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>