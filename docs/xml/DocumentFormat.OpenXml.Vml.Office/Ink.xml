<Type Name="Ink" FullName="DocumentFormat.OpenXml.Vml.Office.Ink">
  <TypeSignature Language="C#" Value="public class Ink : DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Ink extends DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Vml.Office.Ink" />
  <TypeSignature Language="VB.NET" Value="Public Class Ink&#xA;Inherits OpenXmlLeafElement" />
  <TypeSignature Language="F#" Value="type Ink = class&#xA;    inherit OpenXmlLeafElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlLeafElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ink. When the object is serialized out as xml, its qualified name is o:ink.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **ink (Ink)**  
  
 This element specifies the presence of an ink object.  An ink object is a VML object which allows applications to store data for ink annotations. [*Note:* Applications are encouraged to use an open-ink format, such as the Ink Markup Language (InkML). *end note*]  
  
 [*Example*:  
  
```xml  
<v:shape … >  
  <o:ink i="…" annotation="t" contentType="application/inkml+xml"/>  
</v:shape>  
<v:shape … >  
  <o:ink i="AMgFHQSWC+YFASAAaAwAAAAAAMA…" annotation="t"    contentType="application/x-ms-ink"/>  
</v:shape  
>  
```  
  
 *end example*]  
  
|Parent Elements|  
|---------------------|  
|background (Part 1, §17.2.1); hdrShapeDefaults (§9.7.2.1); object (Part 1, §17.3.3.19); pict (§9.2.2.2); pict (§9.5.1); polyline (§14.1.2.15); shape (§14.1.2.19); shapeDefaults (§9.7.2.2)|  
  
  [*Note*: The W3C XML Schema definition of this element’s content model (CT_Ink) is located in §A.6.2. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Ink ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Vml.Office.Ink.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the Ink class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationFlag">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.TrueFalseValue AnnotationFlag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.TrueFalseValue AnnotationFlag" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.Ink.AnnotationFlag" />
      <MemberSignature Language="VB.NET" Value="Public Property AnnotationFlag As TrueFalseValue" />
      <MemberSignature Language="F#" Value="member this.AnnotationFlag : DocumentFormat.OpenXml.TrueFalseValue with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.Ink.AnnotationFlag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "annotation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.TrueFalseValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Annotation Flag.Represents the following attribute in the schema: annotation</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Vml.Office.Ink.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="ink.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InkData">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Base64BinaryValue InkData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Base64BinaryValue InkData" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.Ink.InkData" />
      <MemberSignature Language="VB.NET" Value="Public Property InkData As Base64BinaryValue" />
      <MemberSignature Language="F#" Value="member this.InkData : DocumentFormat.OpenXml.Base64BinaryValue with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.Ink.InkData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "i")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Base64BinaryValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ink Data.Represents the following attribute in the schema: i</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.Ink.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Vml.Office.Ink.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>