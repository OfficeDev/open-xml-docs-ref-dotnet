<Type Name="Proxy" FullName="DocumentFormat.OpenXml.Vml.Office.Proxy">
  <TypeSignature Language="C#" Value="public class Proxy : DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Proxy extends DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Vml.Office.Proxy" />
  <TypeSignature Language="VB.NET" Value="Public Class Proxy&#xA;Inherits OpenXmlLeafElement" />
  <TypeSignature Language="F#" Value="type Proxy = class&#xA;    inherit OpenXmlLeafElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlLeafElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("DomGen", "2.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Shape Reference. When the object is serialized out as xml, its qualified name is o:proxy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **proxy (Shape Reference)**  
  
 This element specifies an entry in a r element rule that contains a reference to one or more shapes that are participating in the rule.  
  
 [*Example*: The following rule defines a connection between two shapes.  The shape with id _s1036 connects shape _s1033 to _s1032:  
  
```xml  
<o:shapelayout v:ext="edit">  
  <o:rules v:ext="edit">  
    <o:r id="V:Rule1" type="connector" idref="#_s1036">  
      <o:proxy start="" idref="#_s1033" connectloc="0"/>  
      <o:proxy end="" idref="#_s1032" connectloc="2"/>  
    </o:r>  
  </o:rules>  
</o:shapelayout>  
```  
  
 *end example*]  
  
|Parent Elements|  
|---------------------|  
|r (§14.2.2.22)|  
  
|Attributes|Description|  
|----------------|-----------------|  
|connectloc (Connection Location)|Specifies the location on the shape where the connector is attached.  The value is an index into the list of connection points defined in the shape - see the connectlocs attribute.  Default is 0.  Only used in a connector rule.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *int* datatype.|  
|end (End Point Connection Flag)|Specifies whether the connector's end point is connected to the shape.  Default is *false*.  Only used in a connector rule.<br /><br /> The possible values for this attribute are defined by the *ST_TrueFalseBlank* simple type (§15.1.2.6).|  
|idref (Proxy Shape Reference)|Specifies a reference to a shape in the current document.  Default is no value.  A shape name is used as the reference mechanism; this is not a relationship ID.<br /><br /> This attribute indicates that the referenced shape is part of this rule.  Two or more proxy elements are used for an alignment rule.  A connector rule uses one or two, indicating which shapes the connector is attached to.<br /><br /> The possible values for this attribute are defined by the W3C XML Schema *string* datatype.|  
|start (Start Point Connection Flag)|Specifies whether the connector’s start point is connected to the shape.  Default is *false*.  Only used in a connector rule.  If both start and end are specified the later one takes precedence.<br /><br /> The possible values for this attribute are defined by the *ST_TrueFalseBlank* simple type (§15.1.2.6).|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_Proxy) is located in §A.6.2. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Proxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Vml.Office.Proxy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the Proxy class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Vml.Office.Proxy.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="proxy.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionLocation">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Int32Value ConnectionLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Int32Value ConnectionLocation" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.Proxy.ConnectionLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionLocation As Int32Value" />
      <MemberSignature Language="F#" Value="member this.ConnectionLocation : DocumentFormat.OpenXml.Int32Value with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.Proxy.ConnectionLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "connectloc")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Int32Value</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Connection Location.Represents the following attribute in the schema: connectloc</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.Int32Value" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.TrueFalseBlankValue End { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.TrueFalseBlankValue End" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.Proxy.End" />
      <MemberSignature Language="VB.NET" Value="Public Property End As TrueFalseBlankValue" />
      <MemberSignature Language="F#" Value="member this.End : DocumentFormat.OpenXml.TrueFalseBlankValue with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.Proxy.End" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "end")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.TrueFalseBlankValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>End Point Connection Flag.Represents the following attribute in the schema: end</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.Proxy.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="DocumentFormat.OpenXml.Vml.Office.Proxy.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local name of the element.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeReference">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue ShapeReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue ShapeReference" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.Proxy.ShapeReference" />
      <MemberSignature Language="VB.NET" Value="Public Property ShapeReference As StringValue" />
      <MemberSignature Language="F#" Value="member this.ShapeReference : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.Proxy.ShapeReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "idref")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Proxy Shape Reference.Represents the following attribute in the schema: idref</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.StringValue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.TrueFalseBlankValue Start { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.TrueFalseBlankValue Start" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Vml.Office.Proxy.Start" />
      <MemberSignature Language="VB.NET" Value="Public Property Start As TrueFalseBlankValue" />
      <MemberSignature Language="F#" Value="member this.Start : DocumentFormat.OpenXml.TrueFalseBlankValue with get, set" Usage="DocumentFormat.OpenXml.Vml.Office.Proxy.Start" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.SchemaAttr(0, "start")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.TrueFalseBlankValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Start Point Connection Flag.Represents the following attribute in the schema: start</summary>
        <value>Returns <see cref="T:DocumentFormat.OpenXml.EnumValue`1" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>