<Type Name="IPackage" FullName="DocumentFormat.OpenXml.Packaging.IPackage">
  <TypeSignature Language="C#" Value="public interface IPackage" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPackage" FrameworkAlternate="openxml-3.0.0" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Packaging.IPackage" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPackage" />
  <TypeSignature Language="F#" Value="type IPackage = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IPackage" FrameworkAlternate="openxml-3.0.1" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            An abstraction similar to <see cref="T:System.IO.Packaging.Package" /> that allows for pass through implementations
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.IPackagePart CreatePart (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class DocumentFormat.OpenXml.Packaging.IPackagePart CreatePart(class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.IPackage.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePart (partUri As Uri, contentType As String, compressionOption As CompressionOption) As IPackagePart" />
      <MemberSignature Language="F#" Value="abstract member CreatePart : Uri * string * System.IO.Packaging.CompressionOption -&gt; DocumentFormat.OpenXml.Packaging.IPackagePart" Usage="iPackage.CreatePart (partUri, contentType, compressionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.IPackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="partUri">The URI of the new part.</param>
        <param name="contentType">The content type of the data stream.</param>
        <param name="compressionOption">The compression option for the data stream.</param>
        <summary>
            Creates a new part with a given URI, content type, and compression option.
            </summary>
        <returns>The new created part.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeletePart">
      <MemberSignature Language="C#" Value="public void DeletePart (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeletePart(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.IPackage.DeletePart(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeletePart (uri As Uri)" />
      <MemberSignature Language="F#" Value="abstract member DeletePart : Uri -&gt; unit" Usage="iPackage.DeletePart uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">The URI of the part to delete.</param>
        <summary>
            Deletes a part with a given URI from the package.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileOpenAccess">
      <MemberSignature Language="C#" Value="public System.IO.FileAccess FileOpenAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAccess FileOpenAccess" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.IPackage.FileOpenAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileOpenAccess As FileAccess" />
      <MemberSignature Language="F#" Value="member this.FileOpenAccess : System.IO.FileAccess" Usage="DocumentFormat.OpenXml.Packaging.IPackage.FileOpenAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the file access of the package
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.IPackagePart GetPart (Uri uriTarget);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class DocumentFormat.OpenXml.Packaging.IPackagePart GetPart(class System.Uri uriTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.IPackage.GetPart(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPart (uriTarget As Uri) As IPackagePart" />
      <MemberSignature Language="F#" Value="abstract member GetPart : Uri -&gt; DocumentFormat.OpenXml.Packaging.IPackagePart" Usage="iPackage.GetPart uriTarget" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.IPackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriTarget" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uriTarget">Uri of target</param>
        <summary>
            Gets a part for the given <paramref name="uriTarget" />.
            </summary>
        <returns>Part for given uri.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParts">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.Packaging.IPackagePart&gt; GetParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.Packaging.IPackagePart&gt; GetParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.IPackage.GetParts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParts () As IEnumerable(Of IPackagePart)" />
      <MemberSignature Language="F#" Value="abstract member GetParts : unit -&gt; seq&lt;DocumentFormat.OpenXml.Packaging.IPackagePart&gt;" Usage="iPackage.GetParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.Packaging.IPackagePart&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a collection of parts for the package
            </summary>
        <returns>A collection of parts.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PackageProperties">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.IPackageProperties PackageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.IPackageProperties PackageProperties" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.IPackage.PackageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PackageProperties As IPackageProperties" />
      <MemberSignature Language="F#" Value="member this.PackageProperties : DocumentFormat.OpenXml.Packaging.IPackageProperties" Usage="DocumentFormat.OpenXml.Packaging.IPackage.PackageProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.IPackageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the core properties of the package
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartExists">
      <MemberSignature Language="C#" Value="public bool PartExists (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PartExists(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.IPackage.PartExists(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function PartExists (partUri As Uri) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member PartExists : Uri -&gt; bool" Usage="iPackage.PartExists partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">The uri of the part.</param>
        <summary>
            Indicates whether a part with a given URI is in the package
            </summary>
        <returns>true if a part with the specified <paramref name="partUri" /> exists in the package; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Relationships">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.IRelationshipCollection Relationships { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.IRelationshipCollection Relationships" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.IPackage.Relationships" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Relationships As IRelationshipCollection" />
      <MemberSignature Language="F#" Value="member this.Relationships : DocumentFormat.OpenXml.Packaging.IRelationshipCollection" Usage="DocumentFormat.OpenXml.Packaging.IPackage.Relationships" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.IRelationshipCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the relationships of the package.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.IPackage.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="F#" Value="abstract member Save : unit -&gt; unit" Usage="iPackage.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Saves the package
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
