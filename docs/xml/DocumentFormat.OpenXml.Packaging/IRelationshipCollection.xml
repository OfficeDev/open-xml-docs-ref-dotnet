<Type Name="IRelationshipCollection" FullName="DocumentFormat.OpenXml.Packaging.IRelationshipCollection">
  <TypeSignature Language="C#" Value="public interface IRelationshipCollection : System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.Packaging.IPackageRelationship&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRelationshipCollection implements class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.Packaging.IPackageRelationship&gt;, class System.Collections.IEnumerable" FrameworkAlternate="openxml-3.0.0" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Packaging.IRelationshipCollection" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRelationshipCollection&#xA;Implements IEnumerable(Of IPackageRelationship)" />
  <TypeSignature Language="F#" Value="type IRelationshipCollection = interface&#xA;    interface seq&lt;IPackageRelationship&gt;&#xA;    interface IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IRelationshipCollection implements class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.Packaging.IPackageRelationship&gt;, class System.Collections.IEnumerable" FrameworkAlternate="openxml-3.0.1" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.Packaging.IPackageRelationship&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A collection of relationships for a <see cref="T:DocumentFormat.OpenXml.Packaging.IPackage" /> of <see cref="T:DocumentFormat.OpenXml.Packaging.IPackagePart" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.IRelationshipCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (id As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Contains : string -&gt; bool" Usage="iRelationshipCollection.Contains id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The id of the relationship</param>
        <summary>
            Indicates whether a relationship with a given ID is defined.
            </summary>
        <returns>true if a relationship exists; otherwise, no.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.IRelationshipCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="DocumentFormat.OpenXml.Packaging.IRelationshipCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a count of the registered relationships.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.IPackageRelationship Create (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string? id = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class DocumentFormat.OpenXml.Packaging.IPackageRelationship Create(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.IRelationshipCollection.Create(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (targetUri As Uri, targetMode As TargetMode, relationshipType As String, Optional id As String = Nothing) As IPackageRelationship" />
      <MemberSignature Language="F#" Value="abstract member Create : Uri * System.IO.Packaging.TargetMode * string * string -&gt; DocumentFormat.OpenXml.Packaging.IPackageRelationship" Usage="iRelationshipCollection.Create (targetUri, targetMode, relationshipType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.IPackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">The URI of the target part</param>
        <param name="targetMode">Indicates if the target part is internal or external to the package.</param>
        <param name="relationshipType">A URI that uniquely defines the role of the relationship</param>
        <param name="id">A unique XML identifier</param>
        <summary>
            Creates a relationship to a part with a given URI, target mode, relationship type, and (optional) identifier.
            </summary>
        <returns>The relationship to the specified part.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.IPackageRelationship this[string id] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.IPackageRelationship Item(string)" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.IRelationshipCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(id As String) As IPackageRelationship" />
      <MemberSignature Language="F#" Value="member this.Item(string) : DocumentFormat.OpenXml.Packaging.IPackageRelationship" Usage="DocumentFormat.OpenXml.Packaging.IRelationshipCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.IPackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Id of relationship</param>
        <summary>
            Gets a relationship by id.
            </summary>
        <value>A package relationship</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.IRelationshipCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (id As String)" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; unit" Usage="iRelationshipCollection.Remove id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The id of the relationship.</param>
        <summary>
            Deletes the specified relationship.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
