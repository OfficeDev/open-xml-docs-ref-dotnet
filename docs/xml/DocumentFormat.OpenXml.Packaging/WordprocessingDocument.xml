<Type Name="WordprocessingDocument" FullName="DocumentFormat.OpenXml.Packaging.WordprocessingDocument">
  <TypeSignature Language="C#" Value="public class WordprocessingDocument : DocumentFormat.OpenXml.Packaging.OpenXmlPackage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WordprocessingDocument extends DocumentFormat.OpenXml.Packaging.OpenXmlPackage" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Packaging.WordprocessingDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class WordprocessingDocument&#xA;Inherits OpenXmlPackage" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines WordprocessingDocument - an OpenXmlPackage represents a Word document.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WordprocessingDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a WordprocessingDocument.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCoreFilePropertiesPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart AddCoreFilePropertiesPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart AddCoreFilePropertiesPart() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddCoreFilePropertiesPart" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCoreFilePropertiesPart () As CoreFilePropertiesPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a CoreFilePropertiesPart to the WordprocessingDocument.
            </summary>
        <returns>The newly added CoreFilePropertiesPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCustomFilePropertiesPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart AddCustomFilePropertiesPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart AddCustomFilePropertiesPart() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddCustomFilePropertiesPart" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCustomFilePropertiesPart () As CustomFilePropertiesPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a CustomFilePropertiesPart to the WordprocessingDocument.
            </summary>
        <returns>The newly added CustomFilePropertiesPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDigitalSignatureOriginPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart AddDigitalSignatureOriginPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart AddDigitalSignatureOriginPart() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddDigitalSignatureOriginPart" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDigitalSignatureOriginPart () As DigitalSignatureOriginPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a DigitalSignatureOriginPart to the WordprocessingDocument.
            </summary>
        <returns>The newly added DigitalSignatureOriginPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExtendedFilePropertiesPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart AddExtendedFilePropertiesPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart AddExtendedFilePropertiesPart() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddExtendedFilePropertiesPart" />
      <MemberSignature Language="VB.NET" Value="Public Function AddExtendedFilePropertiesPart () As ExtendedFilePropertiesPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a ExtendedFilePropertiesPart to the WordprocessingDocument.
            </summary>
        <returns>The newly added ExtendedFilePropertiesPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMainDocumentPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.MainDocumentPart AddMainDocumentPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.MainDocumentPart AddMainDocumentPart() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddMainDocumentPart" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMainDocumentPart () As MainDocumentPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.MainDocumentPart</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates the MainDocumentPart and add it to this document.
            </summary>
        <returns>The newly added MainDocumentPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNewPart&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T AddNewPart&lt;T&gt; (string contentType, string id) where T : DocumentFormat.OpenXml.Packaging.OpenXmlPart;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T AddNewPart&lt;(class DocumentFormat.OpenXml.Packaging.OpenXmlPart) T&gt;(string contentType, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddNewPart``1(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddNewPart(Of T As OpenXmlPart) (contentType As String, id As String) As T" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>DocumentFormat.OpenXml.Packaging.OpenXmlPart</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The class of the part.</typeparam>
        <param name="contentType">The content type of the part. Must match the defined content type if the part is fixed content type.</param>
        <param name="id">The relationship id. The id will be automaticly generated if this param is null.</param>
        <summary>
            Adds a new part of type <typeparamref name="T" />.
            </summary>
        <returns>The added part.</returns>
        <remarks>Mainly used for adding not-fixed content type part - ImagePart, etc</remarks>
        <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">When the part is not allowed to be referenced by this part.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">When the part is fixed content type and the passed in contentType does not match the defined content type.</exception>
        <exception cref="T:System.ArgumentNullException">Thrown when "contentType" is null reference.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddQuickAccessToolbarCustomizationsPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart AddQuickAccessToolbarCustomizationsPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart AddQuickAccessToolbarCustomizationsPart() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddQuickAccessToolbarCustomizationsPart" />
      <MemberSignature Language="VB.NET" Value="Public Function AddQuickAccessToolbarCustomizationsPart () As QuickAccessToolbarCustomizationsPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a QuickAccessToolbarCustomizationsPart to the WordprocessingDocument.
            </summary>
        <returns>The newly added QuickAccessToolbarCustomizationsPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRibbonAndBackstageCustomizationsPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart AddRibbonAndBackstageCustomizationsPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart AddRibbonAndBackstageCustomizationsPart() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddRibbonAndBackstageCustomizationsPart" />
      <MemberSignature Language="VB.NET" Value="Public Function AddRibbonAndBackstageCustomizationsPart () As RibbonAndBackstageCustomizationsPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a RibbonAndBackstageCustomizationsPart to the WordprocessingDocument, this part is only available in Office2010.
            </summary>
        <returns>The newly added RibbonExtensibilityPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRibbonExtensibilityPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart AddRibbonExtensibilityPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart AddRibbonExtensibilityPart() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddRibbonExtensibilityPart" />
      <MemberSignature Language="VB.NET" Value="Public Function AddRibbonExtensibilityPart () As RibbonExtensibilityPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a RibbonExtensibilityPart to the WordprocessingDocument.
            </summary>
        <returns>The newly added RibbonExtensibilityPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddThumbnailPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.ThumbnailPart AddThumbnailPart (DocumentFormat.OpenXml.Packaging.ThumbnailPartType partType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.ThumbnailPart AddThumbnailPart(valuetype DocumentFormat.OpenXml.Packaging.ThumbnailPartType partType) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddThumbnailPart(DocumentFormat.OpenXml.Packaging.ThumbnailPartType)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddThumbnailPart (partType As ThumbnailPartType) As ThumbnailPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.ThumbnailPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partType" Type="DocumentFormat.OpenXml.Packaging.ThumbnailPartType" />
      </Parameters>
      <Docs>
        <param name="partType">The type of the ThumbnailPart.</param>
        <summary>
            Adds a ThumbnailPart to the WordprocessingDocument.
            </summary>
        <returns>The newly added ThumbnailPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddThumbnailPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.ThumbnailPart AddThumbnailPart (string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.ThumbnailPart AddThumbnailPart(string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddThumbnailPart(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddThumbnailPart (contentType As String) As ThumbnailPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.ThumbnailPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentType">The content type of the ThumbnailPart.</param>
        <summary>
            Adds a ThumbnailPart to the WordprocessingDocument.
            </summary>
        <returns>The newly added ThumbnailPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddWebExTaskpanesPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart AddWebExTaskpanesPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart AddWebExTaskpanesPart() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddWebExTaskpanesPart" />
      <MemberSignature Language="VB.NET" Value="Public Function AddWebExTaskpanesPart () As WebExTaskpanesPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a WebExTaskpanesPart to the WordprocessingDocument, this part is only available in Office2013.
            </summary>
        <returns>The newly added WebExTaskpanesPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeDocumentType">
      <MemberSignature Language="C#" Value="public void ChangeDocumentType (DocumentFormat.OpenXml.WordprocessingDocumentType newType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChangeDocumentType(valuetype DocumentFormat.OpenXml.WordprocessingDocumentType newType) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.ChangeDocumentType(DocumentFormat.OpenXml.WordprocessingDocumentType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeDocumentType (newType As WordprocessingDocumentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newType" Type="DocumentFormat.OpenXml.WordprocessingDocumentType" />
      </Parameters>
      <Docs>
        <param name="newType">The new type of the document.</param>
        <summary>
            Changes the document type.
            </summary>
        <remarks>The MainDocumentPart will be changed.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CoreFilePropertiesPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart CoreFilePropertiesPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart CoreFilePropertiesPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.CoreFilePropertiesPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CoreFilePropertiesPart As CoreFilePropertiesPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the CoreFilePropertiesPart of the WordprocessingDocument.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument Create (System.IO.Packaging.Package package, DocumentFormat.OpenXml.WordprocessingDocumentType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument Create(class System.IO.Packaging.Package package, valuetype DocumentFormat.OpenXml.WordprocessingDocumentType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Create(System.IO.Packaging.Package,DocumentFormat.OpenXml.WordprocessingDocumentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="type" Type="DocumentFormat.OpenXml.WordprocessingDocumentType" />
      </Parameters>
      <Docs>
        <param name="package">The specified OpenXml package.</param>
        <param name="type">The type of the WordprocessingDocument.</param>
        <summary>
            Creates a new instance of the WordprocessingDocument class from the spcified package.
            </summary>
        <returns>A new instance of WordprocessingDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "package" is null reference.</exception>
        <exception cref="T:System.IO.IOException">Thrown when "package" is not opened with Write access.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument Create (System.IO.Stream stream, DocumentFormat.OpenXml.WordprocessingDocumentType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument Create(class System.IO.Stream stream, valuetype DocumentFormat.OpenXml.WordprocessingDocumentType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Create(System.IO.Stream,DocumentFormat.OpenXml.WordprocessingDocumentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="type" Type="DocumentFormat.OpenXml.WordprocessingDocumentType" />
      </Parameters>
      <Docs>
        <param name="stream">The IO stream on which to create the WordprocessingDocument.</param>
        <param name="type">The type of the WordprocessingDocument.</param>
        <summary>
            Creates a new instance of the WordprocessingDocument class from the IO stream.
            </summary>
        <returns>A new instance of WordprocessingDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "stream" is null reference.</exception>
        <exception cref="T:System.IO.IOException">Thrown when "stream" is not opened with Write access.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument Create (string path, DocumentFormat.OpenXml.WordprocessingDocumentType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument Create(string path, valuetype DocumentFormat.OpenXml.WordprocessingDocumentType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Create(System.String,DocumentFormat.OpenXml.WordprocessingDocumentType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (path As String, type As WordprocessingDocumentType) As WordprocessingDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="type" Type="DocumentFormat.OpenXml.WordprocessingDocumentType" />
      </Parameters>
      <Docs>
        <param name="path">The path and file name of the target WordprocessingDocument.</param>
        <param name="type">The type of the WordprocessingDocument.</param>
        <summary>
            Creates a new instance of the WordprocessingDocument class from the specified file.
            </summary>
        <returns>A new instance of WordprocessingDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "path" is null reference.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument Create (System.IO.Packaging.Package package, DocumentFormat.OpenXml.WordprocessingDocumentType type, bool autoSave);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument Create(class System.IO.Packaging.Package package, valuetype DocumentFormat.OpenXml.WordprocessingDocumentType type, bool autoSave) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Create(System.IO.Packaging.Package,DocumentFormat.OpenXml.WordprocessingDocumentType,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="type" Type="DocumentFormat.OpenXml.WordprocessingDocumentType" />
        <Parameter Name="autoSave" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="package">The specified OpenXml package</param>
        <param name="type">The type of the WordprocessingDocument.</param>
        <param name="autoSave">Whether to auto save the created document.</param>
        <summary>
            Creates a new instance of the WordprocessingDocument class from the spcified package.
            </summary>
        <returns>A new instance of WordprocessingDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "package" is null reference.</exception>
        <exception cref="T:System.IO.IOException">Thrown when "package" is not opened with Write access.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument Create (System.IO.Stream stream, DocumentFormat.OpenXml.WordprocessingDocumentType type, bool autoSave);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument Create(class System.IO.Stream stream, valuetype DocumentFormat.OpenXml.WordprocessingDocumentType type, bool autoSave) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Create(System.IO.Stream,DocumentFormat.OpenXml.WordprocessingDocumentType,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="type" Type="DocumentFormat.OpenXml.WordprocessingDocumentType" />
        <Parameter Name="autoSave" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">The IO stream on which to create the WordprocessingDocument.</param>
        <param name="type">The type of the WordprocessingDocument.</param>
        <param name="autoSave">Whether to auto save the created document.</param>
        <summary>
            Creates a new instance of the WordprocessingDocument class from the IO stream.
            </summary>
        <returns>A new instance of WordprocessingDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "stream" is null reference.</exception>
        <exception cref="T:System.IO.IOException">Thrown when "stream" is not opened with Write access.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument Create (string path, DocumentFormat.OpenXml.WordprocessingDocumentType type, bool autoSave);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument Create(string path, valuetype DocumentFormat.OpenXml.WordprocessingDocumentType type, bool autoSave) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Create(System.String,DocumentFormat.OpenXml.WordprocessingDocumentType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (path As String, type As WordprocessingDocumentType, autoSave As Boolean) As WordprocessingDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="type" Type="DocumentFormat.OpenXml.WordprocessingDocumentType" />
        <Parameter Name="autoSave" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">The path and file name of the target WordprocessingDocument.</param>
        <param name="type">The type of the WordprocessingDocument.</param>
        <param name="autoSave">Whether to auto save the created document.</param>
        <summary>
            Creates a new instance of the WordprocessingDocument class from the specified file.
            </summary>
        <returns>A new instance of WordprocessingDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "path" is null reference.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateClone">
      <MemberSignature Language="C#" Value="protected override DocumentFormat.OpenXml.Packaging.OpenXmlPackage CreateClone (System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class DocumentFormat.OpenXml.Packaging.OpenXmlPackage CreateClone(class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.CreateClone(System.IO.Packaging.Package)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="package">The specified instance of Package.</param>
        <summary>
            Creates a new instance of OpenXmlPackage on the specified instance
            of Package.
            </summary>
        <returns>A new instance of OpenXmlPackage.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClone">
      <MemberSignature Language="C#" Value="protected override DocumentFormat.OpenXml.Packaging.OpenXmlPackage CreateClone (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class DocumentFormat.OpenXml.Packaging.OpenXmlPackage CreateClone(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.CreateClone(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">The stream on which the concrete OpenXml package will be created.</param>
        <summary>
            Creates a new OpenXmlPackage on the given stream.
            </summary>
        <returns>A new instance of OpenXmlPackage.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClone">
      <MemberSignature Language="C#" Value="protected override DocumentFormat.OpenXml.Packaging.OpenXmlPackage CreateClone (string path);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class DocumentFormat.OpenXml.Packaging.OpenXmlPackage CreateClone(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.CreateClone(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateClone (path As String) As OpenXmlPackage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The path and file name of the target OpenXml package.</param>
        <summary>
            Creates a new OpenXml package on the given file.
            </summary>
        <returns>A new instance of OpenXmlPackage.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromTemplate">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument CreateFromTemplate (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument CreateFromTemplate(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.CreateFromTemplate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromTemplate (path As String) As WordprocessingDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The path and file name of the template.</param>
        <summary>
            Creates an editable WordprocessingDocument from a template, opened on
            a MemoryStream with expandable capacity. The template will be attached
            to the WordprocessingDocument.
            </summary>
        <returns>The new WordprocessingDocument based on and linked to the template.</returns>
        <remarks>
            Attaching the template has been chosen as the default behavior because
            this is also what happens when a document is created from a template
            (other than Normal.dotm) using Microsoft Word.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromTemplate">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument CreateFromTemplate (string path, bool isTemplateAttached);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument CreateFromTemplate(string path, bool isTemplateAttached) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.CreateFromTemplate(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromTemplate (path As String, isTemplateAttached As Boolean) As WordprocessingDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="isTemplateAttached" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">The path and file name of the template.</param>
        <param name="isTemplateAttached">True, if the template should be attached to the document.</param>
        <summary>
            Creates an editable WordprocessingDocument from a template, opened on
            a MemoryStream with expandable capacity.
            </summary>
        <returns>The new WordprocessingDocument based on and linked to the template.</returns>
        <remarks>
            This method is provided to offer the choice to not attach the template.
            When templates are attached in Microsoft Word, for example, the absolute
            path will be used in the relationship. These absolute paths are most
            often user-specific, however, so once documents are shared with other
            users, the relationship gets "broken" anyhow.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomFilePropertiesPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart CustomFilePropertiesPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart CustomFilePropertiesPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.CustomFilePropertiesPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomFilePropertiesPart As CustomFilePropertiesPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the CustomFilePropertiesPart of the WordprocessingDocument.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DigitalSignatureOriginPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart DigitalSignatureOriginPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart DigitalSignatureOriginPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.DigitalSignatureOriginPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DigitalSignatureOriginPart As DigitalSignatureOriginPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the DigitalSignatureOriginPart of the WordprocessingDocument.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentType">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.WordprocessingDocumentType DocumentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype DocumentFormat.OpenXml.WordprocessingDocumentType DocumentType" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.DocumentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentType As WordprocessingDocumentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.WordprocessingDocumentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type of the WordprocessingDocument.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedFilePropertiesPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart ExtendedFilePropertiesPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart ExtendedFilePropertiesPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.ExtendedFilePropertiesPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedFilePropertiesPart As ExtendedFilePropertiesPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the ExtendedFilePropertiesPart of the WordprocessingDocument.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFlatOpcDocument">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument FromFlatOpcDocument (System.Xml.Linq.XDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument FromFlatOpcDocument(class System.Xml.Linq.XDocument document) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.FromFlatOpcDocument(System.Xml.Linq.XDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFlatOpcDocument (document As XDocument) As WordprocessingDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.Linq.XDocument" />
      </Parameters>
      <Docs>
        <param name="document">The document in Flat OPC format.</param>
        <summary>
            Creates a new editable instance of WordprocessingDocument from an <see cref="T:System.Xml.Linq.XDocument" />
            in Flat OPC format, opened on a <see cref="T:System.IO.MemoryStream" />.
            </summary>
        <returns>A new instance of WordprocessingDocument.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFlatOpcDocument">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument FromFlatOpcDocument (System.Xml.Linq.XDocument document, System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument FromFlatOpcDocument(class System.Xml.Linq.XDocument document, class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.FromFlatOpcDocument(System.Xml.Linq.XDocument,System.IO.Packaging.Package)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.Linq.XDocument" />
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="document">The document in Flat OPC format.</param>
        <param name="package">The <see cref="T:System.IO.Packaging.Package" /> of the target WordprocessingDocument.</param>
        <summary>
            Creates a new instance of WordprocessingDocument from an <see cref="T:System.Xml.Linq.XDocument" />
            in Flat OPC format.
            </summary>
        <returns>A new instance of WordprocessingDocument.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFlatOpcDocument">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument FromFlatOpcDocument (System.Xml.Linq.XDocument document, System.IO.Stream stream, bool isEditable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument FromFlatOpcDocument(class System.Xml.Linq.XDocument document, class System.IO.Stream stream, bool isEditable) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.FromFlatOpcDocument(System.Xml.Linq.XDocument,System.IO.Stream,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.Linq.XDocument" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="isEditable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="document">The document in Flat OPC format.</param>
        <param name="stream">The <see cref="T:System.IO.Stream" /> on which the WordprocessingDocument will be created.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <summary>
            Creates a new instance of WordprocessingDocument from an <see cref="T:System.Xml.Linq.XDocument" />
            in Flat OPC format.
            </summary>
        <returns>A new instance of WordprocessingDocument.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFlatOpcDocument">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument FromFlatOpcDocument (System.Xml.Linq.XDocument document, string path, bool isEditable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument FromFlatOpcDocument(class System.Xml.Linq.XDocument document, string path, bool isEditable) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.FromFlatOpcDocument(System.Xml.Linq.XDocument,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFlatOpcDocument (document As XDocument, path As String, isEditable As Boolean) As WordprocessingDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.Linq.XDocument" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="isEditable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="document">The document in Flat OPC format.</param>
        <param name="path">The path and file name of the target WordprocessingDocument.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <summary>
            Creates a new instance of WordprocessingDocument from an <see cref="T:System.Xml.Linq.XDocument" />
            in Flat OPC format.
            </summary>
        <returns>A new instance of WordprocessingDocument.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFlatOpcString">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument FromFlatOpcString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument FromFlatOpcString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.FromFlatOpcString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFlatOpcString (text As String) As WordprocessingDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The string in Flat OPC format.</param>
        <summary>
            Creates a new instance of WordprocessingDocument from a string
            in Flat OPC format on a <see cref="T:System.IO.MemoryStream" /> with expandable
            capacity.
            </summary>
        <returns>A new instance of WordprocessingDocument.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFlatOpcString">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument FromFlatOpcString (string text, System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument FromFlatOpcString(string text, class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.FromFlatOpcString(System.String,System.IO.Packaging.Package)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="text">The string in Flat OPC format.</param>
        <param name="package">The <see cref="T:System.IO.Packaging.Package" /> of the target WordprocessingDocument.</param>
        <summary>
            Creates a new instance of WordprocessingDocument from a string
            in Flat OPC format.
            </summary>
        <returns>A new instance of WordprocessingDocument.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFlatOpcString">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument FromFlatOpcString (string text, System.IO.Stream stream, bool isEditable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument FromFlatOpcString(string text, class System.IO.Stream stream, bool isEditable) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.FromFlatOpcString(System.String,System.IO.Stream,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="isEditable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">The string in Flat OPC format.</param>
        <param name="stream">The <see cref="T:System.IO.Stream" /> on which the WordprocessingDocument will be created.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <summary>
            Creates a new instance of WordprocessingDocument from a string
            in Flat OPC format on a
            </summary>
        <returns>A new instance of WordprocessingDocument.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFlatOpcString">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument FromFlatOpcString (string text, string path, bool isEditable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument FromFlatOpcString(string text, string path, bool isEditable) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.FromFlatOpcString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFlatOpcString (text As String, path As String, isEditable As Boolean) As WordprocessingDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="isEditable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">The string in Flat OPC format.</param>
        <param name="path">The path and file name of the target WordprocessingDocument.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <summary>
            Creates a new instance of WordprocessingDocument from a string
            in Flat OPC format.
            </summary>
        <returns>A new instance of WordprocessingDocument.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MainDocumentPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.MainDocumentPart MainDocumentPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.MainDocumentPart MainDocumentPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.MainDocumentPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MainDocumentPart As MainDocumentPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.MainDocumentPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the MainDocumentPart of the WordprocessingDocument.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument Open (System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument Open(class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Open(System.IO.Packaging.Package)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="package">The specified OpenXml package.</param>
        <summary>
            Creates a new instance of the WordprocessingDocument class from the spcified package.
            </summary>
        <returns>A new instance of WordprocessingDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "package" is null reference.</exception>
        <exception cref="T:System.IO.IOException">Thrown when "package" is not opened with Read (ReadWrite) access.</exception>
        <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML WordprocessingDocument.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument Open (System.IO.Packaging.Package package, DocumentFormat.OpenXml.Packaging.OpenSettings openSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument Open(class System.IO.Packaging.Package package, class DocumentFormat.OpenXml.Packaging.OpenSettings openSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Open(System.IO.Packaging.Package,DocumentFormat.OpenXml.Packaging.OpenSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="openSettings" Type="DocumentFormat.OpenXml.Packaging.OpenSettings" />
      </Parameters>
      <Docs>
        <param name="package">The specified OpenXml package</param>
        <param name="openSettings">The advanced settings for opening a document.</param>
        <summary>
            Creates a new instance of the WordprocessingDocument class from the spcified package.
            </summary>
        <returns>A new instance of WordprocessingDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "package" is null reference.</exception>
        <exception cref="T:System.IO.IOException">Thrown when "package" is not opened with Read (ReadWrite) access.</exception>
        <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML WordprocessingDocument.</exception>
        <exception cref="T:System.ArgumentException">Thrown when specified to process the markup compatibility but the given target FileFormatVersion is incorrect.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument Open (System.IO.Stream stream, bool isEditable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument Open(class System.IO.Stream stream, bool isEditable) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Open(System.IO.Stream,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="isEditable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">The IO stream on which to open the WordprocessingDocument.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <summary>
            Creates a new instance of the WordprocessingDocument class from the IO stream.
            </summary>
        <returns>A new instance of WordprocessingDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "stream" is null reference.</exception>
        <exception cref="T:System.IO.IOException">Thrown when "stream" is not opened with Read (ReadWrite) access.</exception>
        <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML WordprocessingDocument.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument Open (string path, bool isEditable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument Open(string path, bool isEditable) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Open(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, isEditable As Boolean) As WordprocessingDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="isEditable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">The path and file name of the target WordprocessingDocument.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <summary>
            Creates a new instance of the WordprocessingDocument class from the specified file.
            </summary>
        <returns>A new instance of WordprocessingDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "path" is null reference.</exception>
        <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML WordprocessingDocument.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument Open (System.IO.Stream stream, bool isEditable, DocumentFormat.OpenXml.Packaging.OpenSettings openSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument Open(class System.IO.Stream stream, bool isEditable, class DocumentFormat.OpenXml.Packaging.OpenSettings openSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Open(System.IO.Stream,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="isEditable" Type="System.Boolean" />
        <Parameter Name="openSettings" Type="DocumentFormat.OpenXml.Packaging.OpenSettings" />
      </Parameters>
      <Docs>
        <param name="stream">The IO stream on which to open the WordprocessingDocument.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <param name="openSettings">The advanced settings for opening a document.</param>
        <summary>
            Creates a new instance of the WordprocessingDocument class from the IO stream.
            </summary>
        <returns>A new instance of WordprocessingDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "stream" is null reference.</exception>
        <exception cref="T:System.IO.IOException">Thrown when "stream" is not opened with Read (ReadWrite) access.</exception>
        <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML WordprocessingDocument.</exception>
        <exception cref="T:System.ArgumentException">Thrown when specified to process the markup compatibility but the given target FileFormatVersion is incorrect.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.WordprocessingDocument Open (string path, bool isEditable, DocumentFormat.OpenXml.Packaging.OpenSettings openSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.WordprocessingDocument Open(string path, bool isEditable, class DocumentFormat.OpenXml.Packaging.OpenSettings openSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Open(System.String,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WordprocessingDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="isEditable" Type="System.Boolean" />
        <Parameter Name="openSettings" Type="DocumentFormat.OpenXml.Packaging.OpenSettings" />
      </Parameters>
      <Docs>
        <param name="path">The path and file name of the target WordprocessingDocument.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <param name="openSettings">The advanced settings for opening a document.</param>
        <summary>
            Creates a new instance of the WordprocessingDocument class from the specified file.
            </summary>
        <returns>A new instance of WordprocessingDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "path" is null reference.</exception>
        <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML WordprocessingDocument.</exception>
        <exception cref="T:System.ArgumentException">Thrown when specified to process the markup compatibility but the given target FileFormatVersion is incorrect.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenClone">
      <MemberSignature Language="C#" Value="protected override DocumentFormat.OpenXml.Packaging.OpenXmlPackage OpenClone (System.IO.Stream stream, bool isEditable, DocumentFormat.OpenXml.Packaging.OpenSettings openSettings);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class DocumentFormat.OpenXml.Packaging.OpenXmlPackage OpenClone(class System.IO.Stream stream, bool isEditable, class DocumentFormat.OpenXml.Packaging.OpenSettings openSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.OpenClone(System.IO.Stream,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="isEditable" Type="System.Boolean" />
        <Parameter Name="openSettings" Type="DocumentFormat.OpenXml.Packaging.OpenSettings" />
      </Parameters>
      <Docs>
        <param name="stream">The stream on which the cloned OpenXml package will be opened.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <param name="openSettings">The advanced settings for opening a document.</param>
        <summary>
            Opens the cloned OpenXml package on the given stream.
            </summary>
        <returns>A new instance of OpenXmlPackage.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenClone">
      <MemberSignature Language="C#" Value="protected override DocumentFormat.OpenXml.Packaging.OpenXmlPackage OpenClone (string path, bool isEditable, DocumentFormat.OpenXml.Packaging.OpenSettings openSettings);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class DocumentFormat.OpenXml.Packaging.OpenXmlPackage OpenClone(string path, bool isEditable, class DocumentFormat.OpenXml.Packaging.OpenSettings openSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.OpenClone(System.String,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="isEditable" Type="System.Boolean" />
        <Parameter Name="openSettings" Type="DocumentFormat.OpenXml.Packaging.OpenSettings" />
      </Parameters>
      <Docs>
        <param name="path">The path and file name of the target OpenXml package.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <param name="openSettings">The advanced settings for opening a document.</param>
        <summary>
            Opens the cloned OpenXml package on the given file.
            </summary>
        <returns>A new instance of OpenXmlPackage.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickAccessToolbarCustomizationsPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart QuickAccessToolbarCustomizationsPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart QuickAccessToolbarCustomizationsPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.QuickAccessToolbarCustomizationsPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QuickAccessToolbarCustomizationsPart As QuickAccessToolbarCustomizationsPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the QuickAccessToolbarCustomizationsPart of the WordprocessingDocument.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RibbonAndBackstageCustomizationsPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart RibbonAndBackstageCustomizationsPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart RibbonAndBackstageCustomizationsPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.RibbonAndBackstageCustomizationsPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RibbonAndBackstageCustomizationsPart As RibbonAndBackstageCustomizationsPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.OfficeAvailability(DocumentFormat.OpenXml.FileFormatVersions.Office2010)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the RibbonAndBackstageCustomizationsPart of the WordprocessingDocument, only available in Office2010.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RibbonExtensibilityPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart RibbonExtensibilityPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart RibbonExtensibilityPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.RibbonExtensibilityPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RibbonExtensibilityPart As RibbonExtensibilityPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the RibbonExtensibilityPart of the WordprocessingDocument.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbnailPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.ThumbnailPart ThumbnailPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.ThumbnailPart ThumbnailPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.ThumbnailPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThumbnailPart As ThumbnailPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.ThumbnailPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the ThumbnailPart of the WordprocessingDocument.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToFlatOpcDocument">
      <MemberSignature Language="C#" Value="public override System.Xml.Linq.XDocument ToFlatOpcDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.Linq.XDocument ToFlatOpcDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.ToFlatOpcDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFlatOpcDocument () As XDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XDocument</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Converts an OpenXml package in OPC format to an <see cref="T:System.Xml.Linq.XDocument" />
            in Flat OPC format.
            </summary>
        <returns>The OpenXml package in Flat OPC format.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebExTaskpanesPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart WebExTaskpanesPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart WebExTaskpanesPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.WebExTaskpanesPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebExTaskpanesPart As WebExTaskpanesPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.OfficeAvailability(DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the WebExTaskpanesPart of the WordprocessingDocument, only available in Office2013.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>