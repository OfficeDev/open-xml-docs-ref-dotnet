<Type Name="PresentationDocument" FullName="DocumentFormat.OpenXml.Packaging.PresentationDocument">
  <TypeSignature Language="C#" Value="public class PresentationDocument : DocumentFormat.OpenXml.Packaging.OpenXmlPackage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PresentationDocument extends DocumentFormat.OpenXml.Packaging.OpenXmlPackage" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Packaging.PresentationDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class PresentationDocument&#xA;Inherits OpenXmlPackage" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines PresentationDocument - an OpenXmlPackage represents a Presentation document
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PresentationDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a PresentationDocument.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCoreFilePropertiesPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart AddCoreFilePropertiesPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart AddCoreFilePropertiesPart() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddCoreFilePropertiesPart" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCoreFilePropertiesPart () As CoreFilePropertiesPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a CoreFilePropertiesPart to the PresentationDocument.
            </summary>
        <returns>The newly added CoreFilePropertiesPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCustomFilePropertiesPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart AddCustomFilePropertiesPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart AddCustomFilePropertiesPart() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddCustomFilePropertiesPart" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCustomFilePropertiesPart () As CustomFilePropertiesPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a CustomFilePropertiesPart to the PresentationDocument.
            </summary>
        <returns>The newly added CustomFilePropertiesPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDigitalSignatureOriginPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart AddDigitalSignatureOriginPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart AddDigitalSignatureOriginPart() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddDigitalSignatureOriginPart" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDigitalSignatureOriginPart () As DigitalSignatureOriginPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a DigitalSignatureOriginPart to the PresentationDocuments.
            </summary>
        <returns>The newly added DigitalSignatureOriginPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExtendedFilePropertiesPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart AddExtendedFilePropertiesPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart AddExtendedFilePropertiesPart() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddExtendedFilePropertiesPart" />
      <MemberSignature Language="VB.NET" Value="Public Function AddExtendedFilePropertiesPart () As ExtendedFilePropertiesPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a ExtendedFilePropertiesPart to the PresentationDocument.
            </summary>
        <returns>The newly added ExtendedFilePropertiesPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNewPart&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T AddNewPart&lt;T&gt; (string contentType, string id) where T : DocumentFormat.OpenXml.Packaging.OpenXmlPart;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T AddNewPart&lt;(class DocumentFormat.OpenXml.Packaging.OpenXmlPart) T&gt;(string contentType, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddNewPart``1(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddNewPart(Of T As OpenXmlPart) (contentType As String, id As String) As T" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>DocumentFormat.OpenXml.Packaging.OpenXmlPart</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The class of the part.</typeparam>
        <param name="contentType">The content type of the part. Must match the defined content type if the part is fixed content type.</param>
        <param name="id">The relationship id. The id will be automaticly generated if this param is null.</param>
        <summary>
            Adds a new part of type <typeparamref name="T" />.
            </summary>
        <returns>The added part.</returns>
        <remarks>Mainly used for adding not-fixed content type part - ImagePart, etc.</remarks>
        <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">When the part is not allowed to be referenced by this part.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">When the part is fixed content type and the passed in contentType does not match the defined content type.</exception>
        <exception cref="T:System.ArgumentNullException">Thrown when "contentType" is null reference.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPresentationPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.PresentationPart AddPresentationPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.PresentationPart AddPresentationPart() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddPresentationPart" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPresentationPart () As PresentationPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationPart</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates the PresentationPart and add it to this document.
            </summary>
        <returns>The newly added PresentationPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddQuickAccessToolbarCustomizationsPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart AddQuickAccessToolbarCustomizationsPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart AddQuickAccessToolbarCustomizationsPart() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddQuickAccessToolbarCustomizationsPart" />
      <MemberSignature Language="VB.NET" Value="Public Function AddQuickAccessToolbarCustomizationsPart () As QuickAccessToolbarCustomizationsPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Add a QuickAccessToolbarCustomizationsPart to the PresentationDocument.
            </summary>
        <returns>The newly added QuickAccessToolbarCustomizationsPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRibbonAndBackstageCustomizationsPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart AddRibbonAndBackstageCustomizationsPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart AddRibbonAndBackstageCustomizationsPart() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddRibbonAndBackstageCustomizationsPart" />
      <MemberSignature Language="VB.NET" Value="Public Function AddRibbonAndBackstageCustomizationsPart () As RibbonAndBackstageCustomizationsPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Add a RibbonAndBackstageCustomizationsPart to the PresentationDocument, this part is only available in Office2010.
            </summary>
        <returns>The newly added RibbonExtensibilityPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRibbonExtensibilityPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart AddRibbonExtensibilityPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart AddRibbonExtensibilityPart() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddRibbonExtensibilityPart" />
      <MemberSignature Language="VB.NET" Value="Public Function AddRibbonExtensibilityPart () As RibbonExtensibilityPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Add a RibbonExtensibilityPart to the PresentationDocument.
            </summary>
        <returns>The newly added RibbonExtensibilityPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddThumbnailPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.ThumbnailPart AddThumbnailPart (DocumentFormat.OpenXml.Packaging.ThumbnailPartType partType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.ThumbnailPart AddThumbnailPart(valuetype DocumentFormat.OpenXml.Packaging.ThumbnailPartType partType) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddThumbnailPart(DocumentFormat.OpenXml.Packaging.ThumbnailPartType)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddThumbnailPart (partType As ThumbnailPartType) As ThumbnailPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.ThumbnailPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partType" Type="DocumentFormat.OpenXml.Packaging.ThumbnailPartType" />
      </Parameters>
      <Docs>
        <param name="partType">The type of the ThumbnailPart.</param>
        <summary>
            Adds a ThumbnailPart to the PresentationDocument.
            </summary>
        <returns>The newly added ThumbnailPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddThumbnailPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.ThumbnailPart AddThumbnailPart (string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.ThumbnailPart AddThumbnailPart(string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddThumbnailPart(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddThumbnailPart (contentType As String) As ThumbnailPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.ThumbnailPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentType">The content type of the ThumbnailPart.</param>
        <summary>
            Adds a ThumbnailPart to the PresentationDocument.
            </summary>
        <returns>The newly added ThumbnailPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddWebExTaskpanesPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart AddWebExTaskpanesPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart AddWebExTaskpanesPart() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddWebExTaskpanesPart" />
      <MemberSignature Language="VB.NET" Value="Public Function AddWebExTaskpanesPart () As WebExTaskpanesPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a WebExTaskpanesPart to the PresentationDocument, this part is only available in Office2013.
            </summary>
        <returns>The newly added WebExTaskpanesPart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeDocumentType">
      <MemberSignature Language="C#" Value="public void ChangeDocumentType (DocumentFormat.OpenXml.PresentationDocumentType newType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChangeDocumentType(valuetype DocumentFormat.OpenXml.PresentationDocumentType newType) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.ChangeDocumentType(DocumentFormat.OpenXml.PresentationDocumentType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeDocumentType (newType As PresentationDocumentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newType" Type="DocumentFormat.OpenXml.PresentationDocumentType" />
      </Parameters>
      <Docs>
        <param name="newType">The new type of the document.</param>
        <summary>
            Changes the document type.
            </summary>
        <remarks>The PresentationPart will be changed.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CoreFilePropertiesPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart CoreFilePropertiesPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart CoreFilePropertiesPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.CoreFilePropertiesPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CoreFilePropertiesPart As CoreFilePropertiesPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the CoreFilePropertiesPart of the PresentationDocument.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.PresentationDocument Create (System.IO.Packaging.Package package, DocumentFormat.OpenXml.PresentationDocumentType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.PresentationDocument Create(class System.IO.Packaging.Package package, valuetype DocumentFormat.OpenXml.PresentationDocumentType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Create(System.IO.Packaging.Package,DocumentFormat.OpenXml.PresentationDocumentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="type" Type="DocumentFormat.OpenXml.PresentationDocumentType" />
      </Parameters>
      <Docs>
        <param name="package">The specified OpenXml package.</param>
        <param name="type">The type of the PresentationDocument.</param>
        <summary>
            Created a new instance of the PresentationDocument class from the spcified package.
            </summary>
        <returns>A new instance of PresentationDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "package" is null reference.</exception>
        <exception cref="T:System.IO.IOException">Thrown when "package" is not opened with Write access.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.PresentationDocument Create (System.IO.Stream stream, DocumentFormat.OpenXml.PresentationDocumentType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.PresentationDocument Create(class System.IO.Stream stream, valuetype DocumentFormat.OpenXml.PresentationDocumentType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Create(System.IO.Stream,DocumentFormat.OpenXml.PresentationDocumentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="type" Type="DocumentFormat.OpenXml.PresentationDocumentType" />
      </Parameters>
      <Docs>
        <param name="stream">The IO stream on which to create the PresentationDocument.</param>
        <param name="type">The type of the PresentationDocument.</param>
        <summary>
            Created a new instance of the PresentationDocument class from the IO stream.
            </summary>
        <returns>A new instance of PresentationDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "stream" is null reference.</exception>
        <exception cref="T:System.IO.IOException">Thrown when "stream" is not opened with Write access.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.PresentationDocument Create (string path, DocumentFormat.OpenXml.PresentationDocumentType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.PresentationDocument Create(string path, valuetype DocumentFormat.OpenXml.PresentationDocumentType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Create(System.String,DocumentFormat.OpenXml.PresentationDocumentType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (path As String, type As PresentationDocumentType) As PresentationDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="type" Type="DocumentFormat.OpenXml.PresentationDocumentType" />
      </Parameters>
      <Docs>
        <param name="path">The path and file name of the target PresentationDocument.</param>
        <param name="type">The type of the PresentationDocument.</param>
        <summary>
            Creates a new instance of the PresentationDocument class from the specified file.
            </summary>
        <returns>A new instance of PresentationDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "path" is null reference.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.PresentationDocument Create (System.IO.Packaging.Package package, DocumentFormat.OpenXml.PresentationDocumentType type, bool autoSave);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.PresentationDocument Create(class System.IO.Packaging.Package package, valuetype DocumentFormat.OpenXml.PresentationDocumentType type, bool autoSave) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Create(System.IO.Packaging.Package,DocumentFormat.OpenXml.PresentationDocumentType,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="type" Type="DocumentFormat.OpenXml.PresentationDocumentType" />
        <Parameter Name="autoSave" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="package">The specified OpenXml package.</param>
        <param name="type">The type of the PresentationDocument.</param>
        <param name="autoSave">Whether to auto save the created document.</param>
        <summary>
            Creates a new instance of the PresentationDocument class from the spcified package.
            </summary>
        <returns>A new instance of PresentationDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "package" is null reference.</exception>
        <exception cref="T:System.IO.IOException">Thrown when "package" is not opened with Write access.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.PresentationDocument Create (System.IO.Stream stream, DocumentFormat.OpenXml.PresentationDocumentType type, bool autoSave);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.PresentationDocument Create(class System.IO.Stream stream, valuetype DocumentFormat.OpenXml.PresentationDocumentType type, bool autoSave) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Create(System.IO.Stream,DocumentFormat.OpenXml.PresentationDocumentType,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="type" Type="DocumentFormat.OpenXml.PresentationDocumentType" />
        <Parameter Name="autoSave" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">The IO stream on which to create the PresentationDocument.</param>
        <param name="type">The type of the PresentationDocument.</param>
        <param name="autoSave">Whether to auto save the created document.</param>
        <summary>
            Creates a new instance of the PresentationDocument class from the IO stream.
            </summary>
        <returns>A new instance of PresentationDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "stream" is null reference.</exception>
        <exception cref="T:System.IO.IOException">Thrown when "stream" is not opened with Write access.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.PresentationDocument Create (string path, DocumentFormat.OpenXml.PresentationDocumentType type, bool autoSave);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.PresentationDocument Create(string path, valuetype DocumentFormat.OpenXml.PresentationDocumentType type, bool autoSave) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Create(System.String,DocumentFormat.OpenXml.PresentationDocumentType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (path As String, type As PresentationDocumentType, autoSave As Boolean) As PresentationDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="type" Type="DocumentFormat.OpenXml.PresentationDocumentType" />
        <Parameter Name="autoSave" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">The path and file name of the target PresentationDocument.</param>
        <param name="type">The type of the PresentationDocument.</param>
        <param name="autoSave">Whether to auto save the created document.</param>
        <summary>
            Created a new instance of the PresentationDocument class from the specified file.
            </summary>
        <returns>A new instance of PresentationDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "path" is null reference.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateClone">
      <MemberSignature Language="C#" Value="protected override DocumentFormat.OpenXml.Packaging.OpenXmlPackage CreateClone (System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class DocumentFormat.OpenXml.Packaging.OpenXmlPackage CreateClone(class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.CreateClone(System.IO.Packaging.Package)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="package">The specified instance of Package.</param>
        <summary>
            Creates a new instance of OpenXmlPackage on the specified instance
            of Package.
            </summary>
        <returns>A new instance of OpenXmlPackage.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClone">
      <MemberSignature Language="C#" Value="protected override DocumentFormat.OpenXml.Packaging.OpenXmlPackage CreateClone (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class DocumentFormat.OpenXml.Packaging.OpenXmlPackage CreateClone(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.CreateClone(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">The stream on which the concrete OpenXml package will be created.</param>
        <summary>
            Creates a new OpenXmlPackage on the given stream.
            </summary>
        <returns>A new instance of OpenXmlPackage.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClone">
      <MemberSignature Language="C#" Value="protected override DocumentFormat.OpenXml.Packaging.OpenXmlPackage CreateClone (string path);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class DocumentFormat.OpenXml.Packaging.OpenXmlPackage CreateClone(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.CreateClone(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateClone (path As String) As OpenXmlPackage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The path and file name of the target OpenXml package.</param>
        <summary>
            Creates a new OpenXml package on the given file.
            </summary>
        <returns>A new instance of OpenXmlPackage.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromTemplate">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.PresentationDocument CreateFromTemplate (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.PresentationDocument CreateFromTemplate(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.CreateFromTemplate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromTemplate (path As String) As PresentationDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The path and file name of the template.</param>
        <summary>
            Creates an editable PresentationDocument from a template, opened on
            a MemoryStream with expandable capacity.
            </summary>
        <returns>The new PresentationDocument based on the template.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomFilePropertiesPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart CustomFilePropertiesPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart CustomFilePropertiesPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.CustomFilePropertiesPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomFilePropertiesPart As CustomFilePropertiesPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the CustomFilePropertiesPart of the PresentationDocument.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DigitalSignatureOriginPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart DigitalSignatureOriginPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart DigitalSignatureOriginPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.DigitalSignatureOriginPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DigitalSignatureOriginPart As DigitalSignatureOriginPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the DigitalSignatureOriginPart of the PresentationDocument.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentType">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.PresentationDocumentType DocumentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype DocumentFormat.OpenXml.PresentationDocumentType DocumentType" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.DocumentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentType As PresentationDocumentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.PresentationDocumentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type of the PresentationDocument.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedFilePropertiesPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart ExtendedFilePropertiesPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart ExtendedFilePropertiesPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.ExtendedFilePropertiesPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedFilePropertiesPart As ExtendedFilePropertiesPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the ExtendedFilePropertiesPart of the PresentationDocument.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFlatOpcDocument">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.PresentationDocument FromFlatOpcDocument (System.Xml.Linq.XDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.PresentationDocument FromFlatOpcDocument(class System.Xml.Linq.XDocument document) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.FromFlatOpcDocument(System.Xml.Linq.XDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFlatOpcDocument (document As XDocument) As PresentationDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.Linq.XDocument" />
      </Parameters>
      <Docs>
        <param name="document">The document in Flat OPC format.</param>
        <summary>
            Creates a new editable instance of PresentationDocument from an <see cref="T:System.Xml.Linq.XDocument" />
            in Flat OPC format, opened on a <see cref="T:System.IO.MemoryStream" />.
            </summary>
        <returns>A new instance of PresentationDocument.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFlatOpcDocument">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.PresentationDocument FromFlatOpcDocument (System.Xml.Linq.XDocument document, System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.PresentationDocument FromFlatOpcDocument(class System.Xml.Linq.XDocument document, class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.FromFlatOpcDocument(System.Xml.Linq.XDocument,System.IO.Packaging.Package)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.Linq.XDocument" />
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="document">The presentation in Flat OPC format.</param>
        <param name="package">The specified instance of Package.</param>
        <summary>
            Creates a new instance of PresentationDocument from a presentation
            in Flat OPC format on the specified instance of Package.
            </summary>
        <returns>A new instance of PresentationDocument.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFlatOpcDocument">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.PresentationDocument FromFlatOpcDocument (System.Xml.Linq.XDocument document, System.IO.Stream stream, bool isEditable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.PresentationDocument FromFlatOpcDocument(class System.Xml.Linq.XDocument document, class System.IO.Stream stream, bool isEditable) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.FromFlatOpcDocument(System.Xml.Linq.XDocument,System.IO.Stream,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.Linq.XDocument" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="isEditable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="document">The presentation in Flat OPC format.</param>
        <param name="stream">The stream on which the PresentationDocument will be created.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <summary>
            Creates a new instance of PresentationDocument from a presentation
            in Flat OPC format.
            </summary>
        <returns>A new instance of PresentationDocument.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFlatOpcDocument">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.PresentationDocument FromFlatOpcDocument (System.Xml.Linq.XDocument document, string path, bool isEditable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.PresentationDocument FromFlatOpcDocument(class System.Xml.Linq.XDocument document, string path, bool isEditable) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.FromFlatOpcDocument(System.Xml.Linq.XDocument,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFlatOpcDocument (document As XDocument, path As String, isEditable As Boolean) As PresentationDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.Linq.XDocument" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="isEditable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="document">The presentation in Flat OPC format.</param>
        <param name="path">The path and file name of the target PresentationDocument.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <summary>
            Creates a new instance of PresentationDocument from a presentation
            in Flat OPC format.
            </summary>
        <returns>A new instance of PresentationDocument.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFlatOpcString">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.PresentationDocument FromFlatOpcString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.PresentationDocument FromFlatOpcString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.FromFlatOpcString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFlatOpcString (text As String) As PresentationDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The string in Flat OPC format.</param>
        <summary>
            Creates a new instance of PresentationDocument from a string
            in Flat OPC format on a <see cref="T:System.IO.MemoryStream" /> with expandable
            capacity.
            </summary>
        <returns>A new instance of PresentationDocument.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFlatOpcString">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.PresentationDocument FromFlatOpcString (string text, System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.PresentationDocument FromFlatOpcString(string text, class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.FromFlatOpcString(System.String,System.IO.Packaging.Package)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="text">The string in Flat OPC format.</param>
        <param name="package">The <see cref="T:System.IO.Packaging.Package" /> of the target PresentationDocument.</param>
        <summary>
            Creates a new instance of PresentationDocument from a string
            in Flat OPC format.
            </summary>
        <returns>A new instance of PresentationDocument.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFlatOpcString">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.PresentationDocument FromFlatOpcString (string text, System.IO.Stream stream, bool isEditable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.PresentationDocument FromFlatOpcString(string text, class System.IO.Stream stream, bool isEditable) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.FromFlatOpcString(System.String,System.IO.Stream,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="isEditable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">The string in Flat OPC format.</param>
        <param name="stream">The <see cref="T:System.IO.Stream" /> on which the PresentationDocument will be created.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <summary>
            Creates a new instance of PresentationDocument from a string
            in Flat OPC format on a
            </summary>
        <returns>A new instance of PresentationDocument.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFlatOpcString">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.PresentationDocument FromFlatOpcString (string text, string path, bool isEditable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.PresentationDocument FromFlatOpcString(string text, string path, bool isEditable) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.FromFlatOpcString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFlatOpcString (text As String, path As String, isEditable As Boolean) As PresentationDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="isEditable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">The string in Flat OPC format.</param>
        <param name="path">The path and file name of the target PresentationDocument.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <summary>
            Creates a new instance of PresentationDocument from a string
            in Flat OPC format.
            </summary>
        <returns>A new instance of PresentationDocument.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.PresentationDocument Open (System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.PresentationDocument Open(class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Open(System.IO.Packaging.Package)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="package">The specified OpenXml package.</param>
        <summary>
            Creates a new instance of the PresentationDocument class from the spcified package.
            </summary>
        <returns>A new instance of PresentationDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "package" is null reference.</exception>
        <exception cref="T:System.IO.IOException">Thrown when "package" is not opened with Read (ReadWrite) access.</exception>
        <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML PresentationDocument.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.PresentationDocument Open (System.IO.Packaging.Package package, DocumentFormat.OpenXml.Packaging.OpenSettings openSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.PresentationDocument Open(class System.IO.Packaging.Package package, class DocumentFormat.OpenXml.Packaging.OpenSettings openSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Open(System.IO.Packaging.Package,DocumentFormat.OpenXml.Packaging.OpenSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="openSettings" Type="DocumentFormat.OpenXml.Packaging.OpenSettings" />
      </Parameters>
      <Docs>
        <param name="package">The specified OpenXml package.</param>
        <param name="openSettings">The advanced settings for opening a document.</param>
        <summary>
            Creates a new instance of the PresentationDocument class from the spcified package.
            </summary>
        <returns>A new instance of PresentationDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "package" is null reference.</exception>
        <exception cref="T:System.IO.IOException">Thrown when "package" is not opened with Read (ReadWrite) access.</exception>
        <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML PresentationDocument.</exception>
        <exception cref="T:System.ArgumentException">Thrown when specified to process the markup compatibility but the given target FileFormatVersion is incorrect.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.PresentationDocument Open (System.IO.Stream stream, bool isEditable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.PresentationDocument Open(class System.IO.Stream stream, bool isEditable) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Open(System.IO.Stream,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="isEditable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">The IO stream on which to open the PresentationDocument.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <summary>
            Creates a new instance of the PresentationDocument class from the IO stream.
            </summary>
        <returns>A new instance of PresentationDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "stream" is null reference.</exception>
        <exception cref="T:System.IO.IOException">Thrown when "stream" is not opened with Read (ReadWrite) access.</exception>
        <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML PresentationDocument.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.PresentationDocument Open (string path, bool isEditable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.PresentationDocument Open(string path, bool isEditable) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Open(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, isEditable As Boolean) As PresentationDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="isEditable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">The path and file name of the target PresentationDocument.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <summary>
            Creates a new instance of the PresentationDocument class from the specified file.
            </summary>
        <returns>A new instance of PresentationDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "path" is null reference.</exception>
        <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML PresentationDocument.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.PresentationDocument Open (System.IO.Stream stream, bool isEditable, DocumentFormat.OpenXml.Packaging.OpenSettings openSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.PresentationDocument Open(class System.IO.Stream stream, bool isEditable, class DocumentFormat.OpenXml.Packaging.OpenSettings openSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Open(System.IO.Stream,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="isEditable" Type="System.Boolean" />
        <Parameter Name="openSettings" Type="DocumentFormat.OpenXml.Packaging.OpenSettings" />
      </Parameters>
      <Docs>
        <param name="stream">The IO stream on which to open the PresentationDocument.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <param name="openSettings">The advanced settings for opening a document.</param>
        <summary>
            Creates a new instance of the PresentationDocument class from the IO stream.
            </summary>
        <returns>A new instance of PresentationDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "stream" is null reference.</exception>
        <exception cref="T:System.IO.IOException">Thrown when "stream" is not opened with Read (ReadWrite) access.</exception>
        <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML PresentationDocument.</exception>
        <exception cref="T:System.ArgumentException">Thrown when specified to process the markup compatibility but the given target FileFormatVersion is incorrect.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static DocumentFormat.OpenXml.Packaging.PresentationDocument Open (string path, bool isEditable, DocumentFormat.OpenXml.Packaging.OpenSettings openSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class DocumentFormat.OpenXml.Packaging.PresentationDocument Open(string path, bool isEditable, class DocumentFormat.OpenXml.Packaging.OpenSettings openSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Open(System.String,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="isEditable" Type="System.Boolean" />
        <Parameter Name="openSettings" Type="DocumentFormat.OpenXml.Packaging.OpenSettings" />
      </Parameters>
      <Docs>
        <param name="path">The path and file name of the target PresentationDocument.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <param name="openSettings">The advanced settings for opening a document.</param>
        <summary>
            Creates a new instance of the PresentationDocument class from the specified file.
            </summary>
        <returns>A new instance of PresentationDocument.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "path" is null reference.</exception>
        <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML PresentationDocument.</exception>
        <exception cref="T:System.ArgumentException">Thrown when specified to process the markup compatibility but the given target FileFormatVersion is incorrect.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenClone">
      <MemberSignature Language="C#" Value="protected override DocumentFormat.OpenXml.Packaging.OpenXmlPackage OpenClone (System.IO.Stream stream, bool isEditable, DocumentFormat.OpenXml.Packaging.OpenSettings openSettings);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class DocumentFormat.OpenXml.Packaging.OpenXmlPackage OpenClone(class System.IO.Stream stream, bool isEditable, class DocumentFormat.OpenXml.Packaging.OpenSettings openSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.OpenClone(System.IO.Stream,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="isEditable" Type="System.Boolean" />
        <Parameter Name="openSettings" Type="DocumentFormat.OpenXml.Packaging.OpenSettings" />
      </Parameters>
      <Docs>
        <param name="stream">The stream on which the cloned OpenXml package will be opened.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <param name="openSettings">The advanced settings for opening a document.</param>
        <summary>
            Opens the cloned OpenXml package on the given stream.
            </summary>
        <returns>A new instance of OpenXmlPackage.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenClone">
      <MemberSignature Language="C#" Value="protected override DocumentFormat.OpenXml.Packaging.OpenXmlPackage OpenClone (string path, bool isEditable, DocumentFormat.OpenXml.Packaging.OpenSettings openSettings);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class DocumentFormat.OpenXml.Packaging.OpenXmlPackage OpenClone(string path, bool isEditable, class DocumentFormat.OpenXml.Packaging.OpenSettings openSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.OpenClone(System.String,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="isEditable" Type="System.Boolean" />
        <Parameter Name="openSettings" Type="DocumentFormat.OpenXml.Packaging.OpenSettings" />
      </Parameters>
      <Docs>
        <param name="path">The path and file name of the target OpenXml package.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <param name="openSettings">The advanced settings for opening a document.</param>
        <summary>
            Opens the cloned OpenXml package on the given file.
            </summary>
        <returns>A new instance of OpenXmlPackage.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentationPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.PresentationPart PresentationPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.PresentationPart PresentationPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.PresentationPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PresentationPart As PresentationPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.PresentationPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the PresentationPart of the PresentationDocument.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickAccessToolbarCustomizationsPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart QuickAccessToolbarCustomizationsPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart QuickAccessToolbarCustomizationsPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.QuickAccessToolbarCustomizationsPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QuickAccessToolbarCustomizationsPart As QuickAccessToolbarCustomizationsPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the QuickAccessToolbarCustomizationsPart of the PresentationDocument.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RibbonAndBackstageCustomizationsPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart RibbonAndBackstageCustomizationsPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart RibbonAndBackstageCustomizationsPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.RibbonAndBackstageCustomizationsPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RibbonAndBackstageCustomizationsPart As RibbonAndBackstageCustomizationsPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.OfficeAvailability(DocumentFormat.OpenXml.FileFormatVersions.Office2010)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the RibbonAndBackstageCustomizationsPart of the PresentationDocument, only available in Office2010.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RibbonExtensibilityPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart RibbonExtensibilityPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart RibbonExtensibilityPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.RibbonExtensibilityPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RibbonExtensibilityPart As RibbonExtensibilityPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the RibbonExtensibilityPart of the PresentationDocument.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbnailPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.ThumbnailPart ThumbnailPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.ThumbnailPart ThumbnailPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.ThumbnailPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThumbnailPart As ThumbnailPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.ThumbnailPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the ThumbnailPart of the PresentationDocument.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToFlatOpcDocument">
      <MemberSignature Language="C#" Value="public override System.Xml.Linq.XDocument ToFlatOpcDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.Linq.XDocument ToFlatOpcDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.ToFlatOpcDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFlatOpcDocument () As XDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XDocument</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Converts an OpenXml package in OPC format to an <see cref="T:System.Xml.Linq.XDocument" />
            in Flat OPC format.
            </summary>
        <returns>The OpenXml package in Flat OPC format.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebExTaskpanesPart">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart WebExTaskpanesPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart WebExTaskpanesPart" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.WebExTaskpanesPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebExTaskpanesPart As WebExTaskpanesPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>DocumentFormat.OpenXml.OfficeAvailability(DocumentFormat.OpenXml.FileFormatVersions.Office2013)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the WebExTaskpanesPart of the PresentationDocument, only available in Office2013.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>