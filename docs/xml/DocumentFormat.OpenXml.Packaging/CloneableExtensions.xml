<Type Name="CloneableExtensions" FullName="DocumentFormat.OpenXml.Packaging.CloneableExtensions">
  <TypeSignature Language="C#" Value="public static class CloneableExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CloneableExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Packaging.CloneableExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module CloneableExtensions" />
  <TypeSignature Language="F#" Value="type CloneableExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extensions to enable package cloning.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone&lt;TPackage&gt;">
      <MemberSignature Language="C#" Value="public static TPackage Clone&lt;TPackage&gt; (this TPackage openXmlPackage) where TPackage : DocumentFormat.OpenXml.Packaging.OpenXmlPackage;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TPackage Clone&lt;(class DocumentFormat.OpenXml.Packaging.OpenXmlPackage) TPackage&gt;(!!TPackage openXmlPackage) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.CloneableExtensions.Clone``1(``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Clone(Of TPackage As OpenXmlPackage) (openXmlPackage As TPackage) As TPackage" />
      <MemberSignature Language="F#" Value="static member Clone : 'Package -&gt; 'Package (requires 'Package :&gt; DocumentFormat.OpenXml.Packaging.OpenXmlPackage)" Usage="DocumentFormat.OpenXml.Packaging.CloneableExtensions.Clone openXmlPackage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TPackage</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TPackage">
          <Constraints>
            <BaseTypeName>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="openXmlPackage" Type="TPackage" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TPackage">To be added.</typeparam>
        <param name="openXmlPackage">To be added.</param>
        <summary>
            Creates an editable clone of this OpenXml package, opened on a
            <see cref="T:System.IO.MemoryStream" /> with expandable capacity and using
            default OpenSettings.
            </summary>
        <returns>The cloned OpenXml package.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone&lt;TPackage&gt;">
      <MemberSignature Language="C#" Value="public static TPackage Clone&lt;TPackage&gt; (this TPackage openXmlPackage, System.IO.Packaging.Package package) where TPackage : DocumentFormat.OpenXml.Packaging.OpenXmlPackage;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TPackage Clone&lt;(class DocumentFormat.OpenXml.Packaging.OpenXmlPackage) TPackage&gt;(!!TPackage openXmlPackage, class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.CloneableExtensions.Clone``1(``0,System.IO.Packaging.Package)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Clone(Of TPackage As OpenXmlPackage) (openXmlPackage As TPackage, package As Package) As TPackage" />
      <MemberSignature Language="F#" Value="static member Clone : 'Package * System.IO.Packaging.Package -&gt; 'Package (requires 'Package :&gt; DocumentFormat.OpenXml.Packaging.OpenXmlPackage)" Usage="DocumentFormat.OpenXml.Packaging.CloneableExtensions.Clone (openXmlPackage, package)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TPackage</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TPackage">
          <Constraints>
            <BaseTypeName>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="openXmlPackage" Type="TPackage" RefType="this" />
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <typeparam name="TPackage">To be added.</typeparam>
        <param name="openXmlPackage" />
        <param name="package">The specified instance of Package.</param>
        <summary>
            Creates a clone of this OpenXml package, opened on the specified instance
            of Package. The clone will be opened with the same OpenSettings as this
            OpenXml package.
            </summary>
        <returns>The cloned OpenXml package.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone&lt;TPackage&gt;">
      <MemberSignature Language="C#" Value="public static TPackage Clone&lt;TPackage&gt; (this TPackage openXmlPackage, System.IO.Stream stream) where TPackage : DocumentFormat.OpenXml.Packaging.OpenXmlPackage;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TPackage Clone&lt;(class DocumentFormat.OpenXml.Packaging.OpenXmlPackage) TPackage&gt;(!!TPackage openXmlPackage, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.CloneableExtensions.Clone``1(``0,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Clone(Of TPackage As OpenXmlPackage) (openXmlPackage As TPackage, stream As Stream) As TPackage" />
      <MemberSignature Language="F#" Value="static member Clone : 'Package * System.IO.Stream -&gt; 'Package (requires 'Package :&gt; DocumentFormat.OpenXml.Packaging.OpenXmlPackage)" Usage="DocumentFormat.OpenXml.Packaging.CloneableExtensions.Clone (openXmlPackage, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TPackage</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TPackage">
          <Constraints>
            <BaseTypeName>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="openXmlPackage" Type="TPackage" RefType="this" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <typeparam name="TPackage">To be added.</typeparam>
        <param name="openXmlPackage" />
        <param name="stream">The IO stream on which to open the OpenXml package.</param>
        <summary>
            Creates a clone of this OpenXml package, opened on the given stream.
            The cloned OpenXml package is opened with the same settings, i.e.,
            FileOpenAccess and OpenSettings, as this OpenXml package.
            </summary>
        <returns>The cloned OpenXml package.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone&lt;TPackage&gt;">
      <MemberSignature Language="C#" Value="public static TPackage Clone&lt;TPackage&gt; (this TPackage openXmlPackage, string path) where TPackage : DocumentFormat.OpenXml.Packaging.OpenXmlPackage;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TPackage Clone&lt;(class DocumentFormat.OpenXml.Packaging.OpenXmlPackage) TPackage&gt;(!!TPackage openXmlPackage, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.CloneableExtensions.Clone``1(``0,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Clone(Of TPackage As OpenXmlPackage) (openXmlPackage As TPackage, path As String) As TPackage" />
      <MemberSignature Language="F#" Value="static member Clone : 'Package * string -&gt; 'Package (requires 'Package :&gt; DocumentFormat.OpenXml.Packaging.OpenXmlPackage)" Usage="DocumentFormat.OpenXml.Packaging.CloneableExtensions.Clone (openXmlPackage, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TPackage</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TPackage">
          <Constraints>
            <BaseTypeName>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="openXmlPackage" Type="TPackage" RefType="this" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TPackage">To be added.</typeparam>
        <param name="openXmlPackage" />
        <param name="path">The path and file name of the target document.</param>
        <summary>
            Creates a clone of this OpenXml package opened from the given file
            (which will be created by cloning this OpenXml package).
            The cloned OpenXml package is opened with the same settings, i.e.,
            FileOpenAccess and OpenSettings, as this OpenXml package.
            </summary>
        <returns>The cloned document.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone&lt;TPackage&gt;">
      <MemberSignature Language="C#" Value="public static TPackage Clone&lt;TPackage&gt; (this TPackage openXmlPackage, System.IO.Packaging.Package package, DocumentFormat.OpenXml.Packaging.OpenSettings openSettings) where TPackage : DocumentFormat.OpenXml.Packaging.OpenXmlPackage;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TPackage Clone&lt;(class DocumentFormat.OpenXml.Packaging.OpenXmlPackage) TPackage&gt;(!!TPackage openXmlPackage, class System.IO.Packaging.Package package, class DocumentFormat.OpenXml.Packaging.OpenSettings openSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.CloneableExtensions.Clone``1(``0,System.IO.Packaging.Package,DocumentFormat.OpenXml.Packaging.OpenSettings)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Clone(Of TPackage As OpenXmlPackage) (openXmlPackage As TPackage, package As Package, openSettings As OpenSettings) As TPackage" />
      <MemberSignature Language="F#" Value="static member Clone : 'Package * System.IO.Packaging.Package * DocumentFormat.OpenXml.Packaging.OpenSettings -&gt; 'Package (requires 'Package :&gt; DocumentFormat.OpenXml.Packaging.OpenXmlPackage)" Usage="DocumentFormat.OpenXml.Packaging.CloneableExtensions.Clone (openXmlPackage, package, openSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TPackage</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TPackage">
          <Constraints>
            <BaseTypeName>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="openXmlPackage" Type="TPackage" RefType="this" />
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="openSettings" Type="DocumentFormat.OpenXml.Packaging.OpenSettings" />
      </Parameters>
      <Docs>
        <typeparam name="TPackage">To be added.</typeparam>
        <param name="openXmlPackage" />
        <param name="package">The specified instance of Package.</param>
        <param name="openSettings">The advanced settings for opening a document.</param>
        <summary>
            Creates a clone of this OpenXml package, opened on the specified instance
            of Package.
            </summary>
        <returns>The cloned OpenXml package.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone&lt;TPackage&gt;">
      <MemberSignature Language="C#" Value="public static TPackage Clone&lt;TPackage&gt; (this TPackage openXmlPackage, System.IO.Stream stream, bool isEditable) where TPackage : DocumentFormat.OpenXml.Packaging.OpenXmlPackage;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TPackage Clone&lt;(class DocumentFormat.OpenXml.Packaging.OpenXmlPackage) TPackage&gt;(!!TPackage openXmlPackage, class System.IO.Stream stream, bool isEditable) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.CloneableExtensions.Clone``1(``0,System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Clone(Of TPackage As OpenXmlPackage) (openXmlPackage As TPackage, stream As Stream, isEditable As Boolean) As TPackage" />
      <MemberSignature Language="F#" Value="static member Clone : 'Package * System.IO.Stream * bool -&gt; 'Package (requires 'Package :&gt; DocumentFormat.OpenXml.Packaging.OpenXmlPackage)" Usage="DocumentFormat.OpenXml.Packaging.CloneableExtensions.Clone (openXmlPackage, stream, isEditable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TPackage</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TPackage">
          <Constraints>
            <BaseTypeName>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="openXmlPackage" Type="TPackage" RefType="this" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="isEditable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TPackage">To be added.</typeparam>
        <param name="openXmlPackage" />
        <param name="stream">The IO stream on which to open the OpenXml package.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <summary>
            Creates a clone of this OpenXml package, opened on the given stream.
            The cloned OpenXml package is opened with the same OpenSettings as
            this OpenXml package.
            </summary>
        <returns>The cloned OpenXml package.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone&lt;TPackage&gt;">
      <MemberSignature Language="C#" Value="public static TPackage Clone&lt;TPackage&gt; (this TPackage openXmlPackage, string path, bool isEditable) where TPackage : DocumentFormat.OpenXml.Packaging.OpenXmlPackage;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TPackage Clone&lt;(class DocumentFormat.OpenXml.Packaging.OpenXmlPackage) TPackage&gt;(!!TPackage openXmlPackage, string path, bool isEditable) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.CloneableExtensions.Clone``1(``0,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Clone(Of TPackage As OpenXmlPackage) (openXmlPackage As TPackage, path As String, isEditable As Boolean) As TPackage" />
      <MemberSignature Language="F#" Value="static member Clone : 'Package * string * bool -&gt; 'Package (requires 'Package :&gt; DocumentFormat.OpenXml.Packaging.OpenXmlPackage)" Usage="DocumentFormat.OpenXml.Packaging.CloneableExtensions.Clone (openXmlPackage, path, isEditable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TPackage</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TPackage">
          <Constraints>
            <BaseTypeName>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="openXmlPackage" Type="TPackage" RefType="this" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="isEditable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TPackage">To be added.</typeparam>
        <param name="openXmlPackage" />
        <param name="path">The path and file name of the target document.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <summary>
            Creates a clone of this OpenXml package opened from the given file
            (which will be created by cloning this OpenXml package).
            The cloned OpenXml package is opened with the same OpenSettings as
            this OpenXml package.
            </summary>
        <returns>The cloned document.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone&lt;TPackage&gt;">
      <MemberSignature Language="C#" Value="public static TPackage Clone&lt;TPackage&gt; (this TPackage openXmlPackage, System.IO.Stream stream, bool isEditable, DocumentFormat.OpenXml.Packaging.OpenSettings openSettings) where TPackage : DocumentFormat.OpenXml.Packaging.OpenXmlPackage;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TPackage Clone&lt;(class DocumentFormat.OpenXml.Packaging.OpenXmlPackage) TPackage&gt;(!!TPackage openXmlPackage, class System.IO.Stream stream, bool isEditable, class DocumentFormat.OpenXml.Packaging.OpenSettings openSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.CloneableExtensions.Clone``1(``0,System.IO.Stream,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Clone(Of TPackage As OpenXmlPackage) (openXmlPackage As TPackage, stream As Stream, isEditable As Boolean, openSettings As OpenSettings) As TPackage" />
      <MemberSignature Language="F#" Value="static member Clone : 'Package * System.IO.Stream * bool * DocumentFormat.OpenXml.Packaging.OpenSettings -&gt; 'Package (requires 'Package :&gt; DocumentFormat.OpenXml.Packaging.OpenXmlPackage)" Usage="DocumentFormat.OpenXml.Packaging.CloneableExtensions.Clone (openXmlPackage, stream, isEditable, openSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TPackage</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TPackage">
          <Constraints>
            <BaseTypeName>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="openXmlPackage" Type="TPackage" RefType="this" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="isEditable" Type="System.Boolean" />
        <Parameter Name="openSettings" Type="DocumentFormat.OpenXml.Packaging.OpenSettings" />
      </Parameters>
      <Docs>
        <typeparam name="TPackage">To be added.</typeparam>
        <param name="openXmlPackage" />
        <param name="stream">The IO stream on which to open the OpenXml package.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <param name="openSettings">The advanced settings for opening a document.</param>
        <summary>
            Creates a clone of this OpenXml package, opened on the given stream.
            </summary>
        <returns>The cloned OpenXml package.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone&lt;TPackage&gt;">
      <MemberSignature Language="C#" Value="public static TPackage Clone&lt;TPackage&gt; (this TPackage openXmlPackage, string path, bool isEditable, DocumentFormat.OpenXml.Packaging.OpenSettings? openSettings) where TPackage : DocumentFormat.OpenXml.Packaging.OpenXmlPackage;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TPackage Clone&lt;(class DocumentFormat.OpenXml.Packaging.OpenXmlPackage) TPackage&gt;(!!TPackage openXmlPackage, string path, bool isEditable, class DocumentFormat.OpenXml.Packaging.OpenSettings openSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.CloneableExtensions.Clone``1(``0,System.String,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Clone(Of TPackage As OpenXmlPackage) (openXmlPackage As TPackage, path As String, isEditable As Boolean, openSettings As OpenSettings) As TPackage" />
      <MemberSignature Language="F#" Value="static member Clone : 'Package * string * bool * DocumentFormat.OpenXml.Packaging.OpenSettings -&gt; 'Package (requires 'Package :&gt; DocumentFormat.OpenXml.Packaging.OpenXmlPackage)" Usage="DocumentFormat.OpenXml.Packaging.CloneableExtensions.Clone (openXmlPackage, path, isEditable, openSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Framework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TPackage</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TPackage">
          <Constraints>
            <BaseTypeName>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="openXmlPackage" Type="TPackage" RefType="this" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="isEditable" Type="System.Boolean" />
        <Parameter Name="openSettings" Type="DocumentFormat.OpenXml.Packaging.OpenSettings" />
      </Parameters>
      <Docs>
        <typeparam name="TPackage">To be added.</typeparam>
        <param name="openXmlPackage" />
        <param name="path">The path and file name of the target document.</param>
        <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
        <param name="openSettings">The advanced settings for opening a document.</param>
        <summary>
            Creates a clone of this OpenXml package opened from the given file (which
            will be created by cloning this OpenXml package).
            </summary>
        <returns>The cloned document.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
