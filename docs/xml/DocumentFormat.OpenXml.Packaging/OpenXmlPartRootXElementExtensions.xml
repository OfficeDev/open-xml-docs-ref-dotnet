<Type Name="OpenXmlPartRootXElementExtensions" FullName="DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions">
  <TypeSignature Language="C#" Value="public static class OpenXmlPartRootXElementExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit OpenXmlPartRootXElementExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module OpenXmlPartRootXElementExtensions" />
  <TypeSignature Language="F#" Value="type OpenXmlPartRootXElementExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml.Linq</AssemblyName>
    <AssemblyVersion>2.15.0.0</AssemblyVersion>
    <AssemblyVersion>2.16.0.0</AssemblyVersion>
    <AssemblyVersion>2.17.1.0</AssemblyVersion>
    <AssemblyVersion>2.18.0.0</AssemblyVersion>
    <AssemblyVersion>2.19.0.0</AssemblyVersion>
    <AssemblyVersion>2.20.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="openxml-3.0.1">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="openxml-3.0.1">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extensions to access the <see cref="T:System.Xml.Linq.XElement" /> representation of an <see cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPart" />'s
            root element, either directly or via the containing <see cref="T:System.Xml.Linq.XDocument" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetXDocument">
      <MemberSignature Language="C#" Value="public static System.Xml.Linq.XDocument GetXDocument (this DocumentFormat.OpenXml.Packaging.OpenXmlPart part);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Linq.XDocument GetXDocument(class DocumentFormat.OpenXml.Packaging.OpenXmlPart part) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.GetXDocument(DocumentFormat.OpenXml.Packaging.OpenXmlPart)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetXDocument (part As OpenXmlPart) As XDocument" />
      <MemberSignature Language="F#" Value="static member GetXDocument : DocumentFormat.OpenXml.Packaging.OpenXmlPart -&gt; System.Xml.Linq.XDocument" Usage="DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.GetXDocument part" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Linq</AssemblyName>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="DocumentFormat.OpenXml.Packaging.OpenXmlPart" RefType="this" />
      </Parameters>
      <Docs>
        <param name="part">The part to get the contents of.</param>
        <summary>
            Gets an <see cref="T:System.Xml.Linq.XDocument" /> representation of the <paramref name="part" />.
            </summary>
        <returns>An <see cref="T:System.Xml.Linq.XDocument" />.</returns>
        <remarks>
          <para>
            This method always returns the same <see cref="T:System.Xml.Linq.XDocument" /> instance, unless that
            instance is changed via <see cref="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.SetXDocument(DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.Xml.Linq.XDocument)" />. Calling this method has the same
            effect as calling <c>part.GetXElement().Document</c>.
            </para>
          <para>
            When called with a given <see cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPart" /> for the first time after having
            opened the containing <see cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackage" /> or saved the strongly-typed
            <see cref="T:DocumentFormat.OpenXml.OpenXmlPartRootElement" /> to the OpenXmlPart, deserializes, caches, and
            returns the outer XML of an already loaded OpenXmlPartRootElement or the content
            of the OpenXmlPart as an <see cref="T:System.Xml.Linq.XDocument" />. In the following calls, directly
            returns the cached XDocument.
            </para>
        </remarks>
        <altmember cref="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.GetXElement(DocumentFormat.OpenXml.Packaging.OpenXmlPart)" />
        <altmember cref="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.SetXDocument(DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.Xml.Linq.XDocument)" />
        <altmember cref="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.SaveXDocument(DocumentFormat.OpenXml.Packaging.OpenXmlPart)" />
      </Docs>
    </Member>
    <Member MemberName="GetXElement">
      <MemberSignature Language="C#" Value="public static System.Xml.Linq.XElement? GetXElement (this DocumentFormat.OpenXml.Packaging.OpenXmlPart part);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Linq.XElement GetXElement(class DocumentFormat.OpenXml.Packaging.OpenXmlPart part) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.GetXElement(DocumentFormat.OpenXml.Packaging.OpenXmlPart)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetXElement (part As OpenXmlPart) As XElement" />
      <MemberSignature Language="F#" Value="static member GetXElement : DocumentFormat.OpenXml.Packaging.OpenXmlPart -&gt; System.Xml.Linq.XElement" Usage="DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.GetXElement part" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Linq</AssemblyName>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="DocumentFormat.OpenXml.Packaging.OpenXmlPart" RefType="this" />
      </Parameters>
      <Docs>
        <param name="part">The part to get the contents of.</param>
        <summary>
            Gets an <see cref="T:System.Xml.Linq.XElement" /> representation of the <paramref name="part" />.
            </summary>
        <returns>An <see cref="T:System.Xml.Linq.XElement" />.</returns>
        <remarks>
          <para>
            Calling this method has same effect as calling <c>part.GetXDocument().Root</c>.
            </para>
          <para>
            When called with a given <see cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPart" /> for the first time after having
            opened the containing <see cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackage" /> or saved the strongly-typed
            <see cref="T:DocumentFormat.OpenXml.OpenXmlPartRootElement" /> to the OpenXmlPart, deserializes, caches, and
            returns the outer XML of an already loaded OpenXmlPartRootElement or the content
            of the OpenXmlPart as an <see cref="T:System.Xml.Linq.XElement" />. In the following calls, directly
            returns the cached XElement.
            </para>
        </remarks>
        <altmember cref="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.GetXDocument(DocumentFormat.OpenXml.Packaging.OpenXmlPart)" />
        <altmember cref="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.SetXElement(DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.Xml.Linq.XElement)" />
        <altmember cref="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.SaveXElement(DocumentFormat.OpenXml.Packaging.OpenXmlPart)" />
      </Docs>
    </Member>
    <Member MemberName="IsRootXElementLoaded">
      <MemberSignature Language="C#" Value="public static bool IsRootXElementLoaded (this DocumentFormat.OpenXml.Packaging.OpenXmlPart part);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsRootXElementLoaded(class DocumentFormat.OpenXml.Packaging.OpenXmlPart part) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.IsRootXElementLoaded(DocumentFormat.OpenXml.Packaging.OpenXmlPart)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsRootXElementLoaded (part As OpenXmlPart) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsRootXElementLoaded : DocumentFormat.OpenXml.Packaging.OpenXmlPart -&gt; bool" Usage="DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.IsRootXElementLoaded part" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Linq</AssemblyName>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="DocumentFormat.OpenXml.Packaging.OpenXmlPart" RefType="this" />
      </Parameters>
      <Docs>
        <param name="part">The <see cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPart" />.</param>
        <summary>
            Gets a value indicating whether the root <see cref="T:System.Xml.Linq.XElement" /> is loaded from the part
            or it has been set.
            </summary>
        <returns>
          <see langword="true" />, if the current root <see cref="T:System.Xml.Linq.XElement" /> is loaded from the part or it has been set;
            <see langword="false" />, otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveXDocument">
      <MemberSignature Language="C#" Value="public static bool SaveXDocument (this DocumentFormat.OpenXml.Packaging.OpenXmlPart part);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SaveXDocument(class DocumentFormat.OpenXml.Packaging.OpenXmlPart part) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.SaveXDocument(DocumentFormat.OpenXml.Packaging.OpenXmlPart)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SaveXDocument (part As OpenXmlPart) As Boolean" />
      <MemberSignature Language="F#" Value="static member SaveXDocument : DocumentFormat.OpenXml.Packaging.OpenXmlPart -&gt; bool" Usage="DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.SaveXDocument part" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Linq</AssemblyName>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="DocumentFormat.OpenXml.Packaging.OpenXmlPart" RefType="this" />
      </Parameters>
      <Docs>
        <param name="part">The part to save to.</param>
        <summary>
            Saves the current <see cref="T:System.Xml.Linq.XDocument" /> to the part if it and its <see cref="P:System.Xml.Linq.XDocument.Root" />
            element is not <see langword="null" />.
            </summary>
        <returns>
          <see langword="true" />, if the current <see cref="T:System.Xml.Linq.XDocument" /> was saved to the part;
            <see langword="false" />, otherwise.
            </returns>
        <remarks>
            Calling this method has the same effect as calling <seealso cref="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.SaveXElement(DocumentFormat.OpenXml.Packaging.OpenXmlPart)" />.
            This method is provided for naming consistency with <see cref="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.GetXDocument(DocumentFormat.OpenXml.Packaging.OpenXmlPart)" /> and
            <see cref="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.SetXDocument(DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.Xml.Linq.XDocument)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveXElement">
      <MemberSignature Language="C#" Value="public static bool SaveXElement (this DocumentFormat.OpenXml.Packaging.OpenXmlPart part);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SaveXElement(class DocumentFormat.OpenXml.Packaging.OpenXmlPart part) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.SaveXElement(DocumentFormat.OpenXml.Packaging.OpenXmlPart)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SaveXElement (part As OpenXmlPart) As Boolean" />
      <MemberSignature Language="F#" Value="static member SaveXElement : DocumentFormat.OpenXml.Packaging.OpenXmlPart -&gt; bool" Usage="DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.SaveXElement part" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Linq</AssemblyName>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="DocumentFormat.OpenXml.Packaging.OpenXmlPart" RefType="this" />
      </Parameters>
      <Docs>
        <param name="part">The part to save to.</param>
        <summary>
            Saves the current <see cref="T:System.Xml.Linq.XDocument" /> to the part if it and its <see cref="P:System.Xml.Linq.XDocument.Root" />
            element is not <see langword="null" />.
            </summary>
        <returns>
          <see langword="true" />, if the current <see cref="T:System.Xml.Linq.XDocument" /> was saved to the part;
            <see langword="false" />, otherwise.
            </returns>
        <remarks>
            Calling this method has the same effect as calling <see cref="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.SaveXDocument(DocumentFormat.OpenXml.Packaging.OpenXmlPart)" />.
            This method is provided for naming consistency with <see cref="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.GetXElement(DocumentFormat.OpenXml.Packaging.OpenXmlPart)" /> and
            <see cref="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.SetXElement(DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.Xml.Linq.XElement)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetXDocument">
      <MemberSignature Language="C#" Value="public static void SetXDocument (this DocumentFormat.OpenXml.Packaging.OpenXmlPart part, System.Xml.Linq.XDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetXDocument(class DocumentFormat.OpenXml.Packaging.OpenXmlPart part, class System.Xml.Linq.XDocument document) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.SetXDocument(DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.Xml.Linq.XDocument)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetXDocument (part As OpenXmlPart, document As XDocument)" />
      <MemberSignature Language="F#" Value="static member SetXDocument : DocumentFormat.OpenXml.Packaging.OpenXmlPart * System.Xml.Linq.XDocument -&gt; unit" Usage="DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.SetXDocument (part, document)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Linq</AssemblyName>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="DocumentFormat.OpenXml.Packaging.OpenXmlPart" RefType="this" />
        <Parameter Name="document" Type="System.Xml.Linq.XDocument" />
      </Parameters>
      <Docs>
        <param name="part">The <see cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPart" />.</param>
        <param name="document">The <see cref="T:System.Xml.Linq.XDocument" />.</param>
        <summary>
            Sets the <see cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPart" />'s <see cref="T:System.Xml.Linq.XDocument" /> to the given XDocument,
            serializes and writes the XDocument to the OpenXmlPart, and reloads the OpenXmlPart's
            <see cref="T:DocumentFormat.OpenXml.OpenXmlPartRootElement" /> if it was previously loaded.
            </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.GetXDocument(DocumentFormat.OpenXml.Packaging.OpenXmlPart)" />
        <altmember cref="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.SaveXDocument(DocumentFormat.OpenXml.Packaging.OpenXmlPart)" />
      </Docs>
    </Member>
    <Member MemberName="SetXElement">
      <MemberSignature Language="C#" Value="public static void SetXElement (this DocumentFormat.OpenXml.Packaging.OpenXmlPart part, System.Xml.Linq.XElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetXElement(class DocumentFormat.OpenXml.Packaging.OpenXmlPart part, class System.Xml.Linq.XElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.SetXElement(DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.Xml.Linq.XElement)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetXElement (part As OpenXmlPart, element As XElement)" />
      <MemberSignature Language="F#" Value="static member SetXElement : DocumentFormat.OpenXml.Packaging.OpenXmlPart * System.Xml.Linq.XElement -&gt; unit" Usage="DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.SetXElement (part, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml.Linq</AssemblyName>
        <AssemblyVersion>2.15.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
        <AssemblyVersion>2.17.1.0</AssemblyVersion>
        <AssemblyVersion>2.18.0.0</AssemblyVersion>
        <AssemblyVersion>2.19.0.0</AssemblyVersion>
        <AssemblyVersion>2.20.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="DocumentFormat.OpenXml.Packaging.OpenXmlPart" RefType="this" />
        <Parameter Name="element" Type="System.Xml.Linq.XElement" />
      </Parameters>
      <Docs>
        <param name="part">The <see cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPart" />.</param>
        <param name="element">The <see cref="T:System.Xml.Linq.XElement" />.</param>
        <summary>
            Sets the <see cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPart" />'s root <see cref="T:System.Xml.Linq.XElement" /> to the given XElement,
            serializes and writes the XElement to the OpenXmlPart, and reloads the OpenXmlPart's
            <see cref="T:DocumentFormat.OpenXml.OpenXmlPartRootElement" /> if it was previously loaded.
            </summary>
        <remarks>
            Effectively sets the <see cref="P:System.Xml.Linq.XDocument.Root" /> property of the <see cref="T:System.Xml.Linq.XDocument" />
            returned by <see cref="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.GetXDocument(DocumentFormat.OpenXml.Packaging.OpenXmlPart)" />.
            </remarks>
        <altmember cref="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.GetXElement(DocumentFormat.OpenXml.Packaging.OpenXmlPart)" />
        <altmember cref="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartRootXElementExtensions.SaveXElement(DocumentFormat.OpenXml.Packaging.OpenXmlPart)" />
      </Docs>
    </Member>
  </Members>
</Type>
