<Type Name="OpenXmlPart" FullName="DocumentFormat.OpenXml.Packaging.OpenXmlPart">
  <TypeSignature Language="C#" Value="public abstract class OpenXmlPart : DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit OpenXmlPart extends DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Packaging.OpenXmlPart" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class OpenXmlPart&#xA;Inherits OpenXmlPartContainer" />
  <TypeSignature Language="F#" Value="type OpenXmlPart = class&#xA;    inherit OpenXmlPartContainer" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents an abstract base class for all OpenXml parts.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal OpenXmlPart ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>OpenXmlPart constructor</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public virtual string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ContentType As String" />
      <MemberSignature Language="F#" Value="member this.ContentType : string" Usage="DocumentFormat.OpenXml.Packaging.OpenXmlPart.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the content type (MIME type) of the content data in the part.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeedData">
      <MemberSignature Language="C#" Value="public void FeedData (System.IO.Stream sourceStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FeedData(class System.IO.Stream sourceStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.FeedData(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FeedData (sourceStream As Stream)" />
      <MemberSignature Language="F#" Value="member this.FeedData : System.IO.Stream -&gt; unit" Usage="openXmlPart.FeedData sourceStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="sourceStream">The source stream to be read from.</param>
        <summary>Feeds data into the part stream.             The stream of the part will be truncated at first.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when "sourceStream" is a null reference.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentParts">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.Packaging.OpenXmlPart&gt; GetParentParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.Packaging.OpenXmlPart&gt; GetParentParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.GetParentParts" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetParentParts () As IEnumerable(Of OpenXmlPart)" />
      <MemberSignature Language="F#" Value="member this.GetParentParts : unit -&gt; seq&lt;DocumentFormat.OpenXml.Packaging.OpenXmlPart&gt;" Usage="openXmlPart.GetParentParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(DocumentFormat.OpenXml.Packaging.OpenXmlPart/&lt;GetParentParts&gt;d__16))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.Packaging.OpenXmlPart&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enumerates all parents that reference this part anywhere in the document.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As Stream" />
      <MemberSignature Language="F#" Value="member this.GetStream : unit -&gt; System.IO.Stream" Usage="openXmlPart.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the part content data stream.</summary>
        <returns>The content data stream for the part.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream (System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream(valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.GetStream(System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (mode As FileMode) As Stream" />
      <MemberSignature Language="F#" Value="member this.GetStream : System.IO.FileMode -&gt; System.IO.Stream" Usage="openXmlPart.GetStream mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="mode">The I/O mode in which to open the content stream.</param>
        <summary>Returns the content stream that was opened using a specified I/O FileMode.</summary>
        <returns>The content stream of the part.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream (System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream(valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.GetStream(System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (mode As FileMode, access As FileAccess) As Stream" />
      <MemberSignature Language="F#" Value="member this.GetStream : System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Stream" Usage="openXmlPart.GetStream (mode, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="mode">The I/O mode in which to open the content stream.</param>
        <param name="access">The access permissions to use in opening the content stream.</param>
        <summary>Returns the part content stream that was opened using a specified FileMode and FileAccess.</summary>
        <returns>The content stream of the part.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenXmlPackage">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Packaging.OpenXmlPackage OpenXmlPackage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Packaging.OpenXmlPackage OpenXmlPackage" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart.OpenXmlPackage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OpenXmlPackage As OpenXmlPackage" />
      <MemberSignature Language="F#" Value="member this.OpenXmlPackage : DocumentFormat.OpenXml.Packaging.OpenXmlPackage" Usage="DocumentFormat.OpenXml.Packaging.OpenXmlPart.OpenXmlPackage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Packaging.OpenXmlPackage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents a part that is in the OpenXmlPackage container.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipType">
      <MemberSignature Language="C#" Value="public abstract string RelationshipType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipType" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart.RelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RelationshipType As String" />
      <MemberSignature Language="F#" Value="member this.RelationshipType : string" Usage="DocumentFormat.OpenXml.Packaging.OpenXmlPart.RelationshipType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The relationship type of the part.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootElement">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.OpenXmlPartRootElement RootElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.OpenXmlPartRootElement RootElement" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart.RootElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootElement As OpenXmlPartRootElement" />
      <MemberSignature Language="F#" Value="member this.RootElement : DocumentFormat.OpenXml.OpenXmlPartRootElement" Usage="DocumentFormat.OpenXml.Packaging.OpenXmlPart.RootElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlPartRootElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the root element of the current part.             Returns null when the current part is empty or is not and XML content type.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowIfObjectDisposed">
      <MemberSignature Language="C#" Value="protected override sealed void ThrowIfObjectDisposed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ThrowIfObjectDisposed() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.ThrowIfObjectDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ThrowIfObjectDisposed ()" />
      <MemberSignature Language="F#" Value="override this.ThrowIfObjectDisposed : unit -&gt; unit" Usage="openXmlPart.ThrowIfObjectDisposed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether the object is already disposed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As Uri" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="DocumentFormat.OpenXml.Packaging.OpenXmlPart.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the internal part path in the package.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateXml">
      <MemberSignature Language="C#" Value="public void ValidateXml (string schemaFile, System.Xml.Schema.ValidationEventHandler validationEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateXml(string schemaFile, class System.Xml.Schema.ValidationEventHandler validationEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.ValidateXml(System.String,System.Xml.Schema.ValidationEventHandler)" />
      <MemberSignature Language="F#" Value="member this.ValidateXml : string * System.Xml.Schema.ValidationEventHandler -&gt; unit" Usage="openXmlPart.ValidateXml (schemaFile, validationEventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This functionality is obsolete and will be removed from future version release. Please see OpenXmlValidator class for supported validation functionality.", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaFile" Type="System.String" />
        <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
      </Parameters>
      <Docs>
        <param name="schemaFile">The XML schema to be used.</param>
        <param name="validationEventHandler">ValidationEventHandler for validation events.</param>
        <summary>Validates the XML content of the part by using the specified schema.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateXml">
      <MemberSignature Language="C#" Value="public void ValidateXml (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.ValidationEventHandler validationEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateXml(class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.Schema.ValidationEventHandler validationEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.ValidateXml(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" />
      <MemberSignature Language="F#" Value="member this.ValidateXml : System.Xml.Schema.XmlSchemaSet * System.Xml.Schema.ValidationEventHandler -&gt; unit" Usage="openXmlPart.ValidateXml (schemas, validationEventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This functionality is obsolete and will be removed from future version release. Please see OpenXmlValidator class for supported validation functionality.", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
      </Parameters>
      <Docs>
        <param name="schemas">The set of XML schemas to be used.</param>
        <param name="validationEventHandler">ValidationEventHandler for validation events.</param>
        <summary>Validates the XML content of the part by using the specified schema.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>